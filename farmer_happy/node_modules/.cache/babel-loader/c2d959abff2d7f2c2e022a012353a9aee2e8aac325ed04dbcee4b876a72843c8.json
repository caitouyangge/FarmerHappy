{"ast":null,"code":"import { computed } from 'vue';\nimport logger from '../utils/logger';\nexport default {\n  name: 'ProductCard',\n  props: {\n    product: {\n      type: Object,\n      required: true\n    },\n    isFarmer: {\n      type: Boolean,\n      default: false\n    },\n    selected: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['select', 'view', 'edit', 'delete', 'on-shelf', 'off-shelf', 'purchase'],\n  setup(props, {\n    emit\n  }) {\n    // 状态样式类\n    const statusClass = computed(() => {\n      const statusMap = {\n        draft: 'status-draft',\n        on_shelf: 'status-on-shelf',\n        off_shelf: 'status-off-shelf',\n        sold_out: 'status-sold-out'\n      };\n      return statusMap[props.product.status] || 'status-draft';\n    });\n\n    // 状态文本\n    const statusText = computed(() => {\n      const statusMap = {\n        draft: '草稿',\n        on_shelf: '在售',\n        off_shelf: '下架',\n        sold_out: '售罄'\n      };\n      return statusMap[props.product.status] || '未知';\n    });\n\n    // 格式化日期\n    const formatDate = dateString => {\n      if (!dateString) return '未知';\n      try {\n        const date = new Date(dateString);\n        return date.toLocaleDateString('zh-CN', {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit'\n        });\n      } catch (error) {\n        return '未知';\n      }\n    };\n\n    // 处理选择\n    const handleSelect = event => {\n      logger.userAction('PRODUCT_SELECT', {\n        productId: props.product.product_id,\n        selected: event.target.checked\n      });\n      emit('select', props.product.product_id, event.target.checked);\n    };\n\n    // 处理查看\n    const handleView = () => {\n      logger.userAction('PRODUCT_VIEW', {\n        productId: props.product.product_id\n      });\n      emit('view', props.product.product_id);\n    };\n\n    // 处理编辑\n    const handleEdit = () => {\n      logger.userAction('PRODUCT_EDIT', {\n        productId: props.product.product_id\n      });\n      emit('edit', props.product);\n    };\n\n    // 处理删除\n    const handleDelete = () => {\n      logger.userAction('PRODUCT_DELETE', {\n        productId: props.product.product_id\n      });\n      emit('delete', props.product.product_id);\n    };\n\n    // 处理上架\n    const handleOnShelf = () => {\n      logger.userAction('PRODUCT_ON_SHELF', {\n        productId: props.product.product_id\n      });\n      emit('on-shelf', props.product.product_id);\n    };\n\n    // 处理下架\n    const handleOffShelf = () => {\n      logger.userAction('PRODUCT_OFF_SHELF', {\n        productId: props.product.product_id\n      });\n      emit('off-shelf', props.product.product_id);\n    };\n\n    // 处理购买\n    const handlePurchase = () => {\n      logger.userAction('PRODUCT_PURCHASE', {\n        productId: props.product.product_id\n      });\n      emit('purchase', props.product);\n    };\n    return {\n      statusClass,\n      statusText,\n      formatDate,\n      handleSelect,\n      handleView,\n      handleEdit,\n      handleDelete,\n      handleOnShelf,\n      handleOffShelf,\n      handlePurchase\n    };\n  }\n};","map":{"version":3,"names":["computed","logger","name","props","product","type","Object","required","isFarmer","Boolean","default","selected","emits","setup","emit","statusClass","statusMap","draft","on_shelf","off_shelf","sold_out","status","statusText","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","error","handleSelect","event","userAction","productId","product_id","target","checked","handleView","handleEdit","handleDelete","handleOnShelf","handleOffShelf","handlePurchase"],"sources":["D:\\STUDY\\FarmerHappy\\farmer_happy\\src\\components\\ProductCard.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-card\" :class=\"{ 'selected': selected }\">\r\n    <!-- 选择框 -->\r\n    <div class=\"card-checkbox\" v-if=\"isFarmer\">\r\n      <input\r\n        type=\"checkbox\"\r\n        :checked=\"selected\"\r\n        @change=\"handleSelect\"\r\n        class=\"checkbox-input\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 产品图片 -->\r\n    <div class=\"product-image\">\r\n      <div class=\"image-placeholder\">\r\n        <span class=\"image-icon\">🌾</span>\r\n      </div>\r\n      <div class=\"status-badge\" :class=\"statusClass\">\r\n        {{ statusText }}\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 产品信息 -->\r\n    <div class=\"product-info\">\r\n      <h3 class=\"product-title\" @click=\"handleView\">{{ product.title }}</h3>\r\n      <p class=\"product-category\">{{ product.category }}</p>\r\n      <p class=\"product-description\">{{ product.description || '暂无描述' }}</p>\r\n      \r\n      <div class=\"product-meta\">\r\n        <div class=\"meta-item\">\r\n          <span class=\"meta-label\">价格:</span>\r\n          <span class=\"meta-value price\">¥{{ product.price || '面议' }}</span>\r\n        </div>\r\n        <div class=\"meta-item\">\r\n          <span class=\"meta-label\">库存:</span>\r\n          <span class=\"meta-value\">{{ product.stock || 0 }} {{ product.unit || '件' }}</span>\r\n        </div>\r\n        <div class=\"meta-item\">\r\n          <span class=\"meta-label\">发布时间:</span>\r\n          <span class=\"meta-value\">{{ formatDate(product.created_at) }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 操作按钮 -->\r\n    <div class=\"product-actions\">\r\n      <button class=\"action-btn view-btn\" @click=\"handleView\">\r\n        <span class=\"btn-icon\">👁</span>\r\n        查看\r\n      </button>\r\n      \r\n      <!-- 农户操作 -->\r\n      <template v-if=\"isFarmer\">\r\n        <button class=\"action-btn edit-btn\" @click=\"handleEdit\">\r\n          <span class=\"btn-icon\">✏️</span>\r\n          编辑\r\n        </button>\r\n        \r\n        <button \r\n          v-if=\"product.status === 'draft' || product.status === 'off_shelf'\"\r\n          class=\"action-btn on-shelf-btn\" \r\n          @click=\"handleOnShelf\"\r\n        >\r\n          <span class=\"btn-icon\">📤</span>\r\n          上架\r\n        </button>\r\n        \r\n        <button \r\n          v-if=\"product.status === 'on_shelf'\"\r\n          class=\"action-btn off-shelf-btn\" \r\n          @click=\"handleOffShelf\"\r\n        >\r\n          <span class=\"btn-icon\">📥</span>\r\n          下架\r\n        </button>\r\n        \r\n        <button class=\"action-btn delete-btn\" @click=\"handleDelete\">\r\n          <span class=\"btn-icon\">🗑️</span>\r\n          删除\r\n        </button>\r\n      </template>\r\n      \r\n      <!-- 买家操作 -->\r\n      <template v-else>\r\n        <button \r\n          v-if=\"product.status === 'on_shelf' && product.stock > 0\"\r\n          class=\"action-btn purchase-btn\" \r\n          @click=\"handlePurchase\"\r\n        >\r\n          <span class=\"btn-icon\">🛒</span>\r\n          购买\r\n        </button>\r\n        \r\n        <button \r\n          v-else-if=\"product.status === 'sold_out'\"\r\n          class=\"action-btn disabled-btn\" \r\n          disabled\r\n        >\r\n          <span class=\"btn-icon\">❌</span>\r\n          售罄\r\n        </button>\r\n      </template>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { computed } from 'vue';\r\nimport logger from '../utils/logger';\r\n\r\nexport default {\r\n  name: 'ProductCard',\r\n  props: {\r\n    product: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    isFarmer: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    selected: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  emits: ['select', 'view', 'edit', 'delete', 'on-shelf', 'off-shelf', 'purchase'],\r\n  setup(props, { emit }) {\r\n    // 状态样式类\r\n    const statusClass = computed(() => {\r\n      const statusMap = {\r\n        draft: 'status-draft',\r\n        on_shelf: 'status-on-shelf',\r\n        off_shelf: 'status-off-shelf',\r\n        sold_out: 'status-sold-out'\r\n      };\r\n      return statusMap[props.product.status] || 'status-draft';\r\n    });\r\n\r\n    // 状态文本\r\n    const statusText = computed(() => {\r\n      const statusMap = {\r\n        draft: '草稿',\r\n        on_shelf: '在售',\r\n        off_shelf: '下架',\r\n        sold_out: '售罄'\r\n      };\r\n      return statusMap[props.product.status] || '未知';\r\n    });\r\n\r\n    // 格式化日期\r\n    const formatDate = (dateString) => {\r\n      if (!dateString) return '未知';\r\n      try {\r\n        const date = new Date(dateString);\r\n        return date.toLocaleDateString('zh-CN', {\r\n          year: 'numeric',\r\n          month: '2-digit',\r\n          day: '2-digit'\r\n        });\r\n      } catch (error) {\r\n        return '未知';\r\n      }\r\n    };\r\n\r\n    // 处理选择\r\n    const handleSelect = (event) => {\r\n      logger.userAction('PRODUCT_SELECT', { \r\n        productId: props.product.product_id,\r\n        selected: event.target.checked \r\n      });\r\n      emit('select', props.product.product_id, event.target.checked);\r\n    };\r\n\r\n    // 处理查看\r\n    const handleView = () => {\r\n      logger.userAction('PRODUCT_VIEW', { productId: props.product.product_id });\r\n      emit('view', props.product.product_id);\r\n    };\r\n\r\n    // 处理编辑\r\n    const handleEdit = () => {\r\n      logger.userAction('PRODUCT_EDIT', { productId: props.product.product_id });\r\n      emit('edit', props.product);\r\n    };\r\n\r\n    // 处理删除\r\n    const handleDelete = () => {\r\n      logger.userAction('PRODUCT_DELETE', { productId: props.product.product_id });\r\n      emit('delete', props.product.product_id);\r\n    };\r\n\r\n    // 处理上架\r\n    const handleOnShelf = () => {\r\n      logger.userAction('PRODUCT_ON_SHELF', { productId: props.product.product_id });\r\n      emit('on-shelf', props.product.product_id);\r\n    };\r\n\r\n    // 处理下架\r\n    const handleOffShelf = () => {\r\n      logger.userAction('PRODUCT_OFF_SHELF', { productId: props.product.product_id });\r\n      emit('off-shelf', props.product.product_id);\r\n    };\r\n\r\n    // 处理购买\r\n    const handlePurchase = () => {\r\n      logger.userAction('PRODUCT_PURCHASE', { productId: props.product.product_id });\r\n      emit('purchase', props.product);\r\n    };\r\n\r\n    return {\r\n      statusClass,\r\n      statusText,\r\n      formatDate,\r\n      handleSelect,\r\n      handleView,\r\n      handleEdit,\r\n      handleDelete,\r\n      handleOnShelf,\r\n      handleOffShelf,\r\n      handlePurchase\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import '../assets/styles/theme.css';\r\n\r\n.product-card {\r\n  background: var(--white);\r\n  border-radius: 16px;\r\n  box-shadow: 0 4px 12px rgba(107, 70, 193, 0.08);\r\n  overflow: hidden;\r\n  transition: all 0.3s;\r\n  position: relative;\r\n  border: 2px solid transparent;\r\n}\r\n\r\n.product-card:hover {\r\n  transform: translateY(-4px);\r\n  box-shadow: 0 8px 24px rgba(107, 70, 193, 0.15);\r\n}\r\n\r\n.product-card.selected {\r\n  border-color: var(--primary);\r\n  box-shadow: 0 4px 12px rgba(107, 70, 193, 0.2);\r\n}\r\n\r\n/* 选择框 */\r\n.card-checkbox {\r\n  position: absolute;\r\n  top: 1rem;\r\n  left: 1rem;\r\n  z-index: 10;\r\n}\r\n\r\n.checkbox-input {\r\n  width: 18px;\r\n  height: 18px;\r\n  accent-color: var(--primary);\r\n  cursor: pointer;\r\n}\r\n\r\n/* 产品图片 */\r\n.product-image {\r\n  position: relative;\r\n  height: 200px;\r\n  background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.image-placeholder {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 80px;\r\n  height: 80px;\r\n  background: rgba(107, 70, 193, 0.1);\r\n  border-radius: 50%;\r\n}\r\n\r\n.image-icon {\r\n  font-size: 2.5rem;\r\n}\r\n\r\n.status-badge {\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1rem;\r\n  padding: 0.25rem 0.75rem;\r\n  border-radius: 12px;\r\n  font-size: 0.75rem;\r\n  font-weight: 500;\r\n  color: var(--white);\r\n}\r\n\r\n.status-draft {\r\n  background: var(--gray-500);\r\n}\r\n\r\n.status-on-shelf {\r\n  background: var(--success);\r\n}\r\n\r\n.status-off-shelf {\r\n  background: #f59e0b;\r\n}\r\n\r\n.status-sold-out {\r\n  background: var(--error);\r\n}\r\n\r\n/* 产品信息 */\r\n.product-info {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.product-title {\r\n  font-size: 1.125rem;\r\n  font-weight: 600;\r\n  color: #1a202c;\r\n  margin: 0 0 0.5rem 0;\r\n  cursor: pointer;\r\n  transition: color 0.2s;\r\n}\r\n\r\n.product-title:hover {\r\n  color: var(--primary);\r\n}\r\n\r\n.product-category {\r\n  font-size: 0.875rem;\r\n  color: var(--primary);\r\n  font-weight: 500;\r\n  margin: 0 0 0.75rem 0;\r\n}\r\n\r\n.product-description {\r\n  font-size: 0.875rem;\r\n  color: var(--gray-500);\r\n  line-height: 1.5;\r\n  margin: 0 0 1rem 0;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n}\r\n\r\n.product-meta {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.meta-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.meta-label {\r\n  font-size: 0.75rem;\r\n  color: var(--gray-400);\r\n}\r\n\r\n.meta-value {\r\n  font-size: 0.875rem;\r\n  color: #1a202c;\r\n  font-weight: 500;\r\n}\r\n\r\n.price {\r\n  color: var(--primary);\r\n  font-weight: 600;\r\n  font-size: 1rem;\r\n}\r\n\r\n/* 操作按钮 */\r\n.product-actions {\r\n  padding: 1rem 1.5rem;\r\n  background: var(--gray-100);\r\n  display: flex;\r\n  gap: 0.5rem;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.action-btn {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.25rem;\r\n  padding: 0.5rem 0.75rem;\r\n  border: none;\r\n  border-radius: 6px;\r\n  font-size: 0.75rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  flex: 1;\r\n  justify-content: center;\r\n  min-width: 60px;\r\n}\r\n\r\n.btn-icon {\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.view-btn {\r\n  background: var(--primary);\r\n  color: var(--white);\r\n}\r\n\r\n.view-btn:hover {\r\n  background: var(--primary-dark);\r\n}\r\n\r\n.edit-btn {\r\n  background: #3b82f6;\r\n  color: var(--white);\r\n}\r\n\r\n.edit-btn:hover {\r\n  background: #2563eb;\r\n}\r\n\r\n.on-shelf-btn {\r\n  background: var(--success);\r\n  color: var(--white);\r\n}\r\n\r\n.on-shelf-btn:hover {\r\n  background: #38a169;\r\n}\r\n\r\n.off-shelf-btn {\r\n  background: #f59e0b;\r\n  color: var(--white);\r\n}\r\n\r\n.off-shelf-btn:hover {\r\n  background: #d97706;\r\n}\r\n\r\n.delete-btn {\r\n  background: var(--error);\r\n  color: var(--white);\r\n}\r\n\r\n.delete-btn:hover {\r\n  background: #c53030;\r\n}\r\n\r\n.purchase-btn {\r\n  background: var(--primary);\r\n  color: var(--white);\r\n}\r\n\r\n.purchase-btn:hover {\r\n  background: var(--primary-dark);\r\n}\r\n\r\n.disabled-btn {\r\n  background: var(--gray-300);\r\n  color: var(--gray-500);\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .product-actions {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .action-btn {\r\n    flex: none;\r\n    width: 100%;\r\n  }\r\n\r\n  .product-info {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .product-actions {\r\n    padding: 1rem;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
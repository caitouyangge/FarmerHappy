{"ast":null,"code":"import { ref, reactive, onMounted, computed } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { communityService } from '../api/community';\nimport logger from '../utils/logger';\nexport default {\n  name: 'ContentDetail',\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const loading = ref(false);\n    const contentDetail = ref(null);\n    const comments = ref([]);\n    const newComment = ref('');\n    const posting = ref(false);\n    const showReplyForms = reactive({});\n    const replyContents = reactive({});\n    const replying = reactive({});\n\n    // 确保reactive对象的安全初始化\n    const ensureCommentState = commentId => {\n      if (!commentId) return;\n      if (!(commentId in showReplyForms)) {\n        showReplyForms[commentId] = false;\n      }\n      if (!(commentId in replyContents)) {\n        replyContents[commentId] = '';\n      }\n      if (!(commentId in replying)) {\n        replying[commentId] = false;\n      }\n    };\n    const showImagePreview = ref(false);\n    const currentImage = ref('');\n    const imageList = ref([]);\n\n    // 获取用户信息\n    const getUserInfo = () => {\n      try {\n        const storedUser = localStorage.getItem('user');\n        return storedUser ? JSON.parse(storedUser) : null;\n      } catch (error) {\n        logger.error('CONTENT_DETAIL', '获取用户信息失败', {}, error);\n        return null;\n      }\n    };\n\n    // 加载内容详情\n    const loadContentDetail = async () => {\n      const contentId = route.params.id;\n      if (!contentId) {\n        logger.error('CONTENT_DETAIL', '缺少内容ID');\n        router.push('/community');\n        return;\n      }\n      loading.value = true;\n      try {\n        logger.info('CONTENT_DETAIL', '加载内容详情', {\n          contentId\n        });\n        const detail = await communityService.getContentDetail(contentId);\n        contentDetail.value = detail;\n\n        // 加载评论列表\n        await loadComments(contentId);\n      } catch (error) {\n        logger.error('CONTENT_DETAIL', '加载内容详情失败', {\n          contentId\n        }, error);\n        alert(error.message || '加载内容失败，请稍后重试');\n        router.push('/community');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 加载评论列表\n    const loadComments = async contentId => {\n      try {\n        logger.info('CONTENT_DETAIL', '加载评论列表', {\n          contentId\n        });\n        const data = await communityService.getCommentList(contentId);\n        // 过滤掉null值和无效的评论，并确保replies也被过滤\n        const rawComments = data.comments || [];\n        comments.value = rawComments.filter(comment => comment && typeof comment === 'object').map(comment => ({\n          ...comment,\n          replies: (comment.replies || []).filter(reply => reply && typeof reply === 'object')\n        }));\n        logger.info('CONTENT_DETAIL', '评论列表加载成功', {\n          count: comments.value.length\n        });\n      } catch (error) {\n        logger.error('CONTENT_DETAIL', '加载评论列表失败', {\n          contentId\n        }, error);\n        comments.value = [];\n      }\n    };\n\n    // 发表评论\n    const handlePostComment = async () => {\n      if (!newComment.value.trim()) {\n        alert('请输入评论内容');\n        return;\n      }\n      const userInfo = getUserInfo();\n      if (!userInfo || !userInfo.phone) {\n        alert('请先登录');\n        router.push('/login');\n        return;\n      }\n      posting.value = true;\n      const contentId = route.params.id;\n      try {\n        logger.userAction('POST_COMMENT', {\n          contentId\n        });\n        await communityService.postComment(contentId, {\n          comment: newComment.value.trim(),\n          phone: userInfo.phone\n        });\n        logger.info('CONTENT_DETAIL', '评论发表成功', {\n          contentId\n        });\n        newComment.value = '';\n        // 重新加载评论列表\n        await loadComments(contentId);\n      } catch (error) {\n        logger.error('CONTENT_DETAIL', '发表评论失败', {\n          contentId\n        }, error);\n        alert(error.message || '发表评论失败，请稍后重试');\n      } finally {\n        posting.value = false;\n      }\n    };\n\n    // 取消评论\n    const cancelComment = () => {\n      newComment.value = '';\n    };\n\n    // 切换回复表单\n    const toggleReplyForm = commentId => {\n      if (!commentId) return;\n      ensureCommentState(commentId);\n      showReplyForms[commentId] = !showReplyForms[commentId];\n      if (showReplyForms[commentId] && !replyContents[commentId]) {\n        replyContents[commentId] = '';\n      }\n    };\n\n    // 发表回复\n    const handlePostReply = async commentId => {\n      if (!commentId) return;\n      ensureCommentState(commentId);\n      const replyContent = replyContents[commentId];\n      if (!replyContent || !replyContent.trim()) {\n        alert('请输入回复内容');\n        return;\n      }\n      const userInfo = getUserInfo();\n      if (!userInfo || !userInfo.phone) {\n        alert('请先登录');\n        router.push('/login');\n        return;\n      }\n      replying[commentId] = true;\n      const contentId = route.params.id;\n      try {\n        logger.userAction('POST_REPLY', {\n          commentId,\n          contentId\n        });\n        await communityService.postReply(commentId, {\n          comment: replyContent.trim(),\n          phone: userInfo.phone\n        });\n        logger.info('CONTENT_DETAIL', '回复发表成功', {\n          commentId\n        });\n        replyContents[commentId] = '';\n        showReplyForms[commentId] = false;\n        // 重新加载评论列表\n        await loadComments(contentId);\n      } catch (error) {\n        logger.error('CONTENT_DETAIL', '发表回复失败', {\n          commentId\n        }, error);\n        alert(error.message || '发表回复失败，请稍后重试');\n      } finally {\n        replying[commentId] = false;\n      }\n    };\n\n    // 取消回复\n    const cancelReply = commentId => {\n      if (!commentId) return;\n      ensureCommentState(commentId);\n      replyContents[commentId] = '';\n      showReplyForms[commentId] = false;\n    };\n\n    // 返回\n    const goBack = () => {\n      router.push('/community');\n    };\n\n    // 格式化时间\n    const formatTime = timeStr => {\n      if (!timeStr) return '';\n      try {\n        const date = new Date(timeStr);\n        const now = new Date();\n        const diff = now - date;\n        const minutes = Math.floor(diff / 60000);\n        const hours = Math.floor(diff / 3600000);\n        const days = Math.floor(diff / 86400000);\n        if (minutes < 1) return '刚刚';\n        if (minutes < 60) return `${minutes}分钟前`;\n        if (hours < 24) return `${hours}小时前`;\n        if (days < 7) return `${days}天前`;\n        return date.toLocaleDateString('zh-CN');\n      } catch (error) {\n        return timeStr;\n      }\n    };\n\n    // 获取作者首字母\n    const getAuthorInitial = name => {\n      if (!name) return '?';\n      return name.charAt(0).toUpperCase();\n    };\n\n    // 获取类型标签\n    const getTypeLabel = type => {\n      const typeMap = {\n        articles: '文章',\n        questions: '提问',\n        experiences: '经验分享'\n      };\n      return typeMap[type] || type;\n    };\n\n    // 获取类型样式类\n    const getTypeClass = type => {\n      return `type-${type}`;\n    };\n\n    // 获取角色标签\n    const getRoleLabel = role => {\n      const roleMap = {\n        farmer: '农户',\n        expert: '专家',\n        buyer: '买家',\n        bank: '银行'\n      };\n      return roleMap[role] || role;\n    };\n\n    // 获取角色样式类\n    const getRoleClass = role => {\n      return `role-${role}`;\n    };\n\n    // 预览图片\n    const previewImage = (image, images) => {\n      currentImage.value = image;\n      imageList.value = images || [];\n      showImagePreview.value = true;\n    };\n\n    // 关闭图片预览\n    const closeImagePreview = () => {\n      showImagePreview.value = false;\n      currentImage.value = '';\n      imageList.value = [];\n    };\n\n    // 过滤有效的评论\n    const filteredComments = computed(() => {\n      return (comments.value || []).filter(comment => comment && typeof comment === 'object' && comment.comment_id);\n    });\n\n    // 过滤有效的回复\n    const getFilteredReplies = replies => {\n      return (replies || []).filter(reply => reply && typeof reply === 'object' && reply.reply_id);\n    };\n\n    // 安全地获取回复表单显示状态\n    const getReplyFormStatus = commentId => {\n      return Boolean(commentId && showReplyForms[commentId]);\n    };\n\n    // 安全地获取回复内容\n    const getReplyContent = commentId => {\n      return commentId ? replyContents[commentId] || '' : '';\n    };\n\n    // 安全地获取回复状态\n    const getReplyingStatus = commentId => {\n      return Boolean(commentId && replying[commentId]);\n    };\n    onMounted(() => {\n      logger.lifecycle('ContentDetail', 'mounted');\n      loadContentDetail();\n    });\n    return {\n      loading,\n      contentDetail,\n      comments,\n      filteredComments,\n      newComment,\n      posting,\n      showReplyForms,\n      replyContents,\n      replying,\n      showImagePreview,\n      currentImage,\n      handlePostComment,\n      cancelComment,\n      toggleReplyForm,\n      handlePostReply,\n      cancelReply,\n      goBack,\n      formatTime,\n      getAuthorInitial,\n      getTypeLabel,\n      getTypeClass,\n      getRoleLabel,\n      getRoleClass,\n      previewImage,\n      closeImagePreview,\n      getFilteredReplies,\n      getReplyFormStatus,\n      getReplyContent,\n      getReplyingStatus\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","computed","useRouter","useRoute","communityService","logger","name","setup","router","route","loading","contentDetail","comments","newComment","posting","showReplyForms","replyContents","replying","ensureCommentState","commentId","showImagePreview","currentImage","imageList","getUserInfo","storedUser","localStorage","getItem","JSON","parse","error","loadContentDetail","contentId","params","id","push","value","info","detail","getContentDetail","loadComments","alert","message","data","getCommentList","rawComments","filter","comment","map","replies","reply","count","length","handlePostComment","trim","userInfo","phone","userAction","postComment","cancelComment","toggleReplyForm","handlePostReply","replyContent","postReply","cancelReply","goBack","formatTime","timeStr","date","Date","now","diff","minutes","Math","floor","hours","days","toLocaleDateString","getAuthorInitial","charAt","toUpperCase","getTypeLabel","type","typeMap","articles","questions","experiences","getTypeClass","getRoleLabel","role","roleMap","farmer","expert","buyer","bank","getRoleClass","previewImage","image","images","closeImagePreview","filteredComments","comment_id","getFilteredReplies","reply_id","getReplyFormStatus","Boolean","getReplyContent","getReplyingStatus","lifecycle"],"sources":["D:\\STUDY\\FarmerHappy\\farmer_happy\\src\\community\\ContentDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"content-detail-container\">\r\n    <!-- 顶部导航栏 -->\r\n    <header class=\"header\">\r\n      <button class=\"btn-back\" @click=\"goBack\">\r\n        <span class=\"back-icon\">←</span>\r\n        返回\r\n      </button>\r\n      <h1 class=\"header-title\">内容详情</h1>\r\n      <div class=\"header-placeholder\"></div>\r\n    </header>\r\n\r\n    <!-- 加载状态 -->\r\n    <div v-if=\"loading\" class=\"loading-state\">\r\n      <div class=\"loading-spinner\"></div>\r\n      <p>加载中...</p>\r\n    </div>\r\n\r\n    <!-- 内容详情 -->\r\n    <div v-else-if=\"contentDetail\" class=\"detail-wrapper\">\r\n      <main class=\"main-content\">\r\n        <!-- 内容主体 -->\r\n        <article class=\"content-article\">\r\n          <div class=\"content-header\">\r\n            <div class=\"content-type-badge\" :class=\"getTypeClass(contentDetail.content_type)\">\r\n              {{ getTypeLabel(contentDetail.content_type) }}\r\n            </div>\r\n            <div class=\"content-meta\">\r\n              <span class=\"author\">\r\n                <span class=\"author-icon\">👤</span>\r\n                {{ contentDetail.author_name || contentDetail.author_nickname }}\r\n              </span>\r\n              <span class=\"role-badge\" :class=\"getRoleClass(contentDetail.author_role)\">\r\n                {{ getRoleLabel(contentDetail.author_role) }}\r\n              </span>\r\n              <span class=\"time\">{{ formatTime(contentDetail.created_at) }}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <h1 class=\"article-title\">{{ contentDetail.title }}</h1>\r\n\r\n          <div class=\"article-content\">{{ contentDetail.content }}</div>\r\n\r\n          <div v-if=\"contentDetail.images && contentDetail.images.length > 0\" class=\"article-images\">\r\n            <img\r\n              v-for=\"(image, idx) in contentDetail.images\"\r\n              :key=\"idx\"\r\n              :src=\"image\"\r\n              :alt=\"`图片${idx + 1}`\"\r\n              class=\"article-image\"\r\n              @click=\"previewImage(image, contentDetail.images)\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"article-stats\">\r\n            <span class=\"stat-item\">\r\n              <span class=\"stat-icon\">👁</span>\r\n              {{ contentDetail.view_count || 0 }} 浏览\r\n            </span>\r\n            <span class=\"stat-item\">\r\n              <span class=\"stat-icon\">💬</span>\r\n              {{ contentDetail.comment_count || 0 }} 评论\r\n            </span>\r\n          </div>\r\n        </article>\r\n\r\n        <!-- 评论区域 -->\r\n        <section class=\"comments-section\">\r\n          <div class=\"section-header\">\r\n            <h2 class=\"section-title\">\r\n              <span class=\"title-icon\">💬</span>\r\n              评论 ({{ comments.length }})\r\n            </h2>\r\n          </div>\r\n\r\n          <!-- 发表评论表单 -->\r\n          <div class=\"comment-form\">\r\n            <textarea\r\n              v-model=\"newComment\"\r\n              class=\"comment-input\"\r\n              placeholder=\"写下你的评论...\"\r\n              rows=\"3\"\r\n            ></textarea>\r\n            <div class=\"comment-actions\">\r\n              <button class=\"btn-cancel\" @click=\"cancelComment\">取消</button>\r\n              <button class=\"btn-submit\" @click=\"handlePostComment\" :disabled=\"posting\">\r\n                {{ posting ? '提交中...' : '发表评论' }}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 评论列表 -->\r\n          <div class=\"comments-list\" v-if=\"comments.length > 0\">\r\n            <div\r\n              v-for=\"(comment, index) in filteredComments\"\r\n              :key=\"comment?.comment_id || `comment-${index}`\"\r\n              class=\"comment-item\"\r\n            >\r\n              <div class=\"comment-header\">\r\n                <div class=\"comment-author\">\r\n                  <span class=\"author-avatar\">{{ getAuthorInitial(comment?.author_nickname) }}</span>\r\n                  <div class=\"author-info\">\r\n                    <span class=\"author-name\">{{ comment?.author_nickname || '匿名用户' }}</span>\r\n                    <span class=\"author-role-badge\" :class=\"getRoleClass(comment?.author_role)\">\r\n                      {{ getRoleLabel(comment?.author_role) }}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <span class=\"comment-time\">{{ formatTime(comment?.created_at) }}</span>\r\n              </div>\r\n\r\n              <div class=\"comment-content\">{{ comment?.content || '' }}</div>\r\n\r\n              <!-- 回复按钮 -->\r\n              <button class=\"btn-reply\" @click=\"toggleReplyForm(comment?.comment_id)\" v-if=\"comment?.comment_id\">\r\n                <span class=\"reply-icon\">↩</span>\r\n                回复\r\n              </button>\r\n\r\n              <!-- 回复表单 -->\r\n              <div v-if=\"getReplyFormStatus(comment?.comment_id)\" class=\"reply-form\">\r\n                <textarea\r\n                  v-model=\"replyContents[comment.comment_id]\"\r\n                  class=\"reply-input\"\r\n                  placeholder=\"写下你的回复...\"\r\n                  rows=\"2\"\r\n                ></textarea>\r\n                <div class=\"reply-actions\">\r\n                  <button class=\"btn-cancel\" @click=\"cancelReply(comment.comment_id)\">取消</button>\r\n                  <button\r\n                    class=\"btn-submit\"\r\n                    @click=\"handlePostReply(comment.comment_id)\"\r\n                    :disabled=\"getReplyingStatus(comment?.comment_id)\"\r\n                  >\r\n                    {{ getReplyingStatus(comment?.comment_id) ? '回复中...' : '发表回复' }}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- 回复列表 -->\r\n              <div v-if=\"comment.replies && comment.replies.length > 0\" class=\"replies-list\">\r\n                <div\r\n                  v-for=\"(reply, replyIndex) in getFilteredReplies(comment.replies)\"\r\n                  :key=\"reply?.reply_id || `reply-${replyIndex}`\"\r\n                  class=\"reply-item\"\r\n                >\r\n                  <div class=\"reply-header\">\r\n                    <div class=\"reply-author\">\r\n                      <span class=\"author-avatar small\">{{ getAuthorInitial(reply?.author_nickname) }}</span>\r\n                      <div class=\"author-info\">\r\n                        <span class=\"author-name\">{{ reply?.author_nickname || '匿名用户' }}</span>\r\n                        <span class=\"author-role-badge small\" :class=\"getRoleClass(reply?.author_role)\">\r\n                          {{ getRoleLabel(reply?.author_role) }}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <span class=\"reply-time\">{{ formatTime(reply?.created_at) }}</span>\r\n                  </div>\r\n                  <div class=\"reply-content\">{{ reply?.content || '' }}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 无评论状态 -->\r\n          <div v-else class=\"empty-comments\">\r\n            <div class=\"empty-icon\">💭</div>\r\n            <p class=\"empty-text\">还没有评论，快来抢沙发吧！</p>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </div>\r\n\r\n    <!-- 图片预览模态框 -->\r\n    <div v-if=\"showImagePreview\" class=\"image-preview-modal\" @click=\"closeImagePreview\">\r\n      <img :src=\"currentImage\" :alt=\"'预览图片'\" class=\"preview-image\" @click.stop />\r\n      <button class=\"close-preview\" @click=\"closeImagePreview\">×</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted, computed } from 'vue';\r\nimport { useRouter, useRoute } from 'vue-router';\r\nimport { communityService } from '../api/community';\r\nimport logger from '../utils/logger';\r\n\r\nexport default {\r\n  name: 'ContentDetail',\r\n  setup() {\r\n    const router = useRouter();\r\n    const route = useRoute();\r\n    const loading = ref(false);\r\n    const contentDetail = ref(null);\r\n    const comments = ref([]);\r\n    const newComment = ref('');\r\n    const posting = ref(false);\r\n    const showReplyForms = reactive({});\r\n    const replyContents = reactive({});\r\n    const replying = reactive({});\r\n\r\n    // 确保reactive对象的安全初始化\r\n    const ensureCommentState = (commentId) => {\r\n      if (!commentId) return;\r\n      if (!(commentId in showReplyForms)) {\r\n        showReplyForms[commentId] = false;\r\n      }\r\n      if (!(commentId in replyContents)) {\r\n        replyContents[commentId] = '';\r\n      }\r\n      if (!(commentId in replying)) {\r\n        replying[commentId] = false;\r\n      }\r\n    };\r\n    const showImagePreview = ref(false);\r\n    const currentImage = ref('');\r\n    const imageList = ref([]);\r\n\r\n    // 获取用户信息\r\n    const getUserInfo = () => {\r\n      try {\r\n        const storedUser = localStorage.getItem('user');\r\n        return storedUser ? JSON.parse(storedUser) : null;\r\n      } catch (error) {\r\n        logger.error('CONTENT_DETAIL', '获取用户信息失败', {}, error);\r\n        return null;\r\n      }\r\n    };\r\n\r\n    // 加载内容详情\r\n    const loadContentDetail = async () => {\r\n      const contentId = route.params.id;\r\n      if (!contentId) {\r\n        logger.error('CONTENT_DETAIL', '缺少内容ID');\r\n        router.push('/community');\r\n        return;\r\n      }\r\n\r\n      loading.value = true;\r\n      try {\r\n        logger.info('CONTENT_DETAIL', '加载内容详情', { contentId });\r\n        const detail = await communityService.getContentDetail(contentId);\r\n        contentDetail.value = detail;\r\n        \r\n        // 加载评论列表\r\n        await loadComments(contentId);\r\n      } catch (error) {\r\n        logger.error('CONTENT_DETAIL', '加载内容详情失败', { contentId }, error);\r\n        alert(error.message || '加载内容失败，请稍后重试');\r\n        router.push('/community');\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    // 加载评论列表\r\n    const loadComments = async (contentId) => {\r\n      try {\r\n        logger.info('CONTENT_DETAIL', '加载评论列表', { contentId });\r\n        const data = await communityService.getCommentList(contentId);\r\n        // 过滤掉null值和无效的评论，并确保replies也被过滤\r\n        const rawComments = data.comments || [];\r\n        comments.value = rawComments\r\n          .filter(comment => comment && typeof comment === 'object')\r\n          .map(comment => ({\r\n            ...comment,\r\n            replies: (comment.replies || []).filter(reply => \r\n              reply && typeof reply === 'object'\r\n            )\r\n          }));\r\n        logger.info('CONTENT_DETAIL', '评论列表加载成功', { count: comments.value.length });\r\n      } catch (error) {\r\n        logger.error('CONTENT_DETAIL', '加载评论列表失败', { contentId }, error);\r\n        comments.value = [];\r\n      }\r\n    };\r\n\r\n    // 发表评论\r\n    const handlePostComment = async () => {\r\n      if (!newComment.value.trim()) {\r\n        alert('请输入评论内容');\r\n        return;\r\n      }\r\n\r\n      const userInfo = getUserInfo();\r\n      if (!userInfo || !userInfo.phone) {\r\n        alert('请先登录');\r\n        router.push('/login');\r\n        return;\r\n      }\r\n\r\n      posting.value = true;\r\n      const contentId = route.params.id;\r\n\r\n      try {\r\n        logger.userAction('POST_COMMENT', { contentId });\r\n        await communityService.postComment(contentId, {\r\n          comment: newComment.value.trim(),\r\n          phone: userInfo.phone\r\n        });\r\n\r\n        logger.info('CONTENT_DETAIL', '评论发表成功', { contentId });\r\n        newComment.value = '';\r\n        // 重新加载评论列表\r\n        await loadComments(contentId);\r\n      } catch (error) {\r\n        logger.error('CONTENT_DETAIL', '发表评论失败', { contentId }, error);\r\n        alert(error.message || '发表评论失败，请稍后重试');\r\n      } finally {\r\n        posting.value = false;\r\n      }\r\n    };\r\n\r\n    // 取消评论\r\n    const cancelComment = () => {\r\n      newComment.value = '';\r\n    };\r\n\r\n    // 切换回复表单\r\n    const toggleReplyForm = (commentId) => {\r\n      if (!commentId) return;\r\n      ensureCommentState(commentId);\r\n      showReplyForms[commentId] = !showReplyForms[commentId];\r\n      if (showReplyForms[commentId] && !replyContents[commentId]) {\r\n        replyContents[commentId] = '';\r\n      }\r\n    };\r\n\r\n    // 发表回复\r\n    const handlePostReply = async (commentId) => {\r\n      if (!commentId) return;\r\n      ensureCommentState(commentId);\r\n      const replyContent = replyContents[commentId];\r\n      if (!replyContent || !replyContent.trim()) {\r\n        alert('请输入回复内容');\r\n        return;\r\n      }\r\n\r\n      const userInfo = getUserInfo();\r\n      if (!userInfo || !userInfo.phone) {\r\n        alert('请先登录');\r\n        router.push('/login');\r\n        return;\r\n      }\r\n\r\n      replying[commentId] = true;\r\n      const contentId = route.params.id;\r\n\r\n      try {\r\n        logger.userAction('POST_REPLY', { commentId, contentId });\r\n        await communityService.postReply(commentId, {\r\n          comment: replyContent.trim(),\r\n          phone: userInfo.phone\r\n        });\r\n\r\n        logger.info('CONTENT_DETAIL', '回复发表成功', { commentId });\r\n        replyContents[commentId] = '';\r\n        showReplyForms[commentId] = false;\r\n        // 重新加载评论列表\r\n        await loadComments(contentId);\r\n      } catch (error) {\r\n        logger.error('CONTENT_DETAIL', '发表回复失败', { commentId }, error);\r\n        alert(error.message || '发表回复失败，请稍后重试');\r\n      } finally {\r\n        replying[commentId] = false;\r\n      }\r\n    };\r\n\r\n    // 取消回复\r\n    const cancelReply = (commentId) => {\r\n      if (!commentId) return;\r\n      ensureCommentState(commentId);\r\n      replyContents[commentId] = '';\r\n      showReplyForms[commentId] = false;\r\n    };\r\n\r\n    // 返回\r\n    const goBack = () => {\r\n      router.push('/community');\r\n    };\r\n\r\n    // 格式化时间\r\n    const formatTime = (timeStr) => {\r\n      if (!timeStr) return '';\r\n      try {\r\n        const date = new Date(timeStr);\r\n        const now = new Date();\r\n        const diff = now - date;\r\n        const minutes = Math.floor(diff / 60000);\r\n        const hours = Math.floor(diff / 3600000);\r\n        const days = Math.floor(diff / 86400000);\r\n\r\n        if (minutes < 1) return '刚刚';\r\n        if (minutes < 60) return `${minutes}分钟前`;\r\n        if (hours < 24) return `${hours}小时前`;\r\n        if (days < 7) return `${days}天前`;\r\n        return date.toLocaleDateString('zh-CN');\r\n      } catch (error) {\r\n        return timeStr;\r\n      }\r\n    };\r\n\r\n    // 获取作者首字母\r\n    const getAuthorInitial = (name) => {\r\n      if (!name) return '?';\r\n      return name.charAt(0).toUpperCase();\r\n    };\r\n\r\n    // 获取类型标签\r\n    const getTypeLabel = (type) => {\r\n      const typeMap = {\r\n        articles: '文章',\r\n        questions: '提问',\r\n        experiences: '经验分享'\r\n      };\r\n      return typeMap[type] || type;\r\n    };\r\n\r\n    // 获取类型样式类\r\n    const getTypeClass = (type) => {\r\n      return `type-${type}`;\r\n    };\r\n\r\n    // 获取角色标签\r\n    const getRoleLabel = (role) => {\r\n      const roleMap = {\r\n        farmer: '农户',\r\n        expert: '专家',\r\n        buyer: '买家',\r\n        bank: '银行'\r\n      };\r\n      return roleMap[role] || role;\r\n    };\r\n\r\n    // 获取角色样式类\r\n    const getRoleClass = (role) => {\r\n      return `role-${role}`;\r\n    };\r\n\r\n    // 预览图片\r\n    const previewImage = (image, images) => {\r\n      currentImage.value = image;\r\n      imageList.value = images || [];\r\n      showImagePreview.value = true;\r\n    };\r\n\r\n    // 关闭图片预览\r\n    const closeImagePreview = () => {\r\n      showImagePreview.value = false;\r\n      currentImage.value = '';\r\n      imageList.value = [];\r\n    };\r\n\r\n    // 过滤有效的评论\r\n    const filteredComments = computed(() => {\r\n      return (comments.value || []).filter(comment => \r\n        comment && typeof comment === 'object' && comment.comment_id\r\n      );\r\n    });\r\n\r\n    // 过滤有效的回复\r\n    const getFilteredReplies = (replies) => {\r\n      return (replies || []).filter(reply => \r\n        reply && typeof reply === 'object' && reply.reply_id\r\n      );\r\n    };\r\n\r\n    // 安全地获取回复表单显示状态\r\n    const getReplyFormStatus = (commentId) => {\r\n      return Boolean(commentId && showReplyForms[commentId]);\r\n    };\r\n\r\n    // 安全地获取回复内容\r\n    const getReplyContent = (commentId) => {\r\n      return commentId ? (replyContents[commentId] || '') : '';\r\n    };\r\n\r\n    // 安全地获取回复状态\r\n    const getReplyingStatus = (commentId) => {\r\n      return Boolean(commentId && replying[commentId]);\r\n    };\r\n\r\n    onMounted(() => {\r\n      logger.lifecycle('ContentDetail', 'mounted');\r\n      loadContentDetail();\r\n    });\r\n\r\n    return {\r\n      loading,\r\n      contentDetail,\r\n      comments,\r\n      filteredComments,\r\n      newComment,\r\n      posting,\r\n      showReplyForms,\r\n      replyContents,\r\n      replying,\r\n      showImagePreview,\r\n      currentImage,\r\n      handlePostComment,\r\n      cancelComment,\r\n      toggleReplyForm,\r\n      handlePostReply,\r\n      cancelReply,\r\n      goBack,\r\n      formatTime,\r\n      getAuthorInitial,\r\n      getTypeLabel,\r\n      getTypeClass,\r\n      getRoleLabel,\r\n      getRoleClass,\r\n      previewImage,\r\n      closeImagePreview,\r\n      getFilteredReplies,\r\n      getReplyFormStatus,\r\n      getReplyContent,\r\n      getReplyingStatus\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import '../assets/styles/theme.css';\r\n\r\n.content-detail-container {\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #f5f3ff 0%, #ede9fe 100%);\r\n}\r\n\r\n/* 顶部导航栏 */\r\n.header {\r\n  background: var(--white);\r\n  padding: 1rem 2rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  box-shadow: 0 2px 8px rgba(107, 70, 193, 0.1);\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 100;\r\n}\r\n\r\n.btn-back {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  padding: 0.5rem 1rem;\r\n  background: transparent;\r\n  border: 1px solid var(--gray-300);\r\n  border-radius: 8px;\r\n  color: var(--gray-600);\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.btn-back:hover {\r\n  background: var(--gray-100);\r\n  border-color: var(--primary);\r\n  color: var(--primary);\r\n}\r\n\r\n.header-title {\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  color: var(--primary);\r\n  margin: 0;\r\n}\r\n\r\n.header-placeholder {\r\n  width: 120px;\r\n}\r\n\r\n/* 加载状态 */\r\n.loading-state {\r\n  text-align: center;\r\n  padding: 4rem 2rem;\r\n  background: var(--white);\r\n  margin: 2rem auto;\r\n  max-width: 1200px;\r\n  border-radius: 16px;\r\n}\r\n\r\n.loading-spinner {\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 4px solid var(--gray-200);\r\n  border-top-color: var(--primary);\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin: 0 auto 1rem;\r\n}\r\n\r\n@keyframes spin {\r\n  to { transform: rotate(360deg); }\r\n}\r\n\r\n/* 主内容 */\r\n.detail-wrapper {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n}\r\n\r\n.main-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2rem;\r\n}\r\n\r\n/* 内容文章 */\r\n.content-article {\r\n  background: var(--white);\r\n  padding: 2rem;\r\n  border-radius: 16px;\r\n  box-shadow: 0 4px 12px rgba(107, 70, 193, 0.08);\r\n}\r\n\r\n.content-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1.5rem;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n}\r\n\r\n.content-type-badge {\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 8px;\r\n  font-size: 0.875rem;\r\n  font-weight: 600;\r\n  color: var(--white);\r\n}\r\n\r\n.type-articles {\r\n  background: linear-gradient(135deg, #8B5CF6, #A78BFA);\r\n}\r\n\r\n.type-questions {\r\n  background: linear-gradient(135deg, #EC4899, #F472B6);\r\n}\r\n\r\n.type-experiences {\r\n  background: linear-gradient(135deg, #06B6D4, #22D3EE);\r\n}\r\n\r\n.content-meta {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.author {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.375rem;\r\n  color: var(--gray-600);\r\n  font-size: 0.9375rem;\r\n}\r\n\r\n.author-icon {\r\n  font-size: 1.125rem;\r\n}\r\n\r\n.role-badge {\r\n  padding: 0.375rem 0.875rem;\r\n  border-radius: 6px;\r\n  font-size: 0.75rem;\r\n  font-weight: 600;\r\n  color: var(--white);\r\n}\r\n\r\n.role-farmer {\r\n  background: linear-gradient(135deg, #10B981, #34D399);\r\n}\r\n\r\n.role-expert {\r\n  background: linear-gradient(135deg, var(--primary), var(--primary-light));\r\n}\r\n\r\n.role-buyer {\r\n  background: linear-gradient(135deg, #F59E0B, #FBBF24);\r\n}\r\n\r\n.role-bank {\r\n  background: linear-gradient(135deg, #6366F1, #818CF8);\r\n}\r\n\r\n.time {\r\n  color: var(--gray-500);\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.article-title {\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  color: #1a202c;\r\n  margin: 0 0 1.5rem 0;\r\n  line-height: 1.4;\r\n}\r\n\r\n.article-content {\r\n  font-size: 1.125rem;\r\n  line-height: 1.8;\r\n  color: #374151;\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.article-images {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.article-image {\r\n  max-width: 100%;\r\n  max-height: 400px;\r\n  object-fit: contain;\r\n  border-radius: 12px;\r\n  cursor: pointer;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.article-image:hover {\r\n  transform: scale(1.02);\r\n}\r\n\r\n.article-stats {\r\n  display: flex;\r\n  gap: 2rem;\r\n  padding-top: 1.5rem;\r\n  border-top: 1px solid var(--gray-200);\r\n  color: var(--gray-500);\r\n  font-size: 0.9375rem;\r\n}\r\n\r\n.stat-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.stat-icon {\r\n  font-size: 1.125rem;\r\n}\r\n\r\n/* 评论区域 */\r\n.comments-section {\r\n  background: var(--white);\r\n  padding: 2rem;\r\n  border-radius: 16px;\r\n  box-shadow: 0 4px 12px rgba(107, 70, 193, 0.08);\r\n}\r\n\r\n.section-header {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.section-title {\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  color: #1a202c;\r\n  margin: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.title-icon {\r\n  font-size: 1.5rem;\r\n}\r\n\r\n/* 评论表单 */\r\n.comment-form {\r\n  margin-bottom: 2rem;\r\n  padding-bottom: 2rem;\r\n  border-bottom: 2px solid var(--gray-200);\r\n}\r\n\r\n.comment-input {\r\n  width: 100%;\r\n  padding: 1rem;\r\n  border: 2px solid var(--gray-300);\r\n  border-radius: 12px;\r\n  font-size: 1rem;\r\n  font-family: inherit;\r\n  resize: vertical;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.comment-input:focus {\r\n  outline: none;\r\n  border-color: var(--primary);\r\n  box-shadow: 0 0 0 3px rgba(107, 70, 193, 0.1);\r\n}\r\n\r\n.comment-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 1rem;\r\n  margin-top: 1rem;\r\n}\r\n\r\n/* 评论列表 */\r\n.comments-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.5rem;\r\n}\r\n\r\n.comment-item {\r\n  padding-bottom: 1.5rem;\r\n  border-bottom: 1px solid var(--gray-200);\r\n}\r\n\r\n.comment-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.comment-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 0.75rem;\r\n}\r\n\r\n.comment-author {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.75rem;\r\n}\r\n\r\n.author-avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  background: linear-gradient(135deg, var(--primary), var(--primary-light));\r\n  color: var(--white);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: 600;\r\n  font-size: 1rem;\r\n}\r\n\r\n.author-avatar.small {\r\n  width: 32px;\r\n  height: 32px;\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.author-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.25rem;\r\n}\r\n\r\n.author-name {\r\n  font-weight: 600;\r\n  color: #1a202c;\r\n  font-size: 0.9375rem;\r\n}\r\n\r\n.author-role-badge {\r\n  padding: 0.125rem 0.5rem;\r\n  border-radius: 4px;\r\n  font-size: 0.625rem;\r\n  font-weight: 600;\r\n  color: var(--white);\r\n  width: fit-content;\r\n}\r\n\r\n.author-role-badge.small {\r\n  padding: 0.125rem 0.375rem;\r\n  font-size: 0.5625rem;\r\n}\r\n\r\n.comment-time {\r\n  color: var(--gray-500);\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.comment-content {\r\n  color: #374151;\r\n  line-height: 1.6;\r\n  margin-bottom: 0.75rem;\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n}\r\n\r\n.btn-reply {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.375rem;\r\n  padding: 0.5rem 1rem;\r\n  background: transparent;\r\n  border: 1px solid var(--gray-300);\r\n  border-radius: 6px;\r\n  color: var(--gray-600);\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.btn-reply:hover {\r\n  background: var(--gray-100);\r\n  border-color: var(--primary);\r\n  color: var(--primary);\r\n}\r\n\r\n.reply-icon {\r\n  font-size: 1rem;\r\n}\r\n\r\n/* 回复表单 */\r\n.reply-form {\r\n  margin-top: 1rem;\r\n  padding: 1rem;\r\n  background: var(--gray-100);\r\n  border-radius: 8px;\r\n}\r\n\r\n.reply-input {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  border: 2px solid var(--gray-300);\r\n  border-radius: 8px;\r\n  font-size: 0.9375rem;\r\n  font-family: inherit;\r\n  resize: vertical;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.reply-input:focus {\r\n  outline: none;\r\n  border-color: var(--primary);\r\n  box-shadow: 0 0 0 3px rgba(107, 70, 193, 0.1);\r\n}\r\n\r\n.reply-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 1rem;\r\n  margin-top: 0.75rem;\r\n}\r\n\r\n/* 回复列表 */\r\n.replies-list {\r\n  margin-top: 1rem;\r\n  padding-left: 1rem;\r\n  border-left: 3px solid var(--primary-light);\r\n}\r\n\r\n.reply-item {\r\n  padding: 0.75rem 0;\r\n  border-bottom: 1px solid var(--gray-100);\r\n}\r\n\r\n.reply-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.reply-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.reply-author {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.reply-time {\r\n  color: var(--gray-500);\r\n  font-size: 0.8125rem;\r\n}\r\n\r\n.reply-content {\r\n  color: #4B5563;\r\n  line-height: 1.6;\r\n  font-size: 0.9375rem;\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n}\r\n\r\n/* 按钮样式 */\r\n.btn-cancel,\r\n.btn-submit {\r\n  padding: 0.625rem 1.25rem;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 0.9375rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.btn-cancel {\r\n  background: var(--gray-200);\r\n  color: var(--gray-600);\r\n}\r\n\r\n.btn-cancel:hover {\r\n  background: var(--gray-300);\r\n}\r\n\r\n.btn-submit {\r\n  background: linear-gradient(135deg, var(--primary), var(--primary-light));\r\n  color: var(--white);\r\n}\r\n\r\n.btn-submit:hover:not(:disabled) {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 12px rgba(107, 70, 193, 0.3);\r\n}\r\n\r\n.btn-submit:disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* 空评论状态 */\r\n.empty-comments {\r\n  text-align: center;\r\n  padding: 3rem 2rem;\r\n}\r\n\r\n.empty-icon {\r\n  font-size: 3rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.empty-text {\r\n  color: var(--gray-500);\r\n  font-size: 1rem;\r\n}\r\n\r\n/* 图片预览模态框 */\r\n.image-preview-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.9);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n  cursor: pointer;\r\n}\r\n\r\n.preview-image {\r\n  max-width: 90%;\r\n  max-height: 90%;\r\n  object-fit: contain;\r\n  border-radius: 8px;\r\n}\r\n\r\n.close-preview {\r\n  position: absolute;\r\n  top: 2rem;\r\n  right: 2rem;\r\n  width: 48px;\r\n  height: 48px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  border: none;\r\n  border-radius: 50%;\r\n  color: var(--white);\r\n  font-size: 2rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.close-preview:hover {\r\n  background: rgba(255, 255, 255, 0.3);\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .header {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .header-title {\r\n    font-size: 1.25rem;\r\n  }\r\n\r\n  .detail-wrapper {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .content-article,\r\n  .comments-section {\r\n    padding: 1.5rem;\r\n  }\r\n\r\n  .article-title {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  .article-content {\r\n    font-size: 1rem;\r\n  }\r\n}\r\n</style>\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
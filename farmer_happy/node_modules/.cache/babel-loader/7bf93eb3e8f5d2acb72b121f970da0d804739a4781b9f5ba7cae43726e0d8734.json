{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, vModelSelect as _vModelSelect, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createBlock as _createBlock, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"product-list-container\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = {\n  class: \"header-left\"\n};\nconst _hoisted_4 = {\n  class: \"header-right\"\n};\nconst _hoisted_5 = {\n  class: \"user-info\"\n};\nconst _hoisted_6 = {\n  class: \"user-name\"\n};\nconst _hoisted_7 = {\n  class: \"user-role\"\n};\nconst _hoisted_8 = {\n  class: \"search-section\"\n};\nconst _hoisted_9 = {\n  class: \"search-container\"\n};\nconst _hoisted_10 = {\n  class: \"search-box\"\n};\nconst _hoisted_11 = {\n  class: \"filter-section\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"action-section\"\n};\nconst _hoisted_13 = [\"disabled\"];\nconst _hoisted_14 = {\n  class: \"products-section\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"loading-container\"\n};\nconst _hoisted_16 = {\n  key: 1,\n  class: \"empty-container\"\n};\nconst _hoisted_17 = {\n  key: 0\n};\nconst _hoisted_18 = {\n  key: 1\n};\nconst _hoisted_19 = {\n  key: 2,\n  class: \"products-grid\"\n};\nconst _hoisted_20 = {\n  key: 1,\n  class: \"pagination-section\"\n};\nconst _hoisted_21 = {\n  class: \"pagination-info\"\n};\nconst _hoisted_22 = {\n  class: \"pagination-controls\"\n};\nconst _hoisted_23 = [\"disabled\"];\nconst _hoisted_24 = {\n  class: \"pagination-info\"\n};\nconst _hoisted_25 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ProductCard = _resolveComponent(\"ProductCard\");\n  const _component_ProductForm = _resolveComponent(\"ProductForm\");\n  const _component_ProductDetail = _resolveComponent(\"ProductDetail\");\n  const _component_BatchActionModal = _resolveComponent(\"BatchActionModal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 顶部导航栏 \"), _createElementVNode(\"header\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    class: \"btn-back\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.goBack && $setup.goBack(...args))\n  }, [...(_cache[12] || (_cache[12] = [_createElementVNode(\"span\", {\n    class: \"back-icon\"\n  }, \"←\", -1 /* CACHED */), _createTextVNode(\" 返回 \", -1 /* CACHED */)]))]), _cache[13] || (_cache[13] = _createElementVNode(\"h1\", {\n    class: \"page-title\"\n  }, \"农产品交易\", -1 /* CACHED */))]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"span\", _hoisted_6, _toDisplayString($setup.userInfo.nickname || '用户'), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_7, _toDisplayString($setup.userRoleText), 1 /* TEXT */)])])]), _createCommentVNode(\" 搜索和筛选区域 \"), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.searchKeyword = $event),\n    type: \"text\",\n    placeholder: \"搜索农产品标题...\",\n    class: \"search-input\",\n    onKeyup: _cache[2] || (_cache[2] = _withKeys((...args) => $setup.handleSearch && $setup.handleSearch(...args), [\"enter\"]))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.searchKeyword]]), _createElementVNode(\"button\", {\n    class: \"search-btn\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.handleSearch && $setup.handleSearch(...args))\n  }, [...(_cache[14] || (_cache[14] = [_createElementVNode(\"span\", {\n    class: \"search-icon\"\n  }, \"🔍\", -1 /* CACHED */)]))])]), _createElementVNode(\"div\", _hoisted_11, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.statusFilter = $event),\n    class: \"filter-select\",\n    onChange: _cache[5] || (_cache[5] = (...args) => $setup.handleFilterChange && $setup.handleFilterChange(...args))\n  }, [...(_cache[15] || (_cache[15] = [_createStaticVNode(\"<option value=\\\"\\\" data-v-c4097754>全部状态</option><option value=\\\"draft\\\" data-v-c4097754>草稿</option><option value=\\\"on_shelf\\\" data-v-c4097754>在售</option><option value=\\\"off_shelf\\\" data-v-c4097754>下架</option><option value=\\\"sold_out\\\" data-v-c4097754>售罄</option>\", 5)]))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $setup.statusFilter]])])])]), _createCommentVNode(\" 操作按钮区域 \"), $setup.isFarmer ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"button\", {\n    class: \"btn-primary\",\n    onClick: _cache[6] || (_cache[6] = $event => $setup.showCreateForm = true)\n  }, [...(_cache[16] || (_cache[16] = [_createElementVNode(\"span\", {\n    class: \"btn-icon\"\n  }, \"+\", -1 /* CACHED */), _createTextVNode(\" 发布农产品 \", -1 /* CACHED */)]))]), _createElementVNode(\"button\", {\n    class: \"btn-secondary\",\n    onClick: _cache[7] || (_cache[7] = (...args) => $setup.handleBatchAction && $setup.handleBatchAction(...args)),\n    disabled: $setup.selectedProducts.length === 0\n  }, [_cache[17] || (_cache[17] = _createElementVNode(\"span\", {\n    class: \"btn-icon\"\n  }, \"📦\", -1 /* CACHED */)), _createTextVNode(\" 批量操作 (\" + _toDisplayString($setup.selectedProducts.length) + \") \", 1 /* TEXT */)], 8 /* PROPS */, _hoisted_13)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 产品列表 \"), _createElementVNode(\"div\", _hoisted_14, [$setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [...(_cache[18] || (_cache[18] = [_createElementVNode(\"div\", {\n    class: \"loading-spinner\"\n  }, null, -1 /* CACHED */), _createElementVNode(\"p\", null, \"加载中...\", -1 /* CACHED */)]))])) : $setup.products.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_cache[19] || (_cache[19] = _createElementVNode(\"div\", {\n    class: \"empty-icon\"\n  }, \"🌾\", -1 /* CACHED */)), _cache[20] || (_cache[20] = _createElementVNode(\"h3\", null, \"暂无农产品\", -1 /* CACHED */)), $setup.isFarmer ? (_openBlock(), _createElementBlock(\"p\", _hoisted_17, \"点击\\\"发布农产品\\\"开始发布您的产品\")) : (_openBlock(), _createElementBlock(\"p\", _hoisted_18, \"暂无可购买的农产品\"))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.products, product => {\n    return _openBlock(), _createBlock(_component_ProductCard, {\n      key: product.product_id,\n      product: product,\n      \"is-farmer\": $setup.isFarmer,\n      selected: $setup.selectedProducts.includes(product.product_id),\n      onSelect: $setup.handleProductSelect,\n      onView: $setup.handleViewProduct,\n      onEdit: $setup.handleEditProduct,\n      onDelete: $setup.handleDeleteProduct,\n      onOnShelf: $setup.handleOnShelf,\n      onOffShelf: $setup.handleOffShelf,\n      onPurchase: $setup.handlePurchase\n    }, null, 8 /* PROPS */, [\"product\", \"is-farmer\", \"selected\", \"onSelect\", \"onView\", \"onEdit\", \"onDelete\", \"onOnShelf\", \"onOffShelf\", \"onPurchase\"]);\n  }), 128 /* KEYED_FRAGMENT */))]))]), _createCommentVNode(\" 分页 \"), $setup.products.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, \" 共 \" + _toDisplayString($setup.totalCount) + \" 个产品 \", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"button\", {\n    class: \"pagination-btn\",\n    onClick: _cache[8] || (_cache[8] = $event => $setup.handlePageChange($setup.currentPage - 1)),\n    disabled: $setup.currentPage <= 1\n  }, \" 上一页 \", 8 /* PROPS */, _hoisted_23), _createElementVNode(\"span\", _hoisted_24, \" 第 \" + _toDisplayString($setup.currentPage) + \" 页 / 共 \" + _toDisplayString($setup.totalPages) + \" 页 \", 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"pagination-btn\",\n    onClick: _cache[9] || (_cache[9] = $event => $setup.handlePageChange($setup.currentPage + 1)),\n    disabled: $setup.currentPage >= $setup.totalPages\n  }, \" 下一页 \", 8 /* PROPS */, _hoisted_25)])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 创建/编辑产品表单弹窗 \"), $setup.showCreateForm ? (_openBlock(), _createBlock(_component_ProductForm, {\n    key: 2,\n    product: $setup.editingProduct,\n    \"is-edit\": !!$setup.editingProduct,\n    onClose: $setup.handleFormClose,\n    onSuccess: $setup.handleFormSuccess\n  }, null, 8 /* PROPS */, [\"product\", \"is-edit\", \"onClose\", \"onSuccess\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 产品详情弹窗 \"), $setup.showProductDetail ? (_openBlock(), _createBlock(_component_ProductDetail, {\n    key: 3,\n    \"product-id\": $setup.viewingProductId,\n    onClose: _cache[10] || (_cache[10] = $event => $setup.showProductDetail = false)\n  }, null, 8 /* PROPS */, [\"product-id\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 批量操作弹窗 \"), $setup.showBatchModal ? (_openBlock(), _createBlock(_component_BatchActionModal, {\n    key: 4,\n    \"selected-count\": $setup.selectedProducts.length,\n    onClose: _cache[11] || (_cache[11] = $event => $setup.showBatchModal = false),\n    onConfirm: $setup.handleBatchConfirm\n  }, null, 8 /* PROPS */, [\"selected-count\", \"onConfirm\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","onClick","_cache","args","$setup","goBack","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","userInfo","nickname","_hoisted_7","userRoleText","_hoisted_8","_hoisted_9","_hoisted_10","searchKeyword","$event","type","placeholder","onKeyup","_withKeys","handleSearch","_hoisted_11","statusFilter","onChange","handleFilterChange","isFarmer","_hoisted_12","showCreateForm","handleBatchAction","disabled","selectedProducts","length","_hoisted_14","loading","_hoisted_15","products","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_Fragment","_renderList","product","_createBlock","_component_ProductCard","key","product_id","selected","includes","onSelect","handleProductSelect","onView","handleViewProduct","onEdit","handleEditProduct","onDelete","handleDeleteProduct","onOnShelf","handleOnShelf","onOffShelf","handleOffShelf","onPurchase","handlePurchase","_hoisted_20","_hoisted_21","totalCount","_hoisted_22","handlePageChange","currentPage","_hoisted_23","_hoisted_24","totalPages","_hoisted_25","_component_ProductForm","editingProduct","onClose","handleFormClose","onSuccess","handleFormSuccess","showProductDetail","_component_ProductDetail","viewingProductId","showBatchModal","_component_BatchActionModal","onConfirm","handleBatchConfirm"],"sources":["D:\\STUDY\\FarmerHappy\\farmer_happy\\src\\trading\\ProductList.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-list-container\">\r\n    <!-- 顶部导航栏 -->\r\n    <header class=\"header\">\r\n      <div class=\"header-left\">\r\n        <button class=\"btn-back\" @click=\"goBack\">\r\n          <span class=\"back-icon\">←</span>\r\n          返回\r\n        </button>\r\n        <h1 class=\"page-title\">农产品交易</h1>\r\n      </div>\r\n      <div class=\"header-right\">\r\n        <div class=\"user-info\">\r\n          <span class=\"user-name\">{{ userInfo.nickname || '用户' }}</span>\r\n          <span class=\"user-role\">{{ userRoleText }}</span>\r\n        </div>\r\n      </div>\r\n    </header>\r\n\r\n    <!-- 搜索和筛选区域 -->\r\n    <div class=\"search-section\">\r\n      <div class=\"search-container\">\r\n        <div class=\"search-box\">\r\n          <input\r\n            v-model=\"searchKeyword\"\r\n            type=\"text\"\r\n            placeholder=\"搜索农产品标题...\"\r\n            class=\"search-input\"\r\n            @keyup.enter=\"handleSearch\"\r\n          />\r\n          <button class=\"search-btn\" @click=\"handleSearch\">\r\n            <span class=\"search-icon\">🔍</span>\r\n          </button>\r\n        </div>\r\n        \r\n        <div class=\"filter-section\">\r\n          <select v-model=\"statusFilter\" class=\"filter-select\" @change=\"handleFilterChange\">\r\n            <option value=\"\">全部状态</option>\r\n            <option value=\"draft\">草稿</option>\r\n            <option value=\"on_shelf\">在售</option>\r\n            <option value=\"off_shelf\">下架</option>\r\n            <option value=\"sold_out\">售罄</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 操作按钮区域 -->\r\n    <div class=\"action-section\" v-if=\"isFarmer\">\r\n      <button class=\"btn-primary\" @click=\"showCreateForm = true\">\r\n        <span class=\"btn-icon\">+</span>\r\n        发布农产品\r\n      </button>\r\n      <button \r\n        class=\"btn-secondary\" \r\n        @click=\"handleBatchAction\"\r\n        :disabled=\"selectedProducts.length === 0\"\r\n      >\r\n        <span class=\"btn-icon\">📦</span>\r\n        批量操作 ({{ selectedProducts.length }})\r\n      </button>\r\n    </div>\r\n\r\n    <!-- 产品列表 -->\r\n    <div class=\"products-section\">\r\n      <div v-if=\"loading\" class=\"loading-container\">\r\n        <div class=\"loading-spinner\"></div>\r\n        <p>加载中...</p>\r\n      </div>\r\n\r\n      <div v-else-if=\"products.length === 0\" class=\"empty-container\">\r\n        <div class=\"empty-icon\">🌾</div>\r\n        <h3>暂无农产品</h3>\r\n        <p v-if=\"isFarmer\">点击\"发布农产品\"开始发布您的产品</p>\r\n        <p v-else>暂无可购买的农产品</p>\r\n      </div>\r\n\r\n      <div v-else class=\"products-grid\">\r\n        <ProductCard\r\n          v-for=\"product in products\"\r\n          :key=\"product.product_id\"\r\n          :product=\"product\"\r\n          :is-farmer=\"isFarmer\"\r\n          :selected=\"selectedProducts.includes(product.product_id)\"\r\n          @select=\"handleProductSelect\"\r\n          @view=\"handleViewProduct\"\r\n          @edit=\"handleEditProduct\"\r\n          @delete=\"handleDeleteProduct\"\r\n          @on-shelf=\"handleOnShelf\"\r\n          @off-shelf=\"handleOffShelf\"\r\n          @purchase=\"handlePurchase\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 分页 -->\r\n    <div class=\"pagination-section\" v-if=\"products.length > 0\">\r\n      <div class=\"pagination-info\">\r\n        共 {{ totalCount }} 个产品\r\n      </div>\r\n      <div class=\"pagination-controls\">\r\n        <button \r\n          class=\"pagination-btn\" \r\n          @click=\"handlePageChange(currentPage - 1)\"\r\n          :disabled=\"currentPage <= 1\"\r\n        >\r\n          上一页\r\n        </button>\r\n        <span class=\"pagination-info\">\r\n          第 {{ currentPage }} 页 / 共 {{ totalPages }} 页\r\n        </span>\r\n        <button \r\n          class=\"pagination-btn\" \r\n          @click=\"handlePageChange(currentPage + 1)\"\r\n          :disabled=\"currentPage >= totalPages\"\r\n        >\r\n          下一页\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 创建/编辑产品表单弹窗 -->\r\n    <ProductForm\r\n      v-if=\"showCreateForm\"\r\n      :product=\"editingProduct\"\r\n      :is-edit=\"!!editingProduct\"\r\n      @close=\"handleFormClose\"\r\n      @success=\"handleFormSuccess\"\r\n    />\r\n\r\n    <!-- 产品详情弹窗 -->\r\n    <ProductDetail\r\n      v-if=\"showProductDetail\"\r\n      :product-id=\"viewingProductId\"\r\n      @close=\"showProductDetail = false\"\r\n    />\r\n\r\n    <!-- 批量操作弹窗 -->\r\n    <BatchActionModal\r\n      v-if=\"showBatchModal\"\r\n      :selected-count=\"selectedProducts.length\"\r\n      @close=\"showBatchModal = false\"\r\n      @confirm=\"handleBatchConfirm\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, reactive } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { productService } from '../api/product';\r\nimport logger from '../utils/logger';\r\nimport ProductCard from '../components/ProductCard.vue';\r\nimport ProductForm from '../components/ProductForm.vue';\r\nimport ProductDetail from '../components/ProductDetail.vue';\r\nimport BatchActionModal from '../components/BatchActionModal.vue';\r\n\r\nexport default {\r\n  name: 'ProductList',\r\n  components: {\r\n    ProductCard,\r\n    ProductForm,\r\n    ProductDetail,\r\n    BatchActionModal\r\n  },\r\n  setup() {\r\n    const router = useRouter();\r\n    const userInfo = ref({});\r\n    const products = ref([]);\r\n    const loading = ref(false);\r\n    const searchKeyword = ref('');\r\n    const statusFilter = ref('');\r\n    const selectedProducts = ref([]);\r\n    const showCreateForm = ref(false);\r\n    const showProductDetail = ref(false);\r\n    const showBatchModal = ref(false);\r\n    const editingProduct = ref(null);\r\n    const viewingProductId = ref(null);\r\n\r\n    // 分页相关\r\n    const currentPage = ref(1);\r\n    const pageSize = ref(12);\r\n    const totalCount = ref(0);\r\n    const totalPages = computed(() => Math.ceil(totalCount.value / pageSize.value));\r\n\r\n    // 用户类型判断\r\n    const isFarmer = computed(() => userInfo.value.userType === 'farmer');\r\n\r\n    // 用户角色文本\r\n    const userRoleText = computed(() => {\r\n      const roleMap = {\r\n        farmer: '农户',\r\n        buyer: '买家',\r\n        expert: '技术专家',\r\n        bank: '银行'\r\n      };\r\n      return roleMap[userInfo.value.userType] || '无';\r\n    });\r\n\r\n    // 获取用户信息\r\n    onMounted(() => {\r\n      const storedUser = localStorage.getItem('user');\r\n      if (storedUser) {\r\n        try {\r\n          userInfo.value = JSON.parse(storedUser);\r\n          logger.info('PRODUCT_LIST', '加载用户信息成功', { userType: userInfo.value.userType });\r\n          loadProducts();\r\n        } catch (error) {\r\n          logger.error('PRODUCT_LIST', '解析用户信息失败', {}, error);\r\n          router.push('/login');\r\n        }\r\n      } else {\r\n        logger.warn('PRODUCT_LIST', '未找到用户信息，跳转到登录页');\r\n        router.push('/login');\r\n      }\r\n    });\r\n\r\n    // 加载产品列表\r\n    const loadProducts = async () => {\r\n      loading.value = true;\r\n      try {\r\n        logger.info('PRODUCT_LIST', '开始加载产品列表', {\r\n          phone: userInfo.value.phone,\r\n          status: statusFilter.value,\r\n          title: searchKeyword.value,\r\n          page: currentPage.value\r\n        });\r\n\r\n        const response = await productService.getProductList(\r\n          userInfo.value.phone,\r\n          statusFilter.value || null,\r\n          searchKeyword.value || null\r\n        );\r\n\r\n        products.value = response.list || [];\r\n        totalCount.value = response.total_count || 0;\r\n\r\n        logger.info('PRODUCT_LIST', '产品列表加载成功', {\r\n          count: products.value.length,\r\n          total: totalCount.value\r\n        });\r\n      } catch (error) {\r\n        logger.error('PRODUCT_LIST', '加载产品列表失败', {\r\n          errorMessage: error.message || error\r\n        }, error);\r\n        products.value = [];\r\n        totalCount.value = 0;\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    // 返回上一页\r\n    const goBack = () => {\r\n      logger.userAction('BACK_CLICK', { from: 'product_list' });\r\n      router.push('/home');\r\n    };\r\n\r\n    // 搜索处理\r\n    const handleSearch = () => {\r\n      logger.userAction('SEARCH_CLICK', { keyword: searchKeyword.value });\r\n      currentPage.value = 1;\r\n      loadProducts();\r\n    };\r\n\r\n    // 筛选处理\r\n    const handleFilterChange = () => {\r\n      logger.userAction('FILTER_CHANGE', { status: statusFilter.value });\r\n      currentPage.value = 1;\r\n      loadProducts();\r\n    };\r\n\r\n    // 分页处理\r\n    const handlePageChange = (page) => {\r\n      if (page >= 1 && page <= totalPages.value) {\r\n        logger.userAction('PAGE_CHANGE', { page });\r\n        currentPage.value = page;\r\n        loadProducts();\r\n      }\r\n    };\r\n\r\n    // 产品选择处理\r\n    const handleProductSelect = (productId, selected) => {\r\n      if (selected) {\r\n        selectedProducts.value.push(productId);\r\n      } else {\r\n        const index = selectedProducts.value.indexOf(productId);\r\n        if (index > -1) {\r\n          selectedProducts.value.splice(index, 1);\r\n        }\r\n      }\r\n      logger.userAction('PRODUCT_SELECT', { productId, selected });\r\n    };\r\n\r\n    // 查看产品详情\r\n    const handleViewProduct = (productId) => {\r\n      logger.userAction('VIEW_PRODUCT', { productId });\r\n      viewingProductId.value = productId;\r\n      showProductDetail.value = true;\r\n    };\r\n\r\n    // 编辑产品\r\n    const handleEditProduct = (product) => {\r\n      logger.userAction('EDIT_PRODUCT', { productId: product.product_id });\r\n      editingProduct.value = product;\r\n      showCreateForm.value = true;\r\n    };\r\n\r\n    // 删除产品\r\n    const handleDeleteProduct = async (productId) => {\r\n      if (!confirm('确定要删除这个产品吗？')) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        logger.userAction('DELETE_PRODUCT', { productId });\r\n        await productService.deleteProduct(productId, userInfo.value.phone);\r\n        logger.info('PRODUCT_LIST', '产品删除成功', { productId });\r\n        loadProducts();\r\n      } catch (error) {\r\n        logger.error('PRODUCT_LIST', '删除产品失败', {\r\n          productId,\r\n          errorMessage: error.message || error\r\n        }, error);\r\n        alert('删除失败：' + (error.message || error));\r\n      }\r\n    };\r\n\r\n    // 上架产品\r\n    const handleOnShelf = async (productId) => {\r\n      try {\r\n        logger.userAction('ON_SHELF_PRODUCT', { productId });\r\n        await productService.onShelfProduct(productId, userInfo.value.phone);\r\n        logger.info('PRODUCT_LIST', '产品上架成功', { productId });\r\n        loadProducts();\r\n      } catch (error) {\r\n        logger.error('PRODUCT_LIST', '产品上架失败', {\r\n          productId,\r\n          errorMessage: error.message || error\r\n        }, error);\r\n        alert('上架失败：' + (error.message || error));\r\n      }\r\n    };\r\n\r\n    // 下架产品\r\n    const handleOffShelf = async (productId) => {\r\n      try {\r\n        logger.userAction('OFF_SHELF_PRODUCT', { productId });\r\n        await productService.offShelfProduct(productId, userInfo.value.phone);\r\n        logger.info('PRODUCT_LIST', '产品下架成功', { productId });\r\n        loadProducts();\r\n      } catch (error) {\r\n        logger.error('PRODUCT_LIST', '产品下架失败', {\r\n          productId,\r\n          errorMessage: error.message || error\r\n        }, error);\r\n        alert('下架失败：' + (error.message || error));\r\n      }\r\n    };\r\n\r\n    // 购买产品\r\n    const handlePurchase = (product) => {\r\n      logger.userAction('PURCHASE_PRODUCT', { productId: product.product_id });\r\n      alert(`购买功能开发中...\\n产品：${product.title}`);\r\n    };\r\n\r\n    // 批量操作\r\n    const handleBatchAction = () => {\r\n      logger.userAction('BATCH_ACTION_CLICK', { count: selectedProducts.value.length });\r\n      showBatchModal.value = true;\r\n    };\r\n\r\n    // 批量操作确认\r\n    const handleBatchConfirm = async (action) => {\r\n      try {\r\n        logger.userAction('BATCH_CONFIRM', { action, count: selectedProducts.value.length });\r\n        await productService.batchActionProducts(action, selectedProducts.value, userInfo.value.phone);\r\n        logger.info('PRODUCT_LIST', '批量操作成功', { action, count: selectedProducts.value.length });\r\n        selectedProducts.value = [];\r\n        showBatchModal.value = false;\r\n        loadProducts();\r\n      } catch (error) {\r\n        logger.error('PRODUCT_LIST', '批量操作失败', {\r\n          action,\r\n          errorMessage: error.message || error\r\n        }, error);\r\n        alert('批量操作失败：' + (error.message || error));\r\n      }\r\n    };\r\n\r\n    // 表单关闭\r\n    const handleFormClose = () => {\r\n      showCreateForm.value = false;\r\n      editingProduct.value = null;\r\n    };\r\n\r\n    // 表单成功\r\n    const handleFormSuccess = () => {\r\n      showCreateForm.value = false;\r\n      editingProduct.value = null;\r\n      loadProducts();\r\n    };\r\n\r\n    return {\r\n      userInfo,\r\n      products,\r\n      loading,\r\n      searchKeyword,\r\n      statusFilter,\r\n      selectedProducts,\r\n      showCreateForm,\r\n      showProductDetail,\r\n      showBatchModal,\r\n      editingProduct,\r\n      viewingProductId,\r\n      currentPage,\r\n      totalCount,\r\n      totalPages,\r\n      isFarmer,\r\n      userRoleText,\r\n      goBack,\r\n      handleSearch,\r\n      handleFilterChange,\r\n      handlePageChange,\r\n      handleProductSelect,\r\n      handleViewProduct,\r\n      handleEditProduct,\r\n      handleDeleteProduct,\r\n      handleOnShelf,\r\n      handleOffShelf,\r\n      handlePurchase,\r\n      handleBatchAction,\r\n      handleBatchConfirm,\r\n      handleFormClose,\r\n      handleFormSuccess\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import '../assets/styles/theme.css';\r\n\r\n.product-list-container {\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #f5f3ff 0%, #ede9fe 100%);\r\n}\r\n\r\n/* 顶部导航栏 */\r\n.header {\r\n  background: var(--white);\r\n  padding: 1rem 2rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  box-shadow: 0 2px 8px rgba(107, 70, 193, 0.1);\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 100;\r\n}\r\n\r\n.header-left {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n.btn-back {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  padding: 0.5rem 1rem;\r\n  background: transparent;\r\n  border: 1px solid var(--gray-300);\r\n  border-radius: 8px;\r\n  color: var(--gray-600);\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.btn-back:hover {\r\n  background: var(--gray-100);\r\n  border-color: var(--primary-light);\r\n  color: var(--primary);\r\n}\r\n\r\n.back-icon {\r\n  font-size: 1rem;\r\n}\r\n\r\n.page-title {\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  color: var(--primary);\r\n  margin: 0;\r\n}\r\n\r\n.header-right {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.user-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n}\r\n\r\n.user-name {\r\n  font-size: 0.875rem;\r\n  font-weight: 600;\r\n  color: #1a202c;\r\n}\r\n\r\n.user-role {\r\n  font-size: 0.75rem;\r\n  color: var(--primary);\r\n}\r\n\r\n/* 搜索区域 */\r\n.search-section {\r\n  padding: 1.5rem 2rem;\r\n}\r\n\r\n.search-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n}\r\n\r\n.search-box {\r\n  flex: 1;\r\n  display: flex;\r\n  background: var(--white);\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 8px rgba(107, 70, 193, 0.1);\r\n  overflow: hidden;\r\n}\r\n\r\n.search-input {\r\n  flex: 1;\r\n  padding: 0.875rem 1rem;\r\n  border: none;\r\n  outline: none;\r\n  font-size: 1rem;\r\n  background: transparent;\r\n}\r\n\r\n.search-input::placeholder {\r\n  color: var(--gray-400);\r\n}\r\n\r\n.search-btn {\r\n  padding: 0.875rem 1rem;\r\n  background: var(--primary);\r\n  border: none;\r\n  color: var(--white);\r\n  cursor: pointer;\r\n  transition: background 0.2s;\r\n}\r\n\r\n.search-btn:hover {\r\n  background: var(--primary-dark);\r\n}\r\n\r\n.search-icon {\r\n  font-size: 1rem;\r\n}\r\n\r\n.filter-section {\r\n  display: flex;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.filter-select {\r\n  padding: 0.875rem 1rem;\r\n  border: 1px solid var(--gray-300);\r\n  border-radius: 8px;\r\n  background: var(--white);\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n  min-width: 120px;\r\n}\r\n\r\n/* 操作按钮区域 */\r\n.action-section {\r\n  padding: 0 2rem 1rem;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  gap: 1rem;\r\n}\r\n\r\n.btn-primary, .btn-secondary {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  padding: 0.75rem 1.5rem;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 0.875rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.btn-primary {\r\n  background: var(--primary);\r\n  color: var(--white);\r\n}\r\n\r\n.btn-primary:hover {\r\n  background: var(--primary-dark);\r\n}\r\n\r\n.btn-secondary {\r\n  background: var(--white);\r\n  color: var(--primary);\r\n  border: 1px solid var(--primary);\r\n}\r\n\r\n.btn-secondary:hover {\r\n  background: var(--primary-light);\r\n  color: var(--white);\r\n}\r\n\r\n.btn-secondary:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.btn-icon {\r\n  font-size: 1rem;\r\n}\r\n\r\n/* 产品列表区域 */\r\n.products-section {\r\n  padding: 0 2rem 2rem;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.loading-container, .empty-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 4rem 2rem;\r\n  background: var(--white);\r\n  border-radius: 16px;\r\n  box-shadow: 0 4px 12px rgba(107, 70, 193, 0.08);\r\n}\r\n\r\n.loading-spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 4px solid var(--gray-200);\r\n  border-top: 4px solid var(--primary);\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.empty-icon {\r\n  font-size: 4rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.empty-container h3 {\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n  color: var(--gray-500);\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.empty-container p {\r\n  color: var(--gray-400);\r\n  margin: 0;\r\n}\r\n\r\n.products-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 1.5rem;\r\n}\r\n\r\n/* 分页区域 */\r\n.pagination-section {\r\n  padding: 2rem;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background: var(--white);\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 8px rgba(107, 70, 193, 0.1);\r\n}\r\n\r\n.pagination-info {\r\n  color: var(--gray-500);\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.pagination-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n.pagination-btn {\r\n  padding: 0.5rem 1rem;\r\n  border: 1px solid var(--gray-300);\r\n  border-radius: 6px;\r\n  background: var(--white);\r\n  color: var(--gray-600);\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.pagination-btn:hover:not(:disabled) {\r\n  background: var(--primary);\r\n  color: var(--white);\r\n  border-color: var(--primary);\r\n}\r\n\r\n.pagination-btn:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .header {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .search-section {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .search-container {\r\n    flex-direction: column;\r\n    gap: 0.75rem;\r\n  }\r\n\r\n  .action-section {\r\n    padding: 0 1rem 1rem;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .products-section {\r\n    padding: 0 1rem 1rem;\r\n  }\r\n\r\n  .products-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  .pagination-section {\r\n    padding: 1rem;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
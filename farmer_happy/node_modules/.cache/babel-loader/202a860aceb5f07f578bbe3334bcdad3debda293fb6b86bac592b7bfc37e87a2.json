{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"community-container\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = {\n  class: \"header-left\"\n};\nconst _hoisted_4 = {\n  class: \"main-content\"\n};\nconst _hoisted_5 = {\n  class: \"filter-section\"\n};\nconst _hoisted_6 = {\n  class: \"filter-tabs\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  class: \"search-box\"\n};\nconst _hoisted_9 = {\n  class: \"sort-section\"\n};\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = {\n  key: 0,\n  class: \"content-list\"\n};\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = {\n  class: \"content-header\"\n};\nconst _hoisted_14 = {\n  class: \"content-meta\"\n};\nconst _hoisted_15 = {\n  class: \"author\"\n};\nconst _hoisted_16 = {\n  class: \"time\"\n};\nconst _hoisted_17 = {\n  class: \"content-title\"\n};\nconst _hoisted_18 = {\n  class: \"content-summary\"\n};\nconst _hoisted_19 = {\n  key: 0,\n  class: \"content-images\"\n};\nconst _hoisted_20 = [\"src\", \"alt\", \"onClick\"];\nconst _hoisted_21 = {\n  key: 0,\n  class: \"image-count\"\n};\nconst _hoisted_22 = {\n  class: \"content-footer\"\n};\nconst _hoisted_23 = {\n  class: \"content-stats\"\n};\nconst _hoisted_24 = {\n  class: \"stat-item\"\n};\nconst _hoisted_25 = {\n  class: \"stat-item\"\n};\nconst _hoisted_26 = {\n  class: \"content-role\"\n};\nconst _hoisted_27 = {\n  key: 1,\n  class: \"empty-state\"\n};\nconst _hoisted_28 = {\n  key: 2,\n  class: \"loading-state\"\n};\nconst _hoisted_29 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 顶部导航栏 \"), _createElementVNode(\"header\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    class: \"btn-back\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.goBack && $setup.goBack(...args))\n  }, [...(_cache[7] || (_cache[7] = [_createElementVNode(\"span\", {\n    class: \"back-icon\"\n  }, \"←\", -1 /* CACHED */), _createTextVNode(\" 返回 \", -1 /* CACHED */)]))]), _cache[8] || (_cache[8] = _createElementVNode(\"h1\", {\n    class: \"header-title\"\n  }, \"专家农户交流平台\", -1 /* CACHED */))]), _createElementVNode(\"button\", {\n    class: \"btn-publish\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.handlePublishClick && $setup.handlePublishClick(...args))\n  }, [...(_cache[9] || (_cache[9] = [_createElementVNode(\"span\", {\n    class: \"publish-icon\"\n  }, \"✎\", -1 /* CACHED */), _createTextVNode(\" 发布内容 \", -1 /* CACHED */)]))])]), _createCommentVNode(\" 主内容区域 \"), _createElementVNode(\"main\", _hoisted_4, [_createCommentVNode(\" 筛选和搜索区域 \"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.contentTypes, type => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: type.value,\n      class: _normalizeClass([\"filter-tab\", {\n        active: $setup.currentType === type.value\n      }]),\n      onClick: $event => $setup.handleTypeChange(type.value)\n    }, _toDisplayString(type.label), 11 /* TEXT, CLASS, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.searchKeyword = $event),\n    type: \"text\",\n    placeholder: \"搜索内容...\",\n    class: \"search-input\",\n    onInput: _cache[3] || (_cache[3] = (...args) => $setup.handleSearch && $setup.handleSearch(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.searchKeyword]]), _cache[10] || (_cache[10] = _createElementVNode(\"span\", {\n    class: \"search-icon\"\n  }, \"🔍\", -1 /* CACHED */))])]), _createCommentVNode(\" 排序选项 \"), _createElementVNode(\"div\", _hoisted_9, [_cache[11] || (_cache[11] = _createElementVNode(\"span\", {\n    class: \"sort-label\"\n  }, \"排序：\", -1 /* CACHED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.sortOptions, sort => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: sort.value,\n      class: _normalizeClass([\"sort-btn\", {\n        active: $setup.currentSort === sort.value\n      }]),\n      onClick: $event => $setup.handleSortChange(sort.value)\n    }, _toDisplayString(sort.label), 11 /* TEXT, CLASS, PROPS */, _hoisted_10);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" 内容列表 \"), !$setup.loading && $setup.contentList.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.contentList, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.contentId,\n      class: \"content-card\",\n      onClick: $event => $setup.handleContentClick(item.contentId)\n    }, [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", {\n      class: _normalizeClass([\"content-type-badge\", $setup.getTypeClass(item.contentType)])\n    }, _toDisplayString($setup.getTypeLabel(item.contentType)), 3 /* TEXT, CLASS */), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"span\", _hoisted_15, [_cache[12] || (_cache[12] = _createElementVNode(\"span\", {\n      class: \"author-icon\"\n    }, \"👤\", -1 /* CACHED */)), _createTextVNode(\" \" + _toDisplayString(item.authorName), 1 /* TEXT */)]), _createElementVNode(\"span\", _hoisted_16, _toDisplayString($setup.formatTime(item.createdAt)), 1 /* TEXT */)])]), _createElementVNode(\"h3\", _hoisted_17, _toDisplayString(item.title), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_18, _toDisplayString(item.content), 1 /* TEXT */), item.images && item.images.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.images.slice(0, 3), (image, idx) => {\n      return _openBlock(), _createElementBlock(\"img\", {\n        key: idx,\n        src: image,\n        alt: `图片${idx + 1}`,\n        class: \"content-image\",\n        onClick: _withModifiers($event => $setup.previewImage(image, item.images), [\"stop\"])\n      }, null, 8 /* PROPS */, _hoisted_20);\n    }), 128 /* KEYED_FRAGMENT */)), item.images.length > 3 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_21, \"+\" + _toDisplayString(item.images.length - 3), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"span\", _hoisted_24, [_cache[13] || (_cache[13] = _createElementVNode(\"span\", {\n      class: \"stat-icon\"\n    }, \"👁\", -1 /* CACHED */)), _createTextVNode(\" \" + _toDisplayString(item.viewCount || 0), 1 /* TEXT */)]), _createElementVNode(\"span\", _hoisted_25, [_cache[14] || (_cache[14] = _createElementVNode(\"span\", {\n      class: \"stat-icon\"\n    }, \"💬\", -1 /* CACHED */)), _createTextVNode(\" \" + _toDisplayString(item.commentCount || 0), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"span\", {\n      class: _normalizeClass([\"role-badge\", $setup.getRoleClass(item.authorRole)])\n    }, _toDisplayString($setup.getRoleLabel(item.authorRole)), 3 /* TEXT, CLASS */)])])], 8 /* PROPS */, _hoisted_12);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 空状态 \"), !$setup.loading && $setup.contentList.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, [...(_cache[15] || (_cache[15] = [_createElementVNode(\"div\", {\n    class: \"empty-icon\"\n  }, \"📝\", -1 /* CACHED */), _createElementVNode(\"p\", {\n    class: \"empty-text\"\n  }, \"暂无内容，快来发布第一个帖子吧！\", -1 /* CACHED */)]))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 加载状态 \"), $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_28, [...(_cache[16] || (_cache[16] = [_createElementVNode(\"div\", {\n    class: \"loading-spinner\"\n  }, null, -1 /* CACHED */), _createElementVNode(\"p\", null, \"加载中...\", -1 /* CACHED */)]))])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 图片预览模态框 \"), $setup.showImagePreview ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"image-preview-modal\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $setup.closeImagePreview && $setup.closeImagePreview(...args))\n  }, [_createElementVNode(\"img\", {\n    src: $setup.currentImage,\n    alt: '预览图片',\n    class: \"preview-image\",\n    onClick: _cache[4] || (_cache[4] = _withModifiers(() => {}, [\"stop\"]))\n  }, null, 8 /* PROPS */, _hoisted_29), _createElementVNode(\"button\", {\n    class: \"close-preview\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $setup.closeImagePreview && $setup.closeImagePreview(...args))\n  }, \"×\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","onClick","_cache","args","$setup","goBack","handlePublishClick","_hoisted_4","_hoisted_5","_hoisted_6","_Fragment","_renderList","contentTypes","type","key","value","_normalizeClass","active","currentType","$event","handleTypeChange","label","_hoisted_7","_hoisted_8","searchKeyword","placeholder","onInput","handleSearch","_hoisted_9","sortOptions","sort","currentSort","handleSortChange","_hoisted_10","loading","contentList","length","_hoisted_11","item","contentId","handleContentClick","_hoisted_13","getTypeClass","contentType","getTypeLabel","_hoisted_14","_hoisted_15","_toDisplayString","authorName","_hoisted_16","formatTime","createdAt","_hoisted_17","title","_hoisted_18","content","images","_hoisted_19","slice","image","idx","src","alt","_withModifiers","previewImage","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","viewCount","_hoisted_25","commentCount","_hoisted_26","getRoleClass","authorRole","getRoleLabel","_hoisted_27","_hoisted_28","showImagePreview","closeImagePreview","currentImage"],"sources":["D:\\STUDY\\FarmerHappy\\farmer_happy\\src\\community\\Community.vue"],"sourcesContent":["<template>\r\n  <div class=\"community-container\">\r\n    <!-- 顶部导航栏 -->\r\n    <header class=\"header\">\r\n      <div class=\"header-left\">\r\n        <button class=\"btn-back\" @click=\"goBack\">\r\n          <span class=\"back-icon\">←</span>\r\n          返回\r\n        </button>\r\n        <h1 class=\"header-title\">专家农户交流平台</h1>\r\n      </div>\r\n      <button class=\"btn-publish\" @click=\"handlePublishClick\">\r\n        <span class=\"publish-icon\">✎</span>\r\n        发布内容\r\n      </button>\r\n    </header>\r\n\r\n    <!-- 主内容区域 -->\r\n    <main class=\"main-content\">\r\n      <!-- 筛选和搜索区域 -->\r\n      <div class=\"filter-section\">\r\n        <div class=\"filter-tabs\">\r\n          <button\r\n            v-for=\"type in contentTypes\"\r\n            :key=\"type.value\"\r\n            class=\"filter-tab\"\r\n            :class=\"{ active: currentType === type.value }\"\r\n            @click=\"handleTypeChange(type.value)\"\r\n          >\r\n            {{ type.label }}\r\n          </button>\r\n        </div>\r\n        <div class=\"search-box\">\r\n          <input\r\n            v-model=\"searchKeyword\"\r\n            type=\"text\"\r\n            placeholder=\"搜索内容...\"\r\n            class=\"search-input\"\r\n            @input=\"handleSearch\"\r\n          />\r\n          <span class=\"search-icon\">🔍</span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 排序选项 -->\r\n      <div class=\"sort-section\">\r\n        <span class=\"sort-label\">排序：</span>\r\n        <button\r\n          v-for=\"sort in sortOptions\"\r\n          :key=\"sort.value\"\r\n          class=\"sort-btn\"\r\n          :class=\"{ active: currentSort === sort.value }\"\r\n          @click=\"handleSortChange(sort.value)\"\r\n        >\r\n          {{ sort.label }}\r\n        </button>\r\n      </div>\r\n\r\n      <!-- 内容列表 -->\r\n      <div class=\"content-list\" v-if=\"!loading && contentList.length > 0\">\r\n        <div\r\n          v-for=\"item in contentList\"\r\n          :key=\"item.contentId\"\r\n          class=\"content-card\"\r\n          @click=\"handleContentClick(item.contentId)\"\r\n        >\r\n          <div class=\"content-header\">\r\n            <div class=\"content-type-badge\" :class=\"getTypeClass(item.contentType)\">\r\n              {{ getTypeLabel(item.contentType) }}\r\n            </div>\r\n            <div class=\"content-meta\">\r\n              <span class=\"author\">\r\n                <span class=\"author-icon\">👤</span>\r\n                {{ item.authorName }}\r\n              </span>\r\n              <span class=\"time\">{{ formatTime(item.createdAt) }}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <h3 class=\"content-title\">{{ item.title }}</h3>\r\n          \r\n          <p class=\"content-summary\">{{ item.content }}</p>\r\n          \r\n          <div v-if=\"item.images && item.images.length > 0\" class=\"content-images\">\r\n            <img\r\n              v-for=\"(image, idx) in item.images.slice(0, 3)\"\r\n              :key=\"idx\"\r\n              :src=\"image\"\r\n              :alt=\"`图片${idx + 1}`\"\r\n              class=\"content-image\"\r\n              @click.stop=\"previewImage(image, item.images)\"\r\n            />\r\n            <span v-if=\"item.images.length > 3\" class=\"image-count\">+{{ item.images.length - 3 }}</span>\r\n          </div>\r\n          \r\n          <div class=\"content-footer\">\r\n            <div class=\"content-stats\">\r\n              <span class=\"stat-item\">\r\n                <span class=\"stat-icon\">👁</span>\r\n                {{ item.viewCount || 0 }}\r\n              </span>\r\n              <span class=\"stat-item\">\r\n                <span class=\"stat-icon\">💬</span>\r\n                {{ item.commentCount || 0 }}\r\n              </span>\r\n            </div>\r\n            <div class=\"content-role\">\r\n              <span class=\"role-badge\" :class=\"getRoleClass(item.authorRole)\">\r\n                {{ getRoleLabel(item.authorRole) }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 空状态 -->\r\n      <div v-if=\"!loading && contentList.length === 0\" class=\"empty-state\">\r\n        <div class=\"empty-icon\">📝</div>\r\n        <p class=\"empty-text\">暂无内容，快来发布第一个帖子吧！</p>\r\n      </div>\r\n\r\n      <!-- 加载状态 -->\r\n      <div v-if=\"loading\" class=\"loading-state\">\r\n        <div class=\"loading-spinner\"></div>\r\n        <p>加载中...</p>\r\n      </div>\r\n    </main>\r\n\r\n    <!-- 图片预览模态框 -->\r\n    <div v-if=\"showImagePreview\" class=\"image-preview-modal\" @click=\"closeImagePreview\">\r\n      <img :src=\"currentImage\" :alt=\"'预览图片'\" class=\"preview-image\" @click.stop />\r\n      <button class=\"close-preview\" @click=\"closeImagePreview\">×</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, watch } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { communityService } from '../api/community';\r\nimport logger from '../utils/logger';\r\n\r\nexport default {\r\n  name: 'Community',\r\n  setup() {\r\n    const router = useRouter();\r\n    const loading = ref(false);\r\n    const contentList = ref([]);\r\n    const currentType = ref('all');\r\n    const currentSort = ref('newest');\r\n    const searchKeyword = ref('');\r\n    const showImagePreview = ref(false);\r\n    const currentImage = ref('');\r\n    const imageList = ref([]);\r\n\r\n    const contentTypes = [\r\n      { value: 'all', label: '全部' },\r\n      { value: 'articles', label: '文章' },\r\n      { value: 'questions', label: '提问' },\r\n      { value: 'experiences', label: '经验分享' }\r\n    ];\r\n\r\n    const sortOptions = [\r\n      { value: 'newest', label: '最新' },\r\n      { value: 'hottest', label: '最热' },\r\n      { value: 'commented', label: '最多评论' }\r\n    ];\r\n\r\n    // 获取用户信息\r\n    const getUserInfo = () => {\r\n      try {\r\n        const storedUser = localStorage.getItem('user');\r\n        return storedUser ? JSON.parse(storedUser) : null;\r\n      } catch (error) {\r\n        logger.error('COMMUNITY', '获取用户信息失败', {}, error);\r\n        return null;\r\n      }\r\n    };\r\n\r\n    // 加载内容列表\r\n    const loadContentList = async () => {\r\n      loading.value = true;\r\n      try {\r\n        const params = {};\r\n        if (currentType.value !== 'all') {\r\n          params.content_type = currentType.value;\r\n        }\r\n        if (searchKeyword.value) {\r\n          params.keyword = searchKeyword.value;\r\n        }\r\n        if (currentSort.value) {\r\n          params.sort = currentSort.value;\r\n        }\r\n\r\n        logger.info('COMMUNITY', '加载内容列表', params);\r\n        const data = await communityService.getContentList(params);\r\n        contentList.value = data.list || [];\r\n        logger.info('COMMUNITY', '内容列表加载成功', { count: contentList.value.length });\r\n      } catch (error) {\r\n        logger.error('COMMUNITY', '加载内容列表失败', {}, error);\r\n        alert(error.message || '加载内容失败，请稍后重试');\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    // 类型切换\r\n    const handleTypeChange = (type) => {\r\n      if (currentType.value !== type) {\r\n        currentType.value = type;\r\n        logger.userAction('TYPE_CHANGE', { type });\r\n        loadContentList();\r\n      }\r\n    };\r\n\r\n    // 排序切换\r\n    const handleSortChange = (sort) => {\r\n      if (currentSort.value !== sort) {\r\n        currentSort.value = sort;\r\n        logger.userAction('SORT_CHANGE', { sort });\r\n        loadContentList();\r\n      }\r\n    };\r\n\r\n    // 搜索处理\r\n    const handleSearch = () => {\r\n      logger.userAction('SEARCH', { keyword: searchKeyword.value });\r\n      loadContentList();\r\n    };\r\n\r\n    // 点击内容卡片\r\n    const handleContentClick = (contentId) => {\r\n      logger.userAction('CONTENT_CLICK', { contentId });\r\n      router.push(`/community/${contentId}`);\r\n    };\r\n\r\n    // 发布内容\r\n    const handlePublishClick = () => {\r\n      const userInfo = getUserInfo();\r\n      if (!userInfo) {\r\n        router.push('/login');\r\n        return;\r\n      }\r\n      logger.userAction('PUBLISH_CLICK');\r\n      router.push('/community/publish');\r\n    };\r\n\r\n    // 返回\r\n    const goBack = () => {\r\n      router.push('/home');\r\n    };\r\n\r\n    // 格式化时间\r\n    const formatTime = (timeStr) => {\r\n      if (!timeStr) return '';\r\n      try {\r\n        const date = new Date(timeStr);\r\n        const now = new Date();\r\n        const diff = now - date;\r\n        const minutes = Math.floor(diff / 60000);\r\n        const hours = Math.floor(diff / 3600000);\r\n        const days = Math.floor(diff / 86400000);\r\n\r\n        if (minutes < 1) return '刚刚';\r\n        if (minutes < 60) return `${minutes}分钟前`;\r\n        if (hours < 24) return `${hours}小时前`;\r\n        if (days < 7) return `${days}天前`;\r\n        return date.toLocaleDateString('zh-CN');\r\n      } catch (error) {\r\n        return timeStr;\r\n      }\r\n    };\r\n\r\n    // 获取类型标签\r\n    const getTypeLabel = (type) => {\r\n      const typeMap = {\r\n        articles: '文章',\r\n        questions: '提问',\r\n        experiences: '经验分享'\r\n      };\r\n      return typeMap[type] || type;\r\n    };\r\n\r\n    // 获取类型样式类\r\n    const getTypeClass = (type) => {\r\n      return `type-${type}`;\r\n    };\r\n\r\n    // 获取角色标签\r\n    const getRoleLabel = (role) => {\r\n      const roleMap = {\r\n        farmer: '农户',\r\n        expert: '专家',\r\n        buyer: '买家',\r\n        bank: '银行'\r\n      };\r\n      return roleMap[role] || role;\r\n    };\r\n\r\n    // 获取角色样式类\r\n    const getRoleClass = (role) => {\r\n      return `role-${role}`;\r\n    };\r\n\r\n    // 预览图片\r\n    const previewImage = (image, images) => {\r\n      currentImage.value = image;\r\n      imageList.value = images || [];\r\n      showImagePreview.value = true;\r\n    };\r\n\r\n    // 关闭图片预览\r\n    const closeImagePreview = () => {\r\n      showImagePreview.value = false;\r\n      currentImage.value = '';\r\n      imageList.value = [];\r\n    };\r\n\r\n    onMounted(() => {\r\n      logger.lifecycle('Community', 'mounted');\r\n      loadContentList();\r\n    });\r\n\r\n    return {\r\n      loading,\r\n      contentList,\r\n      currentType,\r\n      currentSort,\r\n      searchKeyword,\r\n      contentTypes,\r\n      sortOptions,\r\n      showImagePreview,\r\n      currentImage,\r\n      handleTypeChange,\r\n      handleSortChange,\r\n      handleSearch,\r\n      handleContentClick,\r\n      handlePublishClick,\r\n      goBack,\r\n      formatTime,\r\n      getTypeLabel,\r\n      getTypeClass,\r\n      getRoleLabel,\r\n      getRoleClass,\r\n      previewImage,\r\n      closeImagePreview\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import '../assets/styles/theme.css';\r\n\r\n.community-container {\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #f5f3ff 0%, #ede9fe 100%);\r\n}\r\n\r\n/* 顶部导航栏 */\r\n.header {\r\n  background: var(--white);\r\n  padding: 1rem 2rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  box-shadow: 0 2px 8px rgba(107, 70, 193, 0.1);\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 100;\r\n}\r\n\r\n.header-left {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n.btn-back {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  padding: 0.5rem 1rem;\r\n  background: transparent;\r\n  border: 1px solid var(--gray-300);\r\n  border-radius: 8px;\r\n  color: var(--gray-600);\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.btn-back:hover {\r\n  background: var(--gray-100);\r\n  border-color: var(--primary);\r\n  color: var(--primary);\r\n}\r\n\r\n.back-icon {\r\n  font-size: 1.125rem;\r\n}\r\n\r\n.header-title {\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  color: var(--primary);\r\n  margin: 0;\r\n}\r\n\r\n.btn-publish {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  padding: 0.75rem 1.5rem;\r\n  background: linear-gradient(135deg, var(--primary), var(--primary-light));\r\n  border: none;\r\n  border-radius: 8px;\r\n  color: var(--white);\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  box-shadow: 0 4px 12px rgba(107, 70, 193, 0.3);\r\n}\r\n\r\n.btn-publish:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 6px 16px rgba(107, 70, 193, 0.4);\r\n}\r\n\r\n.publish-icon {\r\n  font-size: 1.125rem;\r\n}\r\n\r\n/* 主内容区域 */\r\n.main-content {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n}\r\n\r\n/* 筛选区域 */\r\n.filter-section {\r\n  background: var(--white);\r\n  padding: 1.5rem;\r\n  border-radius: 16px;\r\n  box-shadow: 0 4px 12px rgba(107, 70, 193, 0.08);\r\n  margin-bottom: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n}\r\n\r\n.filter-tabs {\r\n  display: flex;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.filter-tab {\r\n  padding: 0.625rem 1.25rem;\r\n  background: var(--gray-100);\r\n  border: 2px solid transparent;\r\n  border-radius: 8px;\r\n  color: var(--gray-600);\r\n  font-size: 0.9375rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.filter-tab:hover {\r\n  background: var(--gray-200);\r\n}\r\n\r\n.filter-tab.active {\r\n  background: linear-gradient(135deg, var(--primary), var(--primary-light));\r\n  color: var(--white);\r\n  border-color: var(--primary);\r\n}\r\n\r\n.search-box {\r\n  position: relative;\r\n}\r\n\r\n.search-input {\r\n  width: 100%;\r\n  padding: 0.75rem 1rem 0.75rem 2.5rem;\r\n  border: 2px solid var(--gray-300);\r\n  border-radius: 8px;\r\n  font-size: 0.9375rem;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.search-input:focus {\r\n  outline: none;\r\n  border-color: var(--primary);\r\n  box-shadow: 0 0 0 3px rgba(107, 70, 193, 0.1);\r\n}\r\n\r\n.search-icon {\r\n  position: absolute;\r\n  left: 0.75rem;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  font-size: 1.125rem;\r\n}\r\n\r\n/* 排序区域 */\r\n.sort-section {\r\n  background: var(--white);\r\n  padding: 1rem 1.5rem;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 8px rgba(107, 70, 193, 0.05);\r\n  margin-bottom: 1.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n.sort-label {\r\n  color: var(--gray-600);\r\n  font-size: 0.875rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.sort-btn {\r\n  padding: 0.5rem 1rem;\r\n  background: transparent;\r\n  border: 1px solid var(--gray-300);\r\n  border-radius: 6px;\r\n  color: var(--gray-600);\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.sort-btn:hover {\r\n  background: var(--gray-100);\r\n  border-color: var(--primary-light);\r\n}\r\n\r\n.sort-btn.active {\r\n  background: var(--primary);\r\n  border-color: var(--primary);\r\n  color: var(--white);\r\n}\r\n\r\n/* 内容列表 */\r\n.content-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.5rem;\r\n}\r\n\r\n.content-card {\r\n  background: var(--white);\r\n  padding: 1.5rem;\r\n  border-radius: 16px;\r\n  box-shadow: 0 4px 12px rgba(107, 70, 193, 0.08);\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  border: 2px solid transparent;\r\n}\r\n\r\n.content-card:hover {\r\n  transform: translateY(-4px);\r\n  box-shadow: 0 8px 20px rgba(107, 70, 193, 0.15);\r\n  border-color: var(--primary-light);\r\n}\r\n\r\n.content-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.content-type-badge {\r\n  padding: 0.375rem 0.875rem;\r\n  border-radius: 6px;\r\n  font-size: 0.75rem;\r\n  font-weight: 600;\r\n  color: var(--white);\r\n}\r\n\r\n.type-articles {\r\n  background: linear-gradient(135deg, #8B5CF6, #A78BFA);\r\n}\r\n\r\n.type-questions {\r\n  background: linear-gradient(135deg, #EC4899, #F472B6);\r\n}\r\n\r\n.type-experiences {\r\n  background: linear-gradient(135deg, #06B6D4, #22D3EE);\r\n}\r\n\r\n.content-meta {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  color: var(--gray-500);\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.author {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.25rem;\r\n}\r\n\r\n.author-icon {\r\n  font-size: 1rem;\r\n}\r\n\r\n.content-title {\r\n  font-size: 1.375rem;\r\n  font-weight: 700;\r\n  color: #1a202c;\r\n  margin: 0 0 0.75rem 0;\r\n  line-height: 1.4;\r\n}\r\n\r\n.content-summary {\r\n  color: var(--gray-600);\r\n  font-size: 0.9375rem;\r\n  line-height: 1.6;\r\n  margin: 0 0 1rem 0;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 3;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n}\r\n\r\n.content-images {\r\n  display: flex;\r\n  gap: 0.75rem;\r\n  margin-bottom: 1rem;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.content-image {\r\n  width: 120px;\r\n  height: 120px;\r\n  object-fit: cover;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.content-image:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.image-count {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 120px;\r\n  height: 120px;\r\n  background: rgba(107, 70, 193, 0.8);\r\n  color: var(--white);\r\n  border-radius: 8px;\r\n  font-weight: 600;\r\n}\r\n\r\n.content-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-top: 1rem;\r\n  border-top: 1px solid var(--gray-200);\r\n}\r\n\r\n.content-stats {\r\n  display: flex;\r\n  gap: 1.5rem;\r\n}\r\n\r\n.stat-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.375rem;\r\n  color: var(--gray-500);\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.stat-icon {\r\n  font-size: 1rem;\r\n}\r\n\r\n.role-badge {\r\n  padding: 0.25rem 0.75rem;\r\n  border-radius: 6px;\r\n  font-size: 0.75rem;\r\n  font-weight: 600;\r\n  color: var(--white);\r\n}\r\n\r\n.role-farmer {\r\n  background: linear-gradient(135deg, #10B981, #34D399);\r\n}\r\n\r\n.role-expert {\r\n  background: linear-gradient(135deg, var(--primary), var(--primary-light));\r\n}\r\n\r\n.role-buyer {\r\n  background: linear-gradient(135deg, #F59E0B, #FBBF24);\r\n}\r\n\r\n.role-bank {\r\n  background: linear-gradient(135deg, #6366F1, #818CF8);\r\n}\r\n\r\n/* 空状态 */\r\n.empty-state {\r\n  text-align: center;\r\n  padding: 4rem 2rem;\r\n  background: var(--white);\r\n  border-radius: 16px;\r\n  box-shadow: 0 4px 12px rgba(107, 70, 193, 0.08);\r\n}\r\n\r\n.empty-icon {\r\n  font-size: 4rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.empty-text {\r\n  color: var(--gray-500);\r\n  font-size: 1.125rem;\r\n}\r\n\r\n/* 加载状态 */\r\n.loading-state {\r\n  text-align: center;\r\n  padding: 4rem 2rem;\r\n  background: var(--white);\r\n  border-radius: 16px;\r\n  box-shadow: 0 4px 12px rgba(107, 70, 193, 0.08);\r\n}\r\n\r\n.loading-spinner {\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 4px solid var(--gray-200);\r\n  border-top-color: var(--primary);\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin: 0 auto 1rem;\r\n}\r\n\r\n@keyframes spin {\r\n  to { transform: rotate(360deg); }\r\n}\r\n\r\n/* 图片预览模态框 */\r\n.image-preview-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.9);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n  cursor: pointer;\r\n}\r\n\r\n.preview-image {\r\n  max-width: 90%;\r\n  max-height: 90%;\r\n  object-fit: contain;\r\n  border-radius: 8px;\r\n}\r\n\r\n.close-preview {\r\n  position: absolute;\r\n  top: 2rem;\r\n  right: 2rem;\r\n  width: 48px;\r\n  height: 48px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  border: none;\r\n  border-radius: 50%;\r\n  color: var(--white);\r\n  font-size: 2rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.close-preview:hover {\r\n  background: rgba(255, 255, 255, 0.3);\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .header {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .header-title {\r\n    font-size: 1.25rem;\r\n  }\r\n\r\n  .btn-publish {\r\n    padding: 0.625rem 1rem;\r\n    font-size: 0.875rem;\r\n  }\r\n\r\n  .main-content {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .filter-tabs {\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .content-images {\r\n    gap: 0.5rem;\r\n  }\r\n\r\n  .content-image {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n}\r\n</style>\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
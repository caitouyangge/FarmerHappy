{"ast":null,"code":"import { ref, reactive, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { communityService } from '../api/community';\nimport logger from '../utils/logger';\nexport default {\n  name: 'ContentForm',\n  setup() {\n    const router = useRouter();\n    const submitting = ref(false);\n    const imagePreviews = ref([]);\n    const imageFiles = ref([]);\n    const form = reactive({\n      title: '',\n      content: '',\n      content_type: '',\n      images: []\n    });\n    const errors = reactive({\n      title: '',\n      content: '',\n      content_type: '',\n      images: ''\n    });\n\n    // 获取用户信息\n    const getUserInfo = () => {\n      try {\n        const storedUser = localStorage.getItem('user');\n        return storedUser ? JSON.parse(storedUser) : null;\n      } catch (error) {\n        logger.error('CONTENT_FORM', '获取用户信息失败', {}, error);\n        return null;\n      }\n    };\n\n    // 清除错误\n    const clearError = field => {\n      errors[field] = '';\n    };\n\n    // 验证表单\n    const validateForm = () => {\n      let isValid = true;\n      errors.title = '';\n      errors.content = '';\n      errors.content_type = '';\n      if (!form.content_type) {\n        errors.content_type = '请选择内容类型';\n        isValid = false;\n      }\n      if (!form.title || !form.title.trim()) {\n        errors.title = '请输入标题';\n        isValid = false;\n      } else if (form.title.trim().length < 5) {\n        errors.title = '标题至少需要 5 个字符';\n        isValid = false;\n      } else if (form.title.trim().length > 100) {\n        errors.title = '标题不能超过 100 个字符';\n        isValid = false;\n      }\n      if (!form.content || !form.content.trim()) {\n        errors.content = '请输入内容';\n        isValid = false;\n      } else if (form.content.trim().length < 10) {\n        errors.content = '内容至少需要 10 个字符';\n        isValid = false;\n      } else if (form.content.trim().length > 5000) {\n        errors.content = '内容不能超过 5000 个字符';\n        isValid = false;\n      }\n      logger.validation('ContentForm', isValid, errors);\n      return isValid;\n    };\n\n    // 处理图片选择\n    const handleImageSelect = event => {\n      const files = Array.from(event.target.files);\n      const remainingSlots = 9 - imagePreviews.value.length;\n      if (files.length > remainingSlots) {\n        alert(`最多只能上传 ${remainingSlots} 张图片`);\n        files.splice(remainingSlots);\n      }\n      files.forEach(file => {\n        if (!file.type.startsWith('image/')) {\n          alert('只能上传图片文件');\n          return;\n        }\n        if (file.size > 5 * 1024 * 1024) {\n          alert('图片大小不能超过 5MB');\n          return;\n        }\n        const reader = new FileReader();\n        reader.onload = e => {\n          imagePreviews.value.push(e.target.result);\n          imageFiles.value.push(file);\n        };\n        reader.readAsDataURL(file);\n      });\n\n      // 清空 input 以便再次选择相同文件时也能触发 change 事件\n      event.target.value = '';\n    };\n\n    // 移除图片\n    const removeImage = index => {\n      imagePreviews.value.splice(index, 1);\n      imageFiles.value.splice(index, 1);\n    };\n\n    // 处理图片上传（这里简化处理，实际应该上传到服务器获取URL）\n    const processImages = async () => {\n      // 在实际应用中，这里应该将图片上传到服务器获取URL\n      // 目前简化处理，使用 base64 或者本地预览\n      // 注意：base64 方式不推荐用于生产环境，应该上传到OSS等存储服务\n      return imagePreviews.value;\n    };\n\n    // 提交表单\n    const handleSubmit = async () => {\n      logger.userAction('SUBMIT_CONTENT', {\n        contentType: form.content_type\n      });\n      if (!validateForm()) {\n        logger.warn('CONTENT_FORM', '表单验证失败');\n        return;\n      }\n      const userInfo = getUserInfo();\n      if (!userInfo || !userInfo.phone) {\n        alert('请先登录');\n        router.push('/login');\n        return;\n      }\n      submitting.value = true;\n      try {\n        // 处理图片\n        const images = await processImages();\n        const contentData = {\n          title: form.title.trim(),\n          content: form.content.trim(),\n          content_type: form.content_type,\n          phone: userInfo.phone,\n          images: images\n        };\n        logger.info('CONTENT_FORM', '提交内容', {\n          contentType: form.content_type,\n          title: form.title.substring(0, 20) + '...',\n          imageCount: images.length\n        });\n        const response = await communityService.publishContent(contentData);\n        logger.info('CONTENT_FORM', '内容发布成功', {\n          contentId: response.data?.content_id\n        });\n        alert('发布成功！');\n        router.push('/community');\n      } catch (error) {\n        logger.error('CONTENT_FORM', '发布内容失败', {}, error);\n        if (error.code && error.message) {\n          // 处理字段级错误\n          if (error.errors && error.errors.length > 0) {\n            error.errors.forEach(err => {\n              if (err.field && Object.prototype.hasOwnProperty.call(errors, err.field)) {\n                errors[err.field] = err.message || error.message;\n              }\n            });\n          } else {\n            alert(error.message || '发布失败，请稍后重试');\n          }\n        } else {\n          alert(error.message || '发布失败，请稍后重试');\n        }\n      } finally {\n        submitting.value = false;\n      }\n    };\n\n    // 返回\n    const goBack = () => {\n      if (confirm('确定要离开吗？未保存的内容将丢失。')) {\n        router.push('/community');\n      }\n    };\n    onMounted(() => {\n      logger.lifecycle('ContentForm', 'mounted');\n    });\n    return {\n      form,\n      errors,\n      submitting,\n      imagePreviews,\n      clearError,\n      handleImageSelect,\n      removeImage,\n      handleSubmit,\n      goBack\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","useRouter","communityService","logger","name","setup","router","submitting","imagePreviews","imageFiles","form","title","content","content_type","images","errors","getUserInfo","storedUser","localStorage","getItem","JSON","parse","error","clearError","field","validateForm","isValid","trim","length","validation","handleImageSelect","event","files","Array","from","target","remainingSlots","value","alert","splice","forEach","file","type","startsWith","size","reader","FileReader","onload","e","push","result","readAsDataURL","removeImage","index","processImages","handleSubmit","userAction","contentType","warn","userInfo","phone","contentData","info","substring","imageCount","response","publishContent","contentId","data","content_id","code","message","err","Object","prototype","hasOwnProperty","call","goBack","confirm","lifecycle"],"sources":["D:\\STUDY\\FarmerHappy\\farmer_happy\\src\\community\\ContentForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"content-form-container\">\r\n    <!-- 顶部导航栏 -->\r\n    <header class=\"header\">\r\n      <button class=\"btn-back\" @click=\"goBack\">\r\n        <span class=\"back-icon\">←</span>\r\n        返回\r\n      </button>\r\n      <h1 class=\"header-title\">发布内容</h1>\r\n      <div class=\"header-placeholder\"></div>\r\n    </header>\r\n\r\n    <!-- 表单内容 -->\r\n    <main class=\"main-content\">\r\n      <div class=\"form-wrapper\">\r\n        <form @submit.prevent=\"handleSubmit\" class=\"content-form\">\r\n          <!-- 内容类型 -->\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">内容类型 <span class=\"required\">*</span></label>\r\n            <select\r\n              v-model=\"form.content_type\"\r\n              class=\"form-input\"\r\n              :class=\"{ 'error': errors.content_type }\"\r\n              @change=\"clearError('content_type')\"\r\n            >\r\n              <option value=\"\">请选择内容类型</option>\r\n              <option value=\"articles\">文章</option>\r\n              <option value=\"questions\">提问</option>\r\n              <option value=\"experiences\">经验分享</option>\r\n            </select>\r\n            <span v-if=\"errors.content_type\" class=\"form-error\">{{ errors.content_type }}</span>\r\n          </div>\r\n\r\n          <!-- 标题 -->\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">标题 <span class=\"required\">*</span></label>\r\n            <input\r\n              v-model=\"form.title\"\r\n              type=\"text\"\r\n              class=\"form-input\"\r\n              :class=\"{ 'error': errors.title }\"\r\n              placeholder=\"请输入标题\"\r\n              maxlength=\"100\"\r\n              @input=\"clearError('title')\"\r\n            />\r\n            <div class=\"input-hint\">\r\n              <span class=\"char-count\">{{ form.title.length }}/100</span>\r\n            </div>\r\n            <span v-if=\"errors.title\" class=\"form-error\">{{ errors.title }}</span>\r\n          </div>\r\n\r\n          <!-- 内容 -->\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">内容 <span class=\"required\">*</span></label>\r\n            <textarea\r\n              v-model=\"form.content\"\r\n              class=\"form-textarea\"\r\n              :class=\"{ 'error': errors.content }\"\r\n              placeholder=\"请输入内容...\"\r\n              rows=\"12\"\r\n              @input=\"clearError('content')\"\r\n            ></textarea>\r\n            <div class=\"input-hint\">\r\n              <span class=\"char-count\">{{ form.content.length }}/5000</span>\r\n            </div>\r\n            <span v-if=\"errors.content\" class=\"form-error\">{{ errors.content }}</span>\r\n          </div>\r\n\r\n          <!-- 图片上传（可选） -->\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">图片（可选）</label>\r\n            <div class=\"image-upload-section\">\r\n              <div class=\"image-preview-list\">\r\n                <div\r\n                  v-for=\"(image, idx) in imagePreviews\"\r\n                  :key=\"idx\"\r\n                  class=\"image-preview-item\"\r\n                >\r\n                  <img :src=\"image\" :alt=\"`预览${idx + 1}`\" class=\"preview-image\" />\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn-remove-image\"\r\n                    @click=\"removeImage(idx)\"\r\n                  >\r\n                    ×\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <label v-if=\"imagePreviews.length < 9\" class=\"upload-btn\">\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  multiple\r\n                  @change=\"handleImageSelect\"\r\n                  class=\"file-input\"\r\n                />\r\n                <span class=\"upload-icon\">📷</span>\r\n                <span class=\"upload-text\">添加图片</span>\r\n              </label>\r\n            </div>\r\n            <div class=\"upload-hint\">\r\n              最多可上传 9 张图片，支持 JPG、PNG 格式\r\n            </div>\r\n            <span v-if=\"errors.images\" class=\"form-error\">{{ errors.images }}</span>\r\n          </div>\r\n\r\n          <!-- 提交按钮 -->\r\n          <div class=\"form-actions\">\r\n            <button type=\"button\" class=\"btn btn-cancel\" @click=\"goBack\">\r\n              取消\r\n            </button>\r\n            <button type=\"submit\" class=\"btn btn-submit\" :disabled=\"submitting\">\r\n              {{ submitting ? '发布中...' : '发布内容' }}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { communityService } from '../api/community';\r\nimport logger from '../utils/logger';\r\n\r\nexport default {\r\n  name: 'ContentForm',\r\n  setup() {\r\n    const router = useRouter();\r\n    const submitting = ref(false);\r\n    const imagePreviews = ref([]);\r\n    const imageFiles = ref([]);\r\n\r\n    const form = reactive({\r\n      title: '',\r\n      content: '',\r\n      content_type: '',\r\n      images: []\r\n    });\r\n\r\n    const errors = reactive({\r\n      title: '',\r\n      content: '',\r\n      content_type: '',\r\n      images: ''\r\n    });\r\n\r\n    // 获取用户信息\r\n    const getUserInfo = () => {\r\n      try {\r\n        const storedUser = localStorage.getItem('user');\r\n        return storedUser ? JSON.parse(storedUser) : null;\r\n      } catch (error) {\r\n        logger.error('CONTENT_FORM', '获取用户信息失败', {}, error);\r\n        return null;\r\n      }\r\n    };\r\n\r\n    // 清除错误\r\n    const clearError = (field) => {\r\n      errors[field] = '';\r\n    };\r\n\r\n    // 验证表单\r\n    const validateForm = () => {\r\n      let isValid = true;\r\n      errors.title = '';\r\n      errors.content = '';\r\n      errors.content_type = '';\r\n\r\n      if (!form.content_type) {\r\n        errors.content_type = '请选择内容类型';\r\n        isValid = false;\r\n      }\r\n\r\n      if (!form.title || !form.title.trim()) {\r\n        errors.title = '请输入标题';\r\n        isValid = false;\r\n      } else if (form.title.trim().length < 5) {\r\n        errors.title = '标题至少需要 5 个字符';\r\n        isValid = false;\r\n      } else if (form.title.trim().length > 100) {\r\n        errors.title = '标题不能超过 100 个字符';\r\n        isValid = false;\r\n      }\r\n\r\n      if (!form.content || !form.content.trim()) {\r\n        errors.content = '请输入内容';\r\n        isValid = false;\r\n      } else if (form.content.trim().length < 10) {\r\n        errors.content = '内容至少需要 10 个字符';\r\n        isValid = false;\r\n      } else if (form.content.trim().length > 5000) {\r\n        errors.content = '内容不能超过 5000 个字符';\r\n        isValid = false;\r\n      }\r\n\r\n      logger.validation('ContentForm', isValid, errors);\r\n      return isValid;\r\n    };\r\n\r\n    // 处理图片选择\r\n    const handleImageSelect = (event) => {\r\n      const files = Array.from(event.target.files);\r\n      const remainingSlots = 9 - imagePreviews.value.length;\r\n\r\n      if (files.length > remainingSlots) {\r\n        alert(`最多只能上传 ${remainingSlots} 张图片`);\r\n        files.splice(remainingSlots);\r\n      }\r\n\r\n      files.forEach((file) => {\r\n        if (!file.type.startsWith('image/')) {\r\n          alert('只能上传图片文件');\r\n          return;\r\n        }\r\n\r\n        if (file.size > 5 * 1024 * 1024) {\r\n          alert('图片大小不能超过 5MB');\r\n          return;\r\n        }\r\n\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          imagePreviews.value.push(e.target.result);\r\n          imageFiles.value.push(file);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      });\r\n\r\n      // 清空 input 以便再次选择相同文件时也能触发 change 事件\r\n      event.target.value = '';\r\n    };\r\n\r\n    // 移除图片\r\n    const removeImage = (index) => {\r\n      imagePreviews.value.splice(index, 1);\r\n      imageFiles.value.splice(index, 1);\r\n    };\r\n\r\n    // 处理图片上传（这里简化处理，实际应该上传到服务器获取URL）\r\n    const processImages = async () => {\r\n      // 在实际应用中，这里应该将图片上传到服务器获取URL\r\n      // 目前简化处理，使用 base64 或者本地预览\r\n      // 注意：base64 方式不推荐用于生产环境，应该上传到OSS等存储服务\r\n      return imagePreviews.value;\r\n    };\r\n\r\n    // 提交表单\r\n    const handleSubmit = async () => {\r\n      logger.userAction('SUBMIT_CONTENT', { contentType: form.content_type });\r\n\r\n      if (!validateForm()) {\r\n        logger.warn('CONTENT_FORM', '表单验证失败');\r\n        return;\r\n      }\r\n\r\n      const userInfo = getUserInfo();\r\n      if (!userInfo || !userInfo.phone) {\r\n        alert('请先登录');\r\n        router.push('/login');\r\n        return;\r\n      }\r\n\r\n      submitting.value = true;\r\n\r\n      try {\r\n        // 处理图片\r\n        const images = await processImages();\r\n\r\n        const contentData = {\r\n          title: form.title.trim(),\r\n          content: form.content.trim(),\r\n          content_type: form.content_type,\r\n          phone: userInfo.phone,\r\n          images: images\r\n        };\r\n\r\n        logger.info('CONTENT_FORM', '提交内容', {\r\n          contentType: form.content_type,\r\n          title: form.title.substring(0, 20) + '...',\r\n          imageCount: images.length\r\n        });\r\n\r\n        const response = await communityService.publishContent(contentData);\r\n\r\n        logger.info('CONTENT_FORM', '内容发布成功', {\r\n          contentId: response.data?.content_id\r\n        });\r\n\r\n        alert('发布成功！');\r\n        router.push('/community');\r\n      } catch (error) {\r\n        logger.error('CONTENT_FORM', '发布内容失败', {}, error);\r\n\r\n        if (error.code && error.message) {\r\n          // 处理字段级错误\r\n          if (error.errors && error.errors.length > 0) {\r\n            error.errors.forEach((err) => {\r\n              if (err.field && Object.prototype.hasOwnProperty.call(errors, err.field)) {\r\n                errors[err.field] = err.message || error.message;\r\n              }\r\n            });\r\n          } else {\r\n            alert(error.message || '发布失败，请稍后重试');\r\n          }\r\n        } else {\r\n          alert(error.message || '发布失败，请稍后重试');\r\n        }\r\n      } finally {\r\n        submitting.value = false;\r\n      }\r\n    };\r\n\r\n    // 返回\r\n    const goBack = () => {\r\n      if (confirm('确定要离开吗？未保存的内容将丢失。')) {\r\n        router.push('/community');\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      logger.lifecycle('ContentForm', 'mounted');\r\n    });\r\n\r\n    return {\r\n      form,\r\n      errors,\r\n      submitting,\r\n      imagePreviews,\r\n      clearError,\r\n      handleImageSelect,\r\n      removeImage,\r\n      handleSubmit,\r\n      goBack\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import '../assets/styles/theme.css';\r\n\r\n.content-form-container {\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #f5f3ff 0%, #ede9fe 100%);\r\n}\r\n\r\n/* 顶部导航栏 */\r\n.header {\r\n  background: var(--white);\r\n  padding: 1rem 2rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  box-shadow: 0 2px 8px rgba(107, 70, 193, 0.1);\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 100;\r\n}\r\n\r\n.btn-back {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  padding: 0.5rem 1rem;\r\n  background: transparent;\r\n  border: 1px solid var(--gray-300);\r\n  border-radius: 8px;\r\n  color: var(--gray-600);\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.btn-back:hover {\r\n  background: var(--gray-100);\r\n  border-color: var(--primary);\r\n  color: var(--primary);\r\n}\r\n\r\n.header-title {\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  color: var(--primary);\r\n  margin: 0;\r\n}\r\n\r\n.header-placeholder {\r\n  width: 120px;\r\n}\r\n\r\n/* 主内容 */\r\n.main-content {\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n}\r\n\r\n.form-wrapper {\r\n  background: var(--white);\r\n  padding: 2rem;\r\n  border-radius: 16px;\r\n  box-shadow: 0 4px 12px rgba(107, 70, 193, 0.08);\r\n}\r\n\r\n.content-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.5rem;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.form-label {\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  color: #1a202c;\r\n}\r\n\r\n.required {\r\n  color: var(--error);\r\n}\r\n\r\n.form-input,\r\n.form-textarea {\r\n  width: 100%;\r\n  padding: 0.875rem;\r\n  border: 2px solid var(--gray-300);\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  font-family: inherit;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.form-input:focus,\r\n.form-textarea:focus {\r\n  outline: none;\r\n  border-color: var(--primary);\r\n  box-shadow: 0 0 0 3px rgba(107, 70, 193, 0.1);\r\n}\r\n\r\n.form-input.error,\r\n.form-textarea.error {\r\n  border-color: var(--error);\r\n}\r\n\r\n.form-textarea {\r\n  resize: vertical;\r\n  line-height: 1.6;\r\n}\r\n\r\n.input-hint {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.char-count {\r\n  color: var(--gray-500);\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.form-error {\r\n  color: var(--error);\r\n  font-size: 0.875rem;\r\n}\r\n\r\n/* 图片上传 */\r\n.image-upload-section {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n}\r\n\r\n.image-preview-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1rem;\r\n}\r\n\r\n.image-preview-item {\r\n  position: relative;\r\n  width: 120px;\r\n  height: 120px;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  border: 2px solid var(--gray-300);\r\n}\r\n\r\n.preview-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.btn-remove-image {\r\n  position: absolute;\r\n  top: 0.25rem;\r\n  right: 0.25rem;\r\n  width: 28px;\r\n  height: 28px;\r\n  background: rgba(0, 0, 0, 0.6);\r\n  border: none;\r\n  border-radius: 50%;\r\n  color: var(--white);\r\n  font-size: 1.25rem;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.btn-remove-image:hover {\r\n  background: rgba(0, 0, 0, 0.8);\r\n}\r\n\r\n.upload-btn {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 120px;\r\n  height: 120px;\r\n  border: 2px dashed var(--gray-300);\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  background: var(--gray-100);\r\n}\r\n\r\n.upload-btn:hover {\r\n  border-color: var(--primary);\r\n  background: var(--gray-200);\r\n}\r\n\r\n.file-input {\r\n  display: none;\r\n}\r\n\r\n.upload-icon {\r\n  font-size: 2rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.upload-text {\r\n  color: var(--gray-600);\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.upload-hint {\r\n  color: var(--gray-500);\r\n  font-size: 0.875rem;\r\n  margin-top: 0.5rem;\r\n}\r\n\r\n/* 表单操作 */\r\n.form-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 1rem;\r\n  padding-top: 1rem;\r\n  border-top: 1px solid var(--gray-200);\r\n}\r\n\r\n.btn {\r\n  padding: 0.875rem 2rem;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.btn-cancel {\r\n  background: var(--gray-200);\r\n  color: var(--gray-600);\r\n}\r\n\r\n.btn-cancel:hover {\r\n  background: var(--gray-300);\r\n}\r\n\r\n.btn-submit {\r\n  background: linear-gradient(135deg, var(--primary), var(--primary-light));\r\n  color: var(--white);\r\n  box-shadow: 0 4px 12px rgba(107, 70, 193, 0.3);\r\n}\r\n\r\n.btn-submit:hover:not(:disabled) {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 6px 16px rgba(107, 70, 193, 0.4);\r\n}\r\n\r\n.btn-submit:disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .header {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .header-title {\r\n    font-size: 1.25rem;\r\n  }\r\n\r\n  .main-content {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .form-wrapper {\r\n    padding: 1.5rem;\r\n  }\r\n\r\n  .image-preview-item,\r\n  .upload-btn {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n}\r\n</style>\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { ref, computed, onMounted, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { productService } from '../api/product';\nimport logger from '../utils/logger';\nimport ProductCard from '../components/ProductCard.vue';\nimport ProductForm from '../components/ProductForm.vue';\nimport ProductDetail from '../components/ProductDetail.vue';\nimport BatchActionModal from '../components/BatchActionModal.vue';\nexport default {\n  name: 'ProductList',\n  components: {\n    ProductCard,\n    ProductForm,\n    ProductDetail,\n    BatchActionModal\n  },\n  setup() {\n    const router = useRouter();\n    const userInfo = ref({});\n    const products = ref([]);\n    const loading = ref(false);\n    const searchKeyword = ref('');\n    const statusFilter = ref('');\n    const selectedProducts = ref([]);\n    const showCreateForm = ref(false);\n    const showProductDetail = ref(false);\n    const showBatchModal = ref(false);\n    const editingProduct = ref(null);\n    const viewingProductId = ref(null);\n\n    // 分页相关\n    const currentPage = ref(1);\n    const pageSize = ref(12);\n    const totalCount = ref(0);\n    const totalPages = computed(() => Math.ceil(totalCount.value / pageSize.value));\n\n    // 用户类型判断\n    const isFarmer = computed(() => userInfo.value.userType === 'farmer');\n\n    // 用户角色文本\n    const userRoleText = computed(() => {\n      const roleMap = {\n        farmer: '农户',\n        buyer: '买家',\n        expert: '技术专家',\n        bank: '银行'\n      };\n      return roleMap[userInfo.value.userType] || '无';\n    });\n\n    // 获取用户信息\n    onMounted(() => {\n      const storedUser = localStorage.getItem('user');\n      if (storedUser) {\n        try {\n          userInfo.value = JSON.parse(storedUser);\n          logger.info('PRODUCT_LIST', '加载用户信息成功', {\n            userType: userInfo.value.userType\n          });\n          loadProducts();\n        } catch (error) {\n          logger.error('PRODUCT_LIST', '解析用户信息失败', {}, error);\n          router.push('/login');\n        }\n      } else {\n        logger.warn('PRODUCT_LIST', '未找到用户信息，跳转到登录页');\n        router.push('/login');\n      }\n    });\n\n    // 加载产品列表\n    const loadProducts = async () => {\n      loading.value = true;\n      try {\n        logger.info('PRODUCT_LIST', '开始加载产品列表', {\n          phone: userInfo.value.phone,\n          status: statusFilter.value,\n          title: searchKeyword.value,\n          page: currentPage.value\n        });\n        const response = await productService.getProductList(userInfo.value.phone, statusFilter.value || null, searchKeyword.value || null);\n        products.value = response.list || [];\n        totalCount.value = response.total_count || 0;\n        logger.info('PRODUCT_LIST', '产品列表加载成功', {\n          count: products.value.length,\n          total: totalCount.value\n        });\n      } catch (error) {\n        logger.error('PRODUCT_LIST', '加载产品列表失败', {\n          errorMessage: error.message || error\n        }, error);\n        products.value = [];\n        totalCount.value = 0;\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 返回上一页\n    const goBack = () => {\n      logger.userAction('BACK_CLICK', {\n        from: 'product_list'\n      });\n      router.push('/home');\n    };\n\n    // 搜索处理\n    const handleSearch = () => {\n      logger.userAction('SEARCH_CLICK', {\n        keyword: searchKeyword.value\n      });\n      currentPage.value = 1;\n      loadProducts();\n    };\n\n    // 筛选处理\n    const handleFilterChange = () => {\n      logger.userAction('FILTER_CHANGE', {\n        status: statusFilter.value\n      });\n      currentPage.value = 1;\n      loadProducts();\n    };\n\n    // 分页处理\n    const handlePageChange = page => {\n      if (page >= 1 && page <= totalPages.value) {\n        logger.userAction('PAGE_CHANGE', {\n          page\n        });\n        currentPage.value = page;\n        loadProducts();\n      }\n    };\n\n    // 产品选择处理\n    const handleProductSelect = (productId, selected) => {\n      if (selected) {\n        selectedProducts.value.push(productId);\n      } else {\n        const index = selectedProducts.value.indexOf(productId);\n        if (index > -1) {\n          selectedProducts.value.splice(index, 1);\n        }\n      }\n      logger.userAction('PRODUCT_SELECT', {\n        productId,\n        selected\n      });\n    };\n\n    // 查看产品详情\n    const handleViewProduct = productId => {\n      logger.userAction('VIEW_PRODUCT', {\n        productId\n      });\n      viewingProductId.value = productId;\n      showProductDetail.value = true;\n    };\n\n    // 编辑产品\n    const handleEditProduct = product => {\n      logger.userAction('EDIT_PRODUCT', {\n        productId: product.product_id\n      });\n      editingProduct.value = product;\n      showCreateForm.value = true;\n    };\n\n    // 删除产品\n    const handleDeleteProduct = async productId => {\n      if (!confirm('确定要删除这个产品吗？')) {\n        return;\n      }\n      try {\n        logger.userAction('DELETE_PRODUCT', {\n          productId\n        });\n        await productService.deleteProduct(productId, userInfo.value.phone);\n        logger.info('PRODUCT_LIST', '产品删除成功', {\n          productId\n        });\n        loadProducts();\n      } catch (error) {\n        logger.error('PRODUCT_LIST', '删除产品失败', {\n          productId,\n          errorMessage: error.message || error\n        }, error);\n        alert('删除失败：' + (error.message || error));\n      }\n    };\n\n    // 上架产品\n    const handleOnShelf = async productId => {\n      try {\n        logger.userAction('ON_SHELF_PRODUCT', {\n          productId\n        });\n        await productService.onShelfProduct(productId, userInfo.value.phone);\n        logger.info('PRODUCT_LIST', '产品上架成功', {\n          productId\n        });\n        loadProducts();\n      } catch (error) {\n        logger.error('PRODUCT_LIST', '产品上架失败', {\n          productId,\n          errorMessage: error.message || error\n        }, error);\n        alert('上架失败：' + (error.message || error));\n      }\n    };\n\n    // 下架产品\n    const handleOffShelf = async productId => {\n      try {\n        logger.userAction('OFF_SHELF_PRODUCT', {\n          productId\n        });\n        await productService.offShelfProduct(productId, userInfo.value.phone);\n        logger.info('PRODUCT_LIST', '产品下架成功', {\n          productId\n        });\n        loadProducts();\n      } catch (error) {\n        logger.error('PRODUCT_LIST', '产品下架失败', {\n          productId,\n          errorMessage: error.message || error\n        }, error);\n        alert('下架失败：' + (error.message || error));\n      }\n    };\n\n    // 购买产品\n    const handlePurchase = product => {\n      logger.userAction('PURCHASE_PRODUCT', {\n        productId: product.product_id\n      });\n      alert(`购买功能开发中...\\n产品：${product.title}`);\n    };\n\n    // 批量操作\n    const handleBatchAction = () => {\n      logger.userAction('BATCH_ACTION_CLICK', {\n        count: selectedProducts.value.length\n      });\n      showBatchModal.value = true;\n    };\n\n    // 批量操作确认\n    const handleBatchConfirm = async action => {\n      try {\n        logger.userAction('BATCH_CONFIRM', {\n          action,\n          count: selectedProducts.value.length\n        });\n        await productService.batchActionProducts(action, selectedProducts.value, userInfo.value.phone);\n        logger.info('PRODUCT_LIST', '批量操作成功', {\n          action,\n          count: selectedProducts.value.length\n        });\n        selectedProducts.value = [];\n        showBatchModal.value = false;\n        loadProducts();\n      } catch (error) {\n        logger.error('PRODUCT_LIST', '批量操作失败', {\n          action,\n          errorMessage: error.message || error\n        }, error);\n        alert('批量操作失败：' + (error.message || error));\n      }\n    };\n\n    // 表单关闭\n    const handleFormClose = () => {\n      showCreateForm.value = false;\n      editingProduct.value = null;\n    };\n\n    // 表单成功\n    const handleFormSuccess = () => {\n      showCreateForm.value = false;\n      editingProduct.value = null;\n      loadProducts();\n    };\n    return {\n      userInfo,\n      products,\n      loading,\n      searchKeyword,\n      statusFilter,\n      selectedProducts,\n      showCreateForm,\n      showProductDetail,\n      showBatchModal,\n      editingProduct,\n      viewingProductId,\n      currentPage,\n      totalCount,\n      totalPages,\n      isFarmer,\n      userRoleText,\n      goBack,\n      handleSearch,\n      handleFilterChange,\n      handlePageChange,\n      handleProductSelect,\n      handleViewProduct,\n      handleEditProduct,\n      handleDeleteProduct,\n      handleOnShelf,\n      handleOffShelf,\n      handlePurchase,\n      handleBatchAction,\n      handleBatchConfirm,\n      handleFormClose,\n      handleFormSuccess\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","reactive","useRouter","productService","logger","ProductCard","ProductForm","ProductDetail","BatchActionModal","name","components","setup","router","userInfo","products","loading","searchKeyword","statusFilter","selectedProducts","showCreateForm","showProductDetail","showBatchModal","editingProduct","viewingProductId","currentPage","pageSize","totalCount","totalPages","Math","ceil","value","isFarmer","userType","userRoleText","roleMap","farmer","buyer","expert","bank","storedUser","localStorage","getItem","JSON","parse","info","loadProducts","error","push","warn","phone","status","title","page","response","getProductList","list","total_count","count","length","total","errorMessage","message","goBack","userAction","from","handleSearch","keyword","handleFilterChange","handlePageChange","handleProductSelect","productId","selected","index","indexOf","splice","handleViewProduct","handleEditProduct","product","product_id","handleDeleteProduct","confirm","deleteProduct","alert","handleOnShelf","onShelfProduct","handleOffShelf","offShelfProduct","handlePurchase","handleBatchAction","handleBatchConfirm","action","batchActionProducts","handleFormClose","handleFormSuccess"],"sources":["D:\\STUDY\\FarmerHappy\\farmer_happy\\src\\trading\\ProductList.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-list-container\">\r\n    <!-- 顶部导航栏 -->\r\n    <header class=\"header\">\r\n      <div class=\"header-left\">\r\n        <button class=\"btn-back\" @click=\"goBack\">\r\n          <span class=\"back-icon\">←</span>\r\n          返回\r\n        </button>\r\n        <h1 class=\"page-title\">农产品交易</h1>\r\n      </div>\r\n      <div class=\"header-right\">\r\n        <div class=\"user-info\">\r\n          <span class=\"user-name\">{{ userInfo.nickname || '用户' }}</span>\r\n          <span class=\"user-role\">{{ userRoleText }}</span>\r\n        </div>\r\n      </div>\r\n    </header>\r\n\r\n    <!-- 搜索和筛选区域 -->\r\n    <div class=\"search-section\">\r\n      <div class=\"search-container\">\r\n        <div class=\"search-box\">\r\n          <input\r\n            v-model=\"searchKeyword\"\r\n            type=\"text\"\r\n            placeholder=\"搜索农产品标题...\"\r\n            class=\"search-input\"\r\n            @keyup.enter=\"handleSearch\"\r\n          />\r\n          <button class=\"search-btn\" @click=\"handleSearch\">\r\n            <span class=\"search-icon\">🔍</span>\r\n          </button>\r\n        </div>\r\n        \r\n        <div class=\"filter-section\">\r\n          <select v-model=\"statusFilter\" class=\"filter-select\" @change=\"handleFilterChange\">\r\n            <option value=\"\">全部状态</option>\r\n            <option value=\"draft\">草稿</option>\r\n            <option value=\"on_shelf\">在售</option>\r\n            <option value=\"off_shelf\">下架</option>\r\n            <option value=\"sold_out\">售罄</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 操作按钮区域 -->\r\n    <div class=\"action-section\" v-if=\"isFarmer\">\r\n      <button class=\"btn-primary\" @click=\"showCreateForm = true\">\r\n        <span class=\"btn-icon\">+</span>\r\n        发布农产品\r\n      </button>\r\n      <button \r\n        class=\"btn-secondary\" \r\n        @click=\"handleBatchAction\"\r\n        :disabled=\"selectedProducts.length === 0\"\r\n      >\r\n        <span class=\"btn-icon\">📦</span>\r\n        批量操作 ({{ selectedProducts.length }})\r\n      </button>\r\n    </div>\r\n\r\n    <!-- 产品列表 -->\r\n    <div class=\"products-section\">\r\n      <div v-if=\"loading\" class=\"loading-container\">\r\n        <div class=\"loading-spinner\"></div>\r\n        <p>加载中...</p>\r\n      </div>\r\n\r\n      <div v-else-if=\"products.length === 0\" class=\"empty-container\">\r\n        <div class=\"empty-icon\">🌾</div>\r\n        <h3>暂无农产品</h3>\r\n        <p v-if=\"isFarmer\">点击\"发布农产品\"开始发布您的产品</p>\r\n        <p v-else>暂无可购买的农产品</p>\r\n      </div>\r\n\r\n      <div v-else class=\"products-grid\">\r\n        <ProductCard\r\n          v-for=\"product in products\"\r\n          :key=\"product.product_id\"\r\n          :product=\"product\"\r\n          :is-farmer=\"isFarmer\"\r\n          :selected=\"selectedProducts.includes(product.product_id)\"\r\n          @select=\"handleProductSelect\"\r\n          @view=\"handleViewProduct\"\r\n          @edit=\"handleEditProduct\"\r\n          @delete=\"handleDeleteProduct\"\r\n          @on-shelf=\"handleOnShelf\"\r\n          @off-shelf=\"handleOffShelf\"\r\n          @purchase=\"handlePurchase\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 分页 -->\r\n    <div class=\"pagination-section\" v-if=\"products.length > 0\">\r\n      <div class=\"pagination-info\">\r\n        共 {{ totalCount }} 个产品\r\n      </div>\r\n      <div class=\"pagination-controls\">\r\n        <button \r\n          class=\"pagination-btn\" \r\n          @click=\"handlePageChange(currentPage - 1)\"\r\n          :disabled=\"currentPage <= 1\"\r\n        >\r\n          上一页\r\n        </button>\r\n        <span class=\"pagination-info\">\r\n          第 {{ currentPage }} 页 / 共 {{ totalPages }} 页\r\n        </span>\r\n        <button \r\n          class=\"pagination-btn\" \r\n          @click=\"handlePageChange(currentPage + 1)\"\r\n          :disabled=\"currentPage >= totalPages\"\r\n        >\r\n          下一页\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 创建/编辑产品表单弹窗 -->\r\n    <ProductForm\r\n      v-if=\"showCreateForm\"\r\n      :product=\"editingProduct\"\r\n      :is-edit=\"!!editingProduct\"\r\n      @close=\"handleFormClose\"\r\n      @success=\"handleFormSuccess\"\r\n    />\r\n\r\n    <!-- 产品详情弹窗 -->\r\n    <ProductDetail\r\n      v-if=\"showProductDetail\"\r\n      :product-id=\"viewingProductId\"\r\n      @close=\"showProductDetail = false\"\r\n    />\r\n\r\n    <!-- 批量操作弹窗 -->\r\n    <BatchActionModal\r\n      v-if=\"showBatchModal\"\r\n      :selected-count=\"selectedProducts.length\"\r\n      @close=\"showBatchModal = false\"\r\n      @confirm=\"handleBatchConfirm\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, reactive } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { productService } from '../api/product';\r\nimport logger from '../utils/logger';\r\nimport ProductCard from '../components/ProductCard.vue';\r\nimport ProductForm from '../components/ProductForm.vue';\r\nimport ProductDetail from '../components/ProductDetail.vue';\r\nimport BatchActionModal from '../components/BatchActionModal.vue';\r\n\r\nexport default {\r\n  name: 'ProductList',\r\n  components: {\r\n    ProductCard,\r\n    ProductForm,\r\n    ProductDetail,\r\n    BatchActionModal\r\n  },\r\n  setup() {\r\n    const router = useRouter();\r\n    const userInfo = ref({});\r\n    const products = ref([]);\r\n    const loading = ref(false);\r\n    const searchKeyword = ref('');\r\n    const statusFilter = ref('');\r\n    const selectedProducts = ref([]);\r\n    const showCreateForm = ref(false);\r\n    const showProductDetail = ref(false);\r\n    const showBatchModal = ref(false);\r\n    const editingProduct = ref(null);\r\n    const viewingProductId = ref(null);\r\n\r\n    // 分页相关\r\n    const currentPage = ref(1);\r\n    const pageSize = ref(12);\r\n    const totalCount = ref(0);\r\n    const totalPages = computed(() => Math.ceil(totalCount.value / pageSize.value));\r\n\r\n    // 用户类型判断\r\n    const isFarmer = computed(() => userInfo.value.userType === 'farmer');\r\n\r\n    // 用户角色文本\r\n    const userRoleText = computed(() => {\r\n      const roleMap = {\r\n        farmer: '农户',\r\n        buyer: '买家',\r\n        expert: '技术专家',\r\n        bank: '银行'\r\n      };\r\n      return roleMap[userInfo.value.userType] || '无';\r\n    });\r\n\r\n    // 获取用户信息\r\n    onMounted(() => {\r\n      const storedUser = localStorage.getItem('user');\r\n      if (storedUser) {\r\n        try {\r\n          userInfo.value = JSON.parse(storedUser);\r\n          logger.info('PRODUCT_LIST', '加载用户信息成功', { userType: userInfo.value.userType });\r\n          loadProducts();\r\n        } catch (error) {\r\n          logger.error('PRODUCT_LIST', '解析用户信息失败', {}, error);\r\n          router.push('/login');\r\n        }\r\n      } else {\r\n        logger.warn('PRODUCT_LIST', '未找到用户信息，跳转到登录页');\r\n        router.push('/login');\r\n      }\r\n    });\r\n\r\n    // 加载产品列表\r\n    const loadProducts = async () => {\r\n      loading.value = true;\r\n      try {\r\n        logger.info('PRODUCT_LIST', '开始加载产品列表', {\r\n          phone: userInfo.value.phone,\r\n          status: statusFilter.value,\r\n          title: searchKeyword.value,\r\n          page: currentPage.value\r\n        });\r\n\r\n        const response = await productService.getProductList(\r\n          userInfo.value.phone,\r\n          statusFilter.value || null,\r\n          searchKeyword.value || null\r\n        );\r\n\r\n        products.value = response.list || [];\r\n        totalCount.value = response.total_count || 0;\r\n\r\n        logger.info('PRODUCT_LIST', '产品列表加载成功', {\r\n          count: products.value.length,\r\n          total: totalCount.value\r\n        });\r\n      } catch (error) {\r\n        logger.error('PRODUCT_LIST', '加载产品列表失败', {\r\n          errorMessage: error.message || error\r\n        }, error);\r\n        products.value = [];\r\n        totalCount.value = 0;\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    // 返回上一页\r\n    const goBack = () => {\r\n      logger.userAction('BACK_CLICK', { from: 'product_list' });\r\n      router.push('/home');\r\n    };\r\n\r\n    // 搜索处理\r\n    const handleSearch = () => {\r\n      logger.userAction('SEARCH_CLICK', { keyword: searchKeyword.value });\r\n      currentPage.value = 1;\r\n      loadProducts();\r\n    };\r\n\r\n    // 筛选处理\r\n    const handleFilterChange = () => {\r\n      logger.userAction('FILTER_CHANGE', { status: statusFilter.value });\r\n      currentPage.value = 1;\r\n      loadProducts();\r\n    };\r\n\r\n    // 分页处理\r\n    const handlePageChange = (page) => {\r\n      if (page >= 1 && page <= totalPages.value) {\r\n        logger.userAction('PAGE_CHANGE', { page });\r\n        currentPage.value = page;\r\n        loadProducts();\r\n      }\r\n    };\r\n\r\n    // 产品选择处理\r\n    const handleProductSelect = (productId, selected) => {\r\n      if (selected) {\r\n        selectedProducts.value.push(productId);\r\n      } else {\r\n        const index = selectedProducts.value.indexOf(productId);\r\n        if (index > -1) {\r\n          selectedProducts.value.splice(index, 1);\r\n        }\r\n      }\r\n      logger.userAction('PRODUCT_SELECT', { productId, selected });\r\n    };\r\n\r\n    // 查看产品详情\r\n    const handleViewProduct = (productId) => {\r\n      logger.userAction('VIEW_PRODUCT', { productId });\r\n      viewingProductId.value = productId;\r\n      showProductDetail.value = true;\r\n    };\r\n\r\n    // 编辑产品\r\n    const handleEditProduct = (product) => {\r\n      logger.userAction('EDIT_PRODUCT', { productId: product.product_id });\r\n      editingProduct.value = product;\r\n      showCreateForm.value = true;\r\n    };\r\n\r\n    // 删除产品\r\n    const handleDeleteProduct = async (productId) => {\r\n      if (!confirm('确定要删除这个产品吗？')) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        logger.userAction('DELETE_PRODUCT', { productId });\r\n        await productService.deleteProduct(productId, userInfo.value.phone);\r\n        logger.info('PRODUCT_LIST', '产品删除成功', { productId });\r\n        loadProducts();\r\n      } catch (error) {\r\n        logger.error('PRODUCT_LIST', '删除产品失败', {\r\n          productId,\r\n          errorMessage: error.message || error\r\n        }, error);\r\n        alert('删除失败：' + (error.message || error));\r\n      }\r\n    };\r\n\r\n    // 上架产品\r\n    const handleOnShelf = async (productId) => {\r\n      try {\r\n        logger.userAction('ON_SHELF_PRODUCT', { productId });\r\n        await productService.onShelfProduct(productId, userInfo.value.phone);\r\n        logger.info('PRODUCT_LIST', '产品上架成功', { productId });\r\n        loadProducts();\r\n      } catch (error) {\r\n        logger.error('PRODUCT_LIST', '产品上架失败', {\r\n          productId,\r\n          errorMessage: error.message || error\r\n        }, error);\r\n        alert('上架失败：' + (error.message || error));\r\n      }\r\n    };\r\n\r\n    // 下架产品\r\n    const handleOffShelf = async (productId) => {\r\n      try {\r\n        logger.userAction('OFF_SHELF_PRODUCT', { productId });\r\n        await productService.offShelfProduct(productId, userInfo.value.phone);\r\n        logger.info('PRODUCT_LIST', '产品下架成功', { productId });\r\n        loadProducts();\r\n      } catch (error) {\r\n        logger.error('PRODUCT_LIST', '产品下架失败', {\r\n          productId,\r\n          errorMessage: error.message || error\r\n        }, error);\r\n        alert('下架失败：' + (error.message || error));\r\n      }\r\n    };\r\n\r\n    // 购买产品\r\n    const handlePurchase = (product) => {\r\n      logger.userAction('PURCHASE_PRODUCT', { productId: product.product_id });\r\n      alert(`购买功能开发中...\\n产品：${product.title}`);\r\n    };\r\n\r\n    // 批量操作\r\n    const handleBatchAction = () => {\r\n      logger.userAction('BATCH_ACTION_CLICK', { count: selectedProducts.value.length });\r\n      showBatchModal.value = true;\r\n    };\r\n\r\n    // 批量操作确认\r\n    const handleBatchConfirm = async (action) => {\r\n      try {\r\n        logger.userAction('BATCH_CONFIRM', { action, count: selectedProducts.value.length });\r\n        await productService.batchActionProducts(action, selectedProducts.value, userInfo.value.phone);\r\n        logger.info('PRODUCT_LIST', '批量操作成功', { action, count: selectedProducts.value.length });\r\n        selectedProducts.value = [];\r\n        showBatchModal.value = false;\r\n        loadProducts();\r\n      } catch (error) {\r\n        logger.error('PRODUCT_LIST', '批量操作失败', {\r\n          action,\r\n          errorMessage: error.message || error\r\n        }, error);\r\n        alert('批量操作失败：' + (error.message || error));\r\n      }\r\n    };\r\n\r\n    // 表单关闭\r\n    const handleFormClose = () => {\r\n      showCreateForm.value = false;\r\n      editingProduct.value = null;\r\n    };\r\n\r\n    // 表单成功\r\n    const handleFormSuccess = () => {\r\n      showCreateForm.value = false;\r\n      editingProduct.value = null;\r\n      loadProducts();\r\n    };\r\n\r\n    return {\r\n      userInfo,\r\n      products,\r\n      loading,\r\n      searchKeyword,\r\n      statusFilter,\r\n      selectedProducts,\r\n      showCreateForm,\r\n      showProductDetail,\r\n      showBatchModal,\r\n      editingProduct,\r\n      viewingProductId,\r\n      currentPage,\r\n      totalCount,\r\n      totalPages,\r\n      isFarmer,\r\n      userRoleText,\r\n      goBack,\r\n      handleSearch,\r\n      handleFilterChange,\r\n      handlePageChange,\r\n      handleProductSelect,\r\n      handleViewProduct,\r\n      handleEditProduct,\r\n      handleDeleteProduct,\r\n      handleOnShelf,\r\n      handleOffShelf,\r\n      handlePurchase,\r\n      handleBatchAction,\r\n      handleBatchConfirm,\r\n      handleFormClose,\r\n      handleFormSuccess\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import '../assets/styles/theme.css';\r\n\r\n.product-list-container {\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #f5f3ff 0%, #ede9fe 100%);\r\n}\r\n\r\n/* 顶部导航栏 */\r\n.header {\r\n  background: var(--white);\r\n  padding: 1rem 2rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  box-shadow: 0 2px 8px rgba(107, 70, 193, 0.1);\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 100;\r\n}\r\n\r\n.header-left {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n.btn-back {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  padding: 0.5rem 1rem;\r\n  background: transparent;\r\n  border: 1px solid var(--gray-300);\r\n  border-radius: 8px;\r\n  color: var(--gray-600);\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.btn-back:hover {\r\n  background: var(--gray-100);\r\n  border-color: var(--primary-light);\r\n  color: var(--primary);\r\n}\r\n\r\n.back-icon {\r\n  font-size: 1rem;\r\n}\r\n\r\n.page-title {\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  color: var(--primary);\r\n  margin: 0;\r\n}\r\n\r\n.header-right {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.user-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n}\r\n\r\n.user-name {\r\n  font-size: 0.875rem;\r\n  font-weight: 600;\r\n  color: #1a202c;\r\n}\r\n\r\n.user-role {\r\n  font-size: 0.75rem;\r\n  color: var(--primary);\r\n}\r\n\r\n/* 搜索区域 */\r\n.search-section {\r\n  padding: 1.5rem 2rem;\r\n}\r\n\r\n.search-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n}\r\n\r\n.search-box {\r\n  flex: 1;\r\n  display: flex;\r\n  background: var(--white);\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 8px rgba(107, 70, 193, 0.1);\r\n  overflow: hidden;\r\n}\r\n\r\n.search-input {\r\n  flex: 1;\r\n  padding: 0.875rem 1rem;\r\n  border: none;\r\n  outline: none;\r\n  font-size: 1rem;\r\n  background: transparent;\r\n}\r\n\r\n.search-input::placeholder {\r\n  color: var(--gray-400);\r\n}\r\n\r\n.search-btn {\r\n  padding: 0.875rem 1rem;\r\n  background: var(--primary);\r\n  border: none;\r\n  color: var(--white);\r\n  cursor: pointer;\r\n  transition: background 0.2s;\r\n}\r\n\r\n.search-btn:hover {\r\n  background: var(--primary-dark);\r\n}\r\n\r\n.search-icon {\r\n  font-size: 1rem;\r\n}\r\n\r\n.filter-section {\r\n  display: flex;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.filter-select {\r\n  padding: 0.875rem 1rem;\r\n  border: 1px solid var(--gray-300);\r\n  border-radius: 8px;\r\n  background: var(--white);\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n  min-width: 120px;\r\n}\r\n\r\n/* 操作按钮区域 */\r\n.action-section {\r\n  padding: 0 2rem 1rem;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  gap: 1rem;\r\n}\r\n\r\n.btn-primary, .btn-secondary {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  padding: 0.75rem 1.5rem;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 0.875rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.btn-primary {\r\n  background: var(--primary);\r\n  color: var(--white);\r\n}\r\n\r\n.btn-primary:hover {\r\n  background: var(--primary-dark);\r\n}\r\n\r\n.btn-secondary {\r\n  background: var(--white);\r\n  color: var(--primary);\r\n  border: 1px solid var(--primary);\r\n}\r\n\r\n.btn-secondary:hover {\r\n  background: var(--primary-light);\r\n  color: var(--white);\r\n}\r\n\r\n.btn-secondary:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.btn-icon {\r\n  font-size: 1rem;\r\n}\r\n\r\n/* 产品列表区域 */\r\n.products-section {\r\n  padding: 0 2rem 2rem;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.loading-container, .empty-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 4rem 2rem;\r\n  background: var(--white);\r\n  border-radius: 16px;\r\n  box-shadow: 0 4px 12px rgba(107, 70, 193, 0.08);\r\n}\r\n\r\n.loading-spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 4px solid var(--gray-200);\r\n  border-top: 4px solid var(--primary);\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.empty-icon {\r\n  font-size: 4rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.empty-container h3 {\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n  color: var(--gray-500);\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.empty-container p {\r\n  color: var(--gray-400);\r\n  margin: 0;\r\n}\r\n\r\n.products-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 1.5rem;\r\n}\r\n\r\n/* 分页区域 */\r\n.pagination-section {\r\n  padding: 2rem;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background: var(--white);\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 8px rgba(107, 70, 193, 0.1);\r\n}\r\n\r\n.pagination-info {\r\n  color: var(--gray-500);\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.pagination-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n.pagination-btn {\r\n  padding: 0.5rem 1rem;\r\n  border: 1px solid var(--gray-300);\r\n  border-radius: 6px;\r\n  background: var(--white);\r\n  color: var(--gray-600);\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.pagination-btn:hover:not(:disabled) {\r\n  background: var(--primary);\r\n  color: var(--white);\r\n  border-color: var(--primary);\r\n}\r\n\r\n.pagination-btn:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .header {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .search-section {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .search-container {\r\n    flex-direction: column;\r\n    gap: 0.75rem;\r\n  }\r\n\r\n  .action-section {\r\n    padding: 0 1rem 1rem;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .products-section {\r\n    padding: 0 1rem 1rem;\r\n  }\r\n\r\n  .products-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  .pagination-section {\r\n    padding: 1rem;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelSelect as _vModelSelect, Fragment as _Fragment, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"auth-container\"\n};\nconst _hoisted_2 = {\n  class: \"auth-card\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"form-error\"\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"form-error\"\n};\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"form-error\"\n};\nconst _hoisted_9 = {\n  class: \"form-group\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"form-error\"\n};\nconst _hoisted_11 = {\n  class: \"form-group\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"form-error\"\n};\nconst _hoisted_13 = {\n  class: \"form-group\"\n};\nconst _hoisted_14 = {\n  key: 0,\n  class: \"form-error\"\n};\nconst _hoisted_15 = {\n  class: \"form-group\"\n};\nconst _hoisted_16 = {\n  key: 0,\n  class: \"form-error\"\n};\nconst _hoisted_17 = {\n  key: 1,\n  class: \"form-group\"\n};\nconst _hoisted_18 = {\n  key: 0,\n  class: \"form-error\"\n};\nconst _hoisted_19 = {\n  class: \"form-group\"\n};\nconst _hoisted_20 = {\n  key: 0,\n  class: \"form-error\"\n};\nconst _hoisted_21 = {\n  class: \"form-group\"\n};\nconst _hoisted_22 = {\n  key: 0,\n  class: \"form-error\"\n};\nconst _hoisted_23 = {\n  class: \"form-group\"\n};\nconst _hoisted_24 = {\n  key: 0,\n  class: \"form-error\"\n};\nconst _hoisted_25 = {\n  class: \"form-group\"\n};\nconst _hoisted_26 = {\n  key: 0,\n  class: \"form-error\"\n};\nconst _hoisted_27 = [\"disabled\"];\nconst _hoisted_28 = {\n  class: \"auth-switch\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[28] || (_cache[28] = _createElementVNode(\"h1\", {\n    class: \"auth-title\"\n  }, \"注册农乐平台\", -1 /* CACHED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[12] || (_cache[12] = _withModifiers((...args) => $setup.handleSubmit && $setup.handleSubmit(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_3, [_cache[13] || (_cache[13] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"手机号\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.form.phone = $event),\n    type: \"tel\",\n    class: _normalizeClass([\"form-input\", {\n      'error': $setup.errors.phone\n    }]),\n    placeholder: \"请输入手机号\"\n  }, null, 2 /* CLASS */), [[_vModelText, $setup.form.phone]]), $setup.errors.phone ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString($setup.errors.phone), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_5, [_cache[14] || (_cache[14] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"密码\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.form.password = $event),\n    type: \"password\",\n    class: _normalizeClass([\"form-input\", {\n      'error': $setup.errors.password\n    }]),\n    placeholder: \"请输入密码（8-32位，包含大小写字母和数字）\"\n  }, null, 2 /* CLASS */), [[_vModelText, $setup.form.password]]), $setup.errors.password ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, _toDisplayString($setup.errors.password), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_7, [_cache[15] || (_cache[15] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"昵称\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.form.nickname = $event),\n    type: \"text\",\n    class: _normalizeClass([\"form-input\", {\n      'error': $setup.errors.nickname\n    }]),\n    placeholder: \"请输入昵称\"\n  }, null, 2 /* CLASS */), [[_vModelText, $setup.form.nickname]]), $setup.errors.nickname ? (_openBlock(), _createElementBlock(\"span\", _hoisted_8, _toDisplayString($setup.errors.nickname), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_9, [_cache[17] || (_cache[17] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"用户类型\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.form.user_type = $event),\n    class: _normalizeClass([\"form-input\", {\n      'error': $setup.errors.user_type\n    }])\n  }, [...(_cache[16] || (_cache[16] = [_createStaticVNode(\"<option value=\\\"\\\" data-v-7bf3755a>请选择用户类型</option><option value=\\\"farmer\\\" data-v-7bf3755a>农户</option><option value=\\\"buyer\\\" data-v-7bf3755a>买家</option><option value=\\\"expert\\\" data-v-7bf3755a>技术专家</option><option value=\\\"bank\\\" data-v-7bf3755a>银行</option>\", 5)]))], 2 /* CLASS */), [[_vModelSelect, $setup.form.user_type]]), $setup.errors.user_type ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10, _toDisplayString($setup.errors.user_type), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 农户特定字段 \"), $setup.form.user_type === 'farmer' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_createElementVNode(\"div\", _hoisted_11, [_cache[18] || (_cache[18] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"农场名称\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.form.farm_name = $event),\n    type: \"text\",\n    class: _normalizeClass([\"form-input\", {\n      'error': $setup.errors.farm_name\n    }]),\n    placeholder: \"请输入农场名称\"\n  }, null, 2 /* CLASS */), [[_vModelText, $setup.form.farm_name]]), $setup.errors.farm_name ? (_openBlock(), _createElementBlock(\"span\", _hoisted_12, _toDisplayString($setup.errors.farm_name), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_13, [_cache[19] || (_cache[19] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"农场地址\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.form.farm_address = $event),\n    type: \"text\",\n    class: _normalizeClass([\"form-input\", {\n      'error': $setup.errors.farm_address\n    }]),\n    placeholder: \"请输入农场地址\"\n  }, null, 2 /* CLASS */), [[_vModelText, $setup.form.farm_address]]), $setup.errors.farm_address ? (_openBlock(), _createElementBlock(\"span\", _hoisted_14, _toDisplayString($setup.errors.farm_address), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_15, [_cache[20] || (_cache[20] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"农场面积（亩）\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.form.farm_size = $event),\n    type: \"number\",\n    step: \"0.01\",\n    class: _normalizeClass([\"form-input\", {\n      'error': $setup.errors.farm_size\n    }]),\n    placeholder: \"请输入农场面积\"\n  }, null, 2 /* CLASS */), [[_vModelText, $setup.form.farm_size, void 0, {\n    number: true\n  }]]), $setup.errors.farm_size ? (_openBlock(), _createElementBlock(\"span\", _hoisted_16, _toDisplayString($setup.errors.farm_size), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 买家特定字段 \"), $setup.form.user_type === 'buyer' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_cache[21] || (_cache[21] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"收货地址\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.form.shipping_address = $event),\n    type: \"text\",\n    class: _normalizeClass([\"form-input\", {\n      'error': $setup.errors.shipping_address\n    }]),\n    placeholder: \"请输入默认收货地址\"\n  }, null, 2 /* CLASS */), [[_vModelText, $setup.form.shipping_address]]), $setup.errors.shipping_address ? (_openBlock(), _createElementBlock(\"span\", _hoisted_18, _toDisplayString($setup.errors.shipping_address), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 专家特定字段 \"), $setup.form.user_type === 'expert' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createElementVNode(\"div\", _hoisted_19, [_cache[22] || (_cache[22] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"专业领域\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.form.expertise_field = $event),\n    type: \"text\",\n    class: _normalizeClass([\"form-input\", {\n      'error': $setup.errors.expertise_field\n    }]),\n    placeholder: \"请输入专业领域\"\n  }, null, 2 /* CLASS */), [[_vModelText, $setup.form.expertise_field]]), $setup.errors.expertise_field ? (_openBlock(), _createElementBlock(\"span\", _hoisted_20, _toDisplayString($setup.errors.expertise_field), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_21, [_cache[23] || (_cache[23] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"工作经验（年）\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $setup.form.work_experience = $event),\n    type: \"number\",\n    class: _normalizeClass([\"form-input\", {\n      'error': $setup.errors.work_experience\n    }]),\n    placeholder: \"请输入工作经验年限\"\n  }, null, 2 /* CLASS */), [[_vModelText, $setup.form.work_experience, void 0, {\n    number: true\n  }]]), $setup.errors.work_experience ? (_openBlock(), _createElementBlock(\"span\", _hoisted_22, _toDisplayString($setup.errors.work_experience), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 银行特定字段 \"), $setup.form.user_type === 'bank' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 3\n  }, [_createElementVNode(\"div\", _hoisted_23, [_cache[24] || (_cache[24] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"银行名称\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $setup.form.bank_name = $event),\n    type: \"text\",\n    class: _normalizeClass([\"form-input\", {\n      'error': $setup.errors.bank_name\n    }]),\n    placeholder: \"请输入银行名称\"\n  }, null, 2 /* CLASS */), [[_vModelText, $setup.form.bank_name]]), $setup.errors.bank_name ? (_openBlock(), _createElementBlock(\"span\", _hoisted_24, _toDisplayString($setup.errors.bank_name), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_25, [_cache[25] || (_cache[25] = _createElementVNode(\"label\", {\n    class: \"form-label\"\n  }, \"分行名称\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $setup.form.branch_name = $event),\n    type: \"text\",\n    class: _normalizeClass([\"form-input\", {\n      'error': $setup.errors.branch_name\n    }]),\n    placeholder: \"请输入分行名称\"\n  }, null, 2 /* CLASS */), [[_vModelText, $setup.form.branch_name]]), $setup.errors.branch_name ? (_openBlock(), _createElementBlock(\"span\", _hoisted_26, _toDisplayString($setup.errors.branch_name), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary\",\n    disabled: $setup.loading\n  }, _toDisplayString($setup.loading ? '注册中...' : '注册'), 9 /* TEXT, PROPS */, _hoisted_27), _createElementVNode(\"div\", _hoisted_28, [_cache[27] || (_cache[27] = _createTextVNode(\" 已有账号？ \", -1 /* CACHED */)), _createVNode(_component_router_link, {\n    to: \"/login\"\n  }, {\n    default: _withCtx(() => [...(_cache[26] || (_cache[26] = [_createTextVNode(\"立即登录\", -1 /* CACHED */)]))]),\n    _: 1 /* STABLE */\n  })])], 32 /* NEED_HYDRATION */)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onSubmit","_cache","_withModifiers","args","$setup","handleSubmit","_hoisted_3","form","phone","$event","type","_normalizeClass","errors","placeholder","_hoisted_4","_toDisplayString","_hoisted_5","password","_hoisted_6","_hoisted_7","nickname","_hoisted_8","_hoisted_9","user_type","_hoisted_10","_createCommentVNode","_Fragment","key","_hoisted_11","farm_name","_hoisted_12","_hoisted_13","farm_address","_hoisted_14","_hoisted_15","farm_size","step","number","_hoisted_16","_hoisted_17","shipping_address","_hoisted_18","_hoisted_19","expertise_field","_hoisted_20","_hoisted_21","work_experience","_hoisted_22","_hoisted_23","bank_name","_hoisted_24","_hoisted_25","branch_name","_hoisted_26","disabled","loading","_hoisted_27","_hoisted_28","_createVNode","_component_router_link","to"],"sources":["D:\\STUDY\\FarmerHappy\\farmer_happy\\src\\components\\Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"auth-container\">\r\n    <div class=\"auth-card\">\r\n      <h1 class=\"auth-title\">注册农乐平台</h1>\r\n      <form @submit.prevent=\"handleSubmit\">\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">手机号</label>\r\n          <input\r\n            v-model=\"form.phone\"\r\n            type=\"tel\"\r\n            class=\"form-input\"\r\n            :class=\"{ 'error': errors.phone }\"\r\n            placeholder=\"请输入手机号\"\r\n          />\r\n          <span v-if=\"errors.phone\" class=\"form-error\">{{ errors.phone }}</span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">密码</label>\r\n          <input\r\n            v-model=\"form.password\"\r\n            type=\"password\"\r\n            class=\"form-input\"\r\n            :class=\"{ 'error': errors.password }\"\r\n            placeholder=\"请输入密码（8-32位，包含大小写字母和数字）\"\r\n          />\r\n          <span v-if=\"errors.password\" class=\"form-error\">{{ errors.password }}</span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">昵称</label>\r\n          <input\r\n            v-model=\"form.nickname\"\r\n            type=\"text\"\r\n            class=\"form-input\"\r\n            :class=\"{ 'error': errors.nickname }\"\r\n            placeholder=\"请输入昵称\"\r\n          />\r\n          <span v-if=\"errors.nickname\" class=\"form-error\">{{ errors.nickname }}</span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">用户类型</label>\r\n          <select\r\n            v-model=\"form.user_type\"\r\n            class=\"form-input\"\r\n            :class=\"{ 'error': errors.user_type }\"\r\n          >\r\n            <option value=\"\">请选择用户类型</option>\r\n            <option value=\"farmer\">农户</option>\r\n            <option value=\"buyer\">买家</option>\r\n            <option value=\"expert\">技术专家</option>\r\n            <option value=\"bank\">银行</option>\r\n          </select>\r\n          <span v-if=\"errors.user_type\" class=\"form-error\">{{ errors.user_type }}</span>\r\n        </div>\r\n\r\n        <!-- 农户特定字段 -->\r\n        <template v-if=\"form.user_type === 'farmer'\">\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">农场名称</label>\r\n            <input\r\n              v-model=\"form.farm_name\"\r\n              type=\"text\"\r\n              class=\"form-input\"\r\n              :class=\"{ 'error': errors.farm_name }\"\r\n              placeholder=\"请输入农场名称\"\r\n            />\r\n            <span v-if=\"errors.farm_name\" class=\"form-error\">{{ errors.farm_name }}</span>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">农场地址</label>\r\n            <input\r\n              v-model=\"form.farm_address\"\r\n              type=\"text\"\r\n              class=\"form-input\"\r\n              :class=\"{ 'error': errors.farm_address }\"\r\n              placeholder=\"请输入农场地址\"\r\n            />\r\n            <span v-if=\"errors.farm_address\" class=\"form-error\">{{ errors.farm_address }}</span>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">农场面积（亩）</label>\r\n            <input\r\n              v-model.number=\"form.farm_size\"\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              class=\"form-input\"\r\n              :class=\"{ 'error': errors.farm_size }\"\r\n              placeholder=\"请输入农场面积\"\r\n            />\r\n            <span v-if=\"errors.farm_size\" class=\"form-error\">{{ errors.farm_size }}</span>\r\n          </div>\r\n        </template>\r\n\r\n        <!-- 买家特定字段 -->\r\n        <template v-if=\"form.user_type === 'buyer'\">\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">收货地址</label>\r\n            <input\r\n              v-model=\"form.shipping_address\"\r\n              type=\"text\"\r\n              class=\"form-input\"\r\n              :class=\"{ 'error': errors.shipping_address }\"\r\n              placeholder=\"请输入默认收货地址\"\r\n            />\r\n            <span v-if=\"errors.shipping_address\" class=\"form-error\">{{ errors.shipping_address }}</span>\r\n          </div>\r\n        </template>\r\n\r\n        <!-- 专家特定字段 -->\r\n        <template v-if=\"form.user_type === 'expert'\">\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">专业领域</label>\r\n            <input\r\n              v-model=\"form.expertise_field\"\r\n              type=\"text\"\r\n              class=\"form-input\"\r\n              :class=\"{ 'error': errors.expertise_field }\"\r\n              placeholder=\"请输入专业领域\"\r\n            />\r\n            <span v-if=\"errors.expertise_field\" class=\"form-error\">{{ errors.expertise_field }}</span>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">工作经验（年）</label>\r\n            <input\r\n              v-model.number=\"form.work_experience\"\r\n              type=\"number\"\r\n              class=\"form-input\"\r\n              :class=\"{ 'error': errors.work_experience }\"\r\n              placeholder=\"请输入工作经验年限\"\r\n            />\r\n            <span v-if=\"errors.work_experience\" class=\"form-error\">{{ errors.work_experience }}</span>\r\n          </div>\r\n        </template>\r\n\r\n        <!-- 银行特定字段 -->\r\n        <template v-if=\"form.user_type === 'bank'\">\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">银行名称</label>\r\n            <input\r\n              v-model=\"form.bank_name\"\r\n              type=\"text\"\r\n              class=\"form-input\"\r\n              :class=\"{ 'error': errors.bank_name }\"\r\n              placeholder=\"请输入银行名称\"\r\n            />\r\n            <span v-if=\"errors.bank_name\" class=\"form-error\">{{ errors.bank_name }}</span>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">分行名称</label>\r\n            <input\r\n              v-model=\"form.branch_name\"\r\n              type=\"text\"\r\n              class=\"form-input\"\r\n              :class=\"{ 'error': errors.branch_name }\"\r\n              placeholder=\"请输入分行名称\"\r\n            />\r\n            <span v-if=\"errors.branch_name\" class=\"form-error\">{{ errors.branch_name }}</span>\r\n          </div>\r\n        </template>\r\n\r\n        <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"loading\">\r\n          {{ loading ? '注册中...' : '注册' }}\r\n        </button>\r\n\r\n        <div class=\"auth-switch\">\r\n          已有账号？\r\n          <router-link to=\"/login\">立即登录</router-link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted, onUnmounted, watch } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { authService } from '../api/auth';\r\nimport logger from '../utils/logger';\r\n\r\nexport default {\r\n  name: 'Register',\r\n  setup() {\r\n    const router = useRouter();\r\n    const loading = ref(false);\r\n    const form = reactive({\r\n      // 通用字段\r\n      phone: '',\r\n      password: '',\r\n      nickname: '',\r\n      user_type: '',\r\n      // 农户特定字段\r\n      farm_name: '',\r\n      farm_address: '',\r\n      farm_size: null,\r\n      // 买家特定字段\r\n      shipping_address: '',\r\n      // 专家特定字段\r\n      expertise_field: '',\r\n      work_experience: null,\r\n      // 银行特定字段\r\n      bank_name: '',\r\n      branch_name: ''\r\n    });\r\n    const errors = reactive({\r\n      // 通用字段\r\n      phone: '',\r\n      password: '',\r\n      nickname: '',\r\n      user_type: '',\r\n      // 农户特定字段\r\n      farm_name: '',\r\n      farm_address: '',\r\n      farm_size: '',\r\n      // 买家特定字段\r\n      shipping_address: '',\r\n      // 专家特定字段\r\n      expertise_field: '',\r\n      work_experience: '',\r\n      // 银行特定字段\r\n      bank_name: '',\r\n      branch_name: ''\r\n    });\r\n\r\n    onMounted(() => {\r\n      logger.lifecycle('Register', 'mounted');\r\n      logger.info('REGISTER_COMPONENT', '注册页面已加载');\r\n    });\r\n\r\n    onUnmounted(() => {\r\n      logger.lifecycle('Register', 'unmounted');\r\n    });\r\n\r\n    // 监听用户类型变化\r\n    watch(() => form.user_type, (newType, oldType) => {\r\n      logger.info('REGISTER_COMPONENT', '用户类型变化', {\r\n        from: oldType,\r\n        to: newType\r\n      });\r\n    });\r\n\r\n    const validateForm = () => {\r\n      logger.debug('REGISTER_COMPONENT', '开始验证注册表单', {\r\n        userType: form.user_type\r\n      });\r\n      \r\n      let isValid = true;\r\n      // Reset errors\r\n      Object.keys(errors).forEach(key => errors[key] = '');\r\n\r\n      // 通用字段验证\r\n      // Phone validation\r\n      if (!form.phone) {\r\n        errors.phone = '请输入手机号';\r\n        isValid = false;\r\n      } else if (!/^1[3-9]\\d{9}$/.test(form.phone)) {\r\n        errors.phone = '请输入有效的手机号';\r\n        isValid = false;\r\n      }\r\n\r\n      // Password validation\r\n      if (!form.password) {\r\n        errors.password = '请输入密码';\r\n        isValid = false;\r\n      } else if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,32}$/.test(form.password)) {\r\n        errors.password = '密码必须包含大小写字母和数字，长度8-32位';\r\n        isValid = false;\r\n      }\r\n\r\n      // Nickname validation\r\n      if (form.nickname && (form.nickname.length < 1 || form.nickname.length > 30)) {\r\n        errors.nickname = '昵称长度应在1-30个字符之间';\r\n        isValid = false;\r\n      }\r\n\r\n      // User type validation\r\n      if (!form.user_type) {\r\n        errors.user_type = '请选择用户类型';\r\n        isValid = false;\r\n      }\r\n\r\n      // 根据用户类型验证特定字段\r\n      if (form.user_type === 'farmer') {\r\n        logger.debug('REGISTER_COMPONENT', '验证农户特定字段');\r\n        // 农户特定字段验证\r\n        if (!form.farm_name) {\r\n          errors.farm_name = '请输入农场名称';\r\n          isValid = false;\r\n        } else if (form.farm_name.length > 100) {\r\n          errors.farm_name = '农场名称不能超过100个字符';\r\n          isValid = false;\r\n        }\r\n\r\n        if (form.farm_address && form.farm_address.length > 200) {\r\n          errors.farm_address = '农场地址不能超过200个字符';\r\n          isValid = false;\r\n        }\r\n\r\n        if (form.farm_size && (isNaN(form.farm_size) || form.farm_size < 0)) {\r\n          errors.farm_size = '请输入有效的农场面积';\r\n          isValid = false;\r\n        }\r\n      }\r\n\r\n      else if (form.user_type === 'buyer') {\r\n        logger.debug('REGISTER_COMPONENT', '验证买家特定字段');\r\n        // 买家特定字段验证\r\n        if (form.shipping_address && form.shipping_address.length > 500) {\r\n          errors.shipping_address = '收货地址不能超过500个字符';\r\n          isValid = false;\r\n        }\r\n      }\r\n\r\n      else if (form.user_type === 'expert') {\r\n        logger.debug('REGISTER_COMPONENT', '验证专家特定字段');\r\n        // 专家特定字段验证\r\n        if (!form.expertise_field) {\r\n          errors.expertise_field = '请输入专业领域';\r\n          isValid = false;\r\n        } else if (form.expertise_field.length > 100) {\r\n          errors.expertise_field = '专业领域不能超过100个字符';\r\n          isValid = false;\r\n        }\r\n\r\n        if (form.work_experience && (isNaN(form.work_experience) || form.work_experience < 0)) {\r\n          errors.work_experience = '请输入有效的工作经验年限';\r\n          isValid = false;\r\n        }\r\n      }\r\n\r\n      else if (form.user_type === 'bank') {\r\n        logger.debug('REGISTER_COMPONENT', '验证银行特定字段');\r\n        // 银行特定字段验证\r\n        if (!form.bank_name) {\r\n          errors.bank_name = '请输入银行名称';\r\n          isValid = false;\r\n        } else if (form.bank_name.length > 100) {\r\n          errors.bank_name = '银行名称不能超过100个字符';\r\n          isValid = false;\r\n        }\r\n\r\n        if (form.branch_name && form.branch_name.length > 100) {\r\n          errors.branch_name = '分行名称不能超过100个字符';\r\n          isValid = false;\r\n        }\r\n      }\r\n\r\n      logger.validation('RegisterForm', isValid, errors);\r\n      return isValid;\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n      logger.userAction('REGISTER_SUBMIT', {\r\n        phone: form.phone,\r\n        userType: form.user_type\r\n      });\r\n      \r\n      if (!validateForm()) {\r\n        logger.warn('REGISTER_COMPONENT', '表单验证失败', {\r\n          userType: form.user_type\r\n        });\r\n        return;\r\n      }\r\n\r\n      loading.value = true;\r\n      logger.info('REGISTER_COMPONENT', '开始提交注册请求', {\r\n        phone: form.phone,\r\n        userType: form.user_type\r\n      });\r\n      \r\n      try {\r\n        await authService.register(form);\r\n        logger.info('REGISTER_COMPONENT', '注册成功，准备跳转到登录页');\r\n        logger.navigation('/register', '/login');\r\n        \r\n        // 显示成功提示\r\n        alert('注册成功！即将跳转到登录页面');\r\n        router.push('/login');\r\n      } catch (error) {\r\n        logger.error('REGISTER_COMPONENT', '注册失败', {\r\n          phone: form.phone,\r\n          userType: form.user_type,\r\n          errorCode: error.code,\r\n          errorMessage: error.message || error\r\n        }, error);\r\n        \r\n        // 先清空所有错误信息\r\n        Object.keys(errors).forEach(key => errors[key] = '');\r\n        \r\n        // 根据错误码处理不同情况\r\n        if (error.code === 409) {\r\n          // 该手机号已注册此用户类型\r\n          errors.phone = '该手机号已注册此用户类型，请选择其他用户类型或直接登录';\r\n          logger.warn('REGISTER_COMPONENT', '该手机号已注册此用户类型', { \r\n            phone: form.phone,\r\n            userType: form.user_type\r\n          });\r\n        } else if (error.code === 400) {\r\n          // 可能是密码错误或参数验证失败\r\n          if (error.message === '密码错误') {\r\n            errors.password = '该手机号已存在，但密码不正确。如果您已注册过其他身份，请使用相同的密码';\r\n            logger.warn('REGISTER_COMPONENT', '手机号已存在但密码错误', { \r\n              phone: form.phone \r\n            });\r\n          } else if (error.message === '参数验证失败' && error.errors && error.errors.length > 0) {\r\n            // 处理字段级别的错误\r\n            console.log('参数验证失败，详细错误：', error.errors);\r\n            error.errors.forEach(err => {\r\n              console.log('处理错误字段：', err.field, err.message);\r\n              if (Object.prototype.hasOwnProperty.call(errors, err.field)) {\r\n                errors[err.field] = err.message;\r\n              } else {\r\n                // 如果前端没有对应的错误字段，显示在密码字段\r\n                console.warn('未找到对应的错误字段：', err.field);\r\n              }\r\n            });\r\n            logger.warn('REGISTER_COMPONENT', '参数验证失败', { errors: error.errors });\r\n          } else {\r\n            // 其他 400 错误\r\n            errors.password = error.message || '注册失败，请检查输入信息';\r\n            logger.warn('REGISTER_COMPONENT', '注册失败', { message: error.message });\r\n          }\r\n        } else if (error.code === 401) {\r\n          errors.password = '认证失败，请重新尝试';\r\n          logger.warn('REGISTER_COMPONENT', '认证失败');\r\n        } else {\r\n          // 500 或其他错误\r\n          errors.password = error.message || '注册失败，服务器内部错误，请稍后重试';\r\n          logger.error('REGISTER_COMPONENT', '注册出现无错误', { \r\n            code: error.code,\r\n            message: error.message \r\n          });\r\n        }\r\n      } finally {\r\n        loading.value = false;\r\n        logger.debug('REGISTER_COMPONENT', '注册请求处理完成');\r\n      }\r\n    };\r\n\r\n    return {\r\n      form,\r\n      errors,\r\n      loading,\r\n      handleSubmit\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import '../assets/styles/theme.css';\r\n\r\nselect.form-input {\r\n  appearance: none;\r\n  background-image: url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%23A0AEC0' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M6 9l6 6 6-6'/%3E%3C/svg%3E\");\r\n  background-repeat: no-repeat;\r\n  background-position: right 0.75rem center;\r\n  background-size: 16px;\r\n  padding-right: 2.5rem;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
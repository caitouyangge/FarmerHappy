{"ast":null,"code":"import { ref, reactive, computed, watch, onMounted } from 'vue';\nimport { productService } from '../api/product';\nimport logger from '../utils/logger';\nexport default {\n  name: 'ProductForm',\n  props: {\n    product: {\n      type: Object,\n      default: null\n    },\n    isEdit: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['close', 'success'],\n  setup(props, {\n    emit\n  }) {\n    const loading = ref(false);\n    const userInfo = ref({});\n\n    // 表单数据\n    const form = reactive({\n      title: '',\n      category: '',\n      description: '',\n      price: '',\n      stock: '',\n      unit: '',\n      origin: '',\n      shelf_life: '',\n      growing_method: '',\n      status: 'draft'\n    });\n\n    // 表单验证错误\n    const errors = reactive({\n      title: '',\n      category: '',\n      description: '',\n      price: '',\n      stock: '',\n      unit: '',\n      origin: '',\n      shelf_life: '',\n      growing_method: ''\n    });\n\n    // 获取用户信息\n    onMounted(() => {\n      const storedUser = localStorage.getItem('user');\n      if (storedUser) {\n        try {\n          userInfo.value = JSON.parse(storedUser);\n        } catch (error) {\n          logger.error('PRODUCT_FORM', '解析用户信息失败', {}, error);\n        }\n      }\n\n      // 如果是编辑模式，填充表单数据\n      if (props.isEdit && props.product) {\n        Object.assign(form, {\n          title: props.product.title || '',\n          category: props.product.category || '',\n          description: props.product.description || '',\n          price: props.product.price || '',\n          stock: props.product.stock || '',\n          unit: props.product.unit || '',\n          origin: props.product.origin || '',\n          shelf_life: props.product.shelf_life || '',\n          growing_method: props.product.growing_method || '',\n          status: props.product.status || 'draft'\n        });\n      }\n    });\n\n    // 表单验证\n    const validateForm = () => {\n      logger.debug('PRODUCT_FORM', '开始验证表单');\n      let isValid = true;\n\n      // 清空错误信息\n      Object.keys(errors).forEach(key => {\n        errors[key] = '';\n      });\n\n      // 验证必填字段\n      if (!form.title.trim()) {\n        errors.title = '请输入产品标题';\n        isValid = false;\n      } else if (form.title.length > 100) {\n        errors.title = '产品标题不能超过100个字符';\n        isValid = false;\n      }\n      if (!form.category) {\n        errors.category = '请选择产品分类';\n        isValid = false;\n      }\n\n      // 验证描述\n      if (form.description && form.description.length > 500) {\n        errors.description = '产品描述不能超过500个字符';\n        isValid = false;\n      }\n\n      // 验证价格\n      if (form.price && (isNaN(form.price) || form.price < 0)) {\n        errors.price = '请输入有效的价格';\n        isValid = false;\n      }\n\n      // 验证库存\n      if (form.stock && (isNaN(form.stock) || form.stock < 0)) {\n        errors.stock = '请输入有效的库存数量';\n        isValid = false;\n      }\n\n      // 验证保质期\n      if (form.shelf_life && (isNaN(form.shelf_life) || form.shelf_life < 0)) {\n        errors.shelf_life = '请输入有效的保质期';\n        isValid = false;\n      }\n\n      // 验证产地\n      if (form.origin && form.origin.length > 50) {\n        errors.origin = '产地不能超过50个字符';\n        isValid = false;\n      }\n      logger.validation('ProductForm', isValid, errors);\n      return isValid;\n    };\n\n    // 提交表单\n    const handleSubmit = async () => {\n      logger.userAction('PRODUCT_FORM_SUBMIT', {\n        isEdit: props.isEdit,\n        productId: props.product?.product_id\n      });\n      if (!validateForm()) {\n        logger.warn('PRODUCT_FORM', '表单验证失败');\n        return;\n      }\n      loading.value = true;\n      try {\n        // 准备提交数据\n        const submitData = {\n          title: form.title.trim(),\n          category: form.category,\n          description: form.description.trim(),\n          price: form.price ? parseFloat(form.price) : null,\n          stock: form.stock ? parseInt(form.stock) : null,\n          unit: form.unit,\n          origin: form.origin.trim(),\n          shelf_life: form.shelf_life ? parseInt(form.shelf_life) : null,\n          growing_method: form.growing_method,\n          status: form.status\n        };\n        logger.info('PRODUCT_FORM', '开始提交产品数据', {\n          isEdit: props.isEdit,\n          data: submitData\n        });\n        let response;\n        if (props.isEdit) {\n          response = await productService.updateProduct(props.product.product_id, submitData);\n        } else {\n          response = await productService.createProduct(submitData);\n        }\n        logger.info('PRODUCT_FORM', '产品操作成功', {\n          isEdit: props.isEdit,\n          productId: response.data?.product_id\n        });\n        emit('success');\n      } catch (error) {\n        logger.error('PRODUCT_FORM', '产品操作失败', {\n          isEdit: props.isEdit,\n          errorMessage: error.message || error\n        }, error);\n\n        // 处理验证错误\n        if (error.errors && Array.isArray(error.errors)) {\n          error.errors.forEach(err => {\n            if (err.field && Object.prototype.hasOwnProperty.call(errors, err.field)) {\n              errors[err.field] = err.message;\n            }\n          });\n        } else {\n          alert('操作失败：' + (error.message || error));\n        }\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 关闭弹窗\n    const handleClose = () => {\n      logger.userAction('PRODUCT_FORM_CLOSE', {\n        isEdit: props.isEdit\n      });\n      emit('close');\n    };\n\n    // 点击遮罩层关闭\n    const handleOverlayClick = event => {\n      if (event.target === event.currentTarget) {\n        handleClose();\n      }\n    };\n    return {\n      loading,\n      form,\n      errors,\n      handleSubmit,\n      handleClose,\n      handleOverlayClick\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","watch","onMounted","productService","logger","name","props","product","type","Object","default","isEdit","Boolean","emits","setup","emit","loading","userInfo","form","title","category","description","price","stock","unit","origin","shelf_life","growing_method","status","errors","storedUser","localStorage","getItem","value","JSON","parse","error","assign","validateForm","debug","isValid","keys","forEach","key","trim","length","isNaN","validation","handleSubmit","userAction","productId","product_id","warn","submitData","parseFloat","parseInt","info","data","response","updateProduct","createProduct","errorMessage","message","Array","isArray","err","field","prototype","hasOwnProperty","call","alert","handleClose","handleOverlayClick","event","target","currentTarget"],"sources":["D:\\STUDY\\FarmerHappy\\farmer_happy\\src\\components\\ProductForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"modal-overlay\" @click=\"handleOverlayClick\">\r\n    <div class=\"modal-container\" @click.stop>\r\n      <div class=\"modal-header\">\r\n        <h2 class=\"modal-title\">{{ isEdit ? '编辑农产品' : '发布农产品' }}</h2>\r\n        <button class=\"close-btn\" @click=\"handleClose\">\r\n          <span class=\"close-icon\">×</span>\r\n        </button>\r\n      </div>\r\n\r\n      <form @submit.prevent=\"handleSubmit\" class=\"modal-form\">\r\n        <div class=\"form-content\">\r\n          <!-- 基本信息 -->\r\n          <div class=\"form-section\">\r\n            <h3 class=\"section-title\">基本信息</h3>\r\n            \r\n            <div class=\"form-group\">\r\n              <label class=\"form-label required\">产品标题</label>\r\n              <input\r\n                v-model=\"form.title\"\r\n                type=\"text\"\r\n                class=\"form-input\"\r\n                :class=\"{ 'error': errors.title }\"\r\n                placeholder=\"请输入产品标题\"\r\n                maxlength=\"100\"\r\n              />\r\n              <span v-if=\"errors.title\" class=\"form-error\">{{ errors.title }}</span>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label class=\"form-label required\">产品分类</label>\r\n              <select\r\n                v-model=\"form.category\"\r\n                class=\"form-input\"\r\n                :class=\"{ 'error': errors.category }\"\r\n              >\r\n                <option value=\"\">请选择产品分类</option>\r\n                <option value=\"蔬菜\">蔬菜</option>\r\n                <option value=\"水果\">水果</option>\r\n                <option value=\"粮食\">粮食</option>\r\n                <option value=\"肉类\">肉类</option>\r\n                <option value=\"禽蛋\">禽蛋</option>\r\n                <option value=\"水产\">水产</option>\r\n                <option value=\"其他\">其他</option>\r\n              </select>\r\n              <span v-if=\"errors.category\" class=\"form-error\">{{ errors.category }}</span>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label class=\"form-label\">产品描述</label>\r\n              <textarea\r\n                v-model=\"form.description\"\r\n                class=\"form-textarea\"\r\n                :class=\"{ 'error': errors.description }\"\r\n                placeholder=\"请详细描述您的产品特点、种植方式等\"\r\n                rows=\"4\"\r\n                maxlength=\"500\"\r\n              ></textarea>\r\n              <span v-if=\"errors.description\" class=\"form-error\">{{ errors.description }}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 价格和库存 -->\r\n          <div class=\"form-section\">\r\n            <h3 class=\"section-title\">价格和库存</h3>\r\n            \r\n            <div class=\"form-row\">\r\n              <div class=\"form-group\">\r\n                <label class=\"form-label\">价格 (元)</label>\r\n                <input\r\n                  v-model=\"form.price\"\r\n                  type=\"number\"\r\n                  class=\"form-input\"\r\n                  :class=\"{ 'error': errors.price }\"\r\n                  placeholder=\"0.00\"\r\n                  step=\"0.01\"\r\n                  min=\"0\"\r\n                />\r\n                <span v-if=\"errors.price\" class=\"form-error\">{{ errors.price }}</span>\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label class=\"form-label\">库存数量</label>\r\n                <input\r\n                  v-model=\"form.stock\"\r\n                  type=\"number\"\r\n                  class=\"form-input\"\r\n                  :class=\"{ 'error': errors.stock }\"\r\n                  placeholder=\"0\"\r\n                  min=\"0\"\r\n                />\r\n                <span v-if=\"errors.stock\" class=\"form-error\">{{ errors.stock }}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label class=\"form-label\">计量单位</label>\r\n              <select\r\n                v-model=\"form.unit\"\r\n                class=\"form-input\"\r\n                :class=\"{ 'error': errors.unit }\"\r\n              >\r\n                <option value=\"\">请选择计量单位</option>\r\n                <option value=\"斤\">斤</option>\r\n                <option value=\"公斤\">公斤</option>\r\n                <option value=\"吨\">吨</option>\r\n                <option value=\"个\">个</option>\r\n                <option value=\"箱\">箱</option>\r\n                <option value=\"袋\">袋</option>\r\n                <option value=\"包\">包</option>\r\n                <option value=\"件\">件</option>\r\n              </select>\r\n              <span v-if=\"errors.unit\" class=\"form-error\">{{ errors.unit }}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 产品规格 -->\r\n          <div class=\"form-section\">\r\n            <h3 class=\"section-title\">产品规格</h3>\r\n            \r\n            <div class=\"form-row\">\r\n              <div class=\"form-group\">\r\n                <label class=\"form-label\">产地</label>\r\n                <input\r\n                  v-model=\"form.origin\"\r\n                  type=\"text\"\r\n                  class=\"form-input\"\r\n                  :class=\"{ 'error': errors.origin }\"\r\n                  placeholder=\"请输入产品产地\"\r\n                  maxlength=\"50\"\r\n                />\r\n                <span v-if=\"errors.origin\" class=\"form-error\">{{ errors.origin }}</span>\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label class=\"form-label\">保质期 (天)</label>\r\n                <input\r\n                  v-model=\"form.shelf_life\"\r\n                  type=\"number\"\r\n                  class=\"form-input\"\r\n                  :class=\"{ 'error': errors.shelf_life }\"\r\n                  placeholder=\"0\"\r\n                  min=\"0\"\r\n                />\r\n                <span v-if=\"errors.shelf_life\" class=\"form-error\">{{ errors.shelf_life }}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label class=\"form-label\">种植方式</label>\r\n              <select\r\n                v-model=\"form.growing_method\"\r\n                class=\"form-input\"\r\n                :class=\"{ 'error': errors.growing_method }\"\r\n              >\r\n                <option value=\"\">请选择种植方式</option>\r\n                <option value=\"有机种植\">有机种植</option>\r\n                <option value=\"绿色种植\">绿色种植</option>\r\n                <option value=\"无公害种植\">无公害种植</option>\r\n                <option value=\"传统种植\">传统种植</option>\r\n                <option value=\"温室种植\">温室种植</option>\r\n                <option value=\"其他\">其他</option>\r\n              </select>\r\n              <span v-if=\"errors.growing_method\" class=\"form-error\">{{ errors.growing_method }}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- 发布设置 -->\r\n          <div class=\"form-section\" v-if=\"!isEdit\">\r\n            <h3 class=\"section-title\">发布设置</h3>\r\n            \r\n            <div class=\"form-group\">\r\n              <label class=\"form-label\">发布状态</label>\r\n              <div class=\"radio-group\">\r\n                <label class=\"radio-item\">\r\n                  <input\r\n                    v-model=\"form.status\"\r\n                    type=\"radio\"\r\n                    value=\"draft\"\r\n                    class=\"radio-input\"\r\n                  />\r\n                  <span class=\"radio-label\">保存为草稿</span>\r\n                </label>\r\n                <label class=\"radio-item\">\r\n                  <input\r\n                    v-model=\"form.status\"\r\n                    type=\"radio\"\r\n                    value=\"on_shelf\"\r\n                    class=\"radio-input\"\r\n                  />\r\n                  <span class=\"radio-label\">立即上架</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn-cancel\" @click=\"handleClose\">\r\n            取消\r\n          </button>\r\n          <button type=\"submit\" class=\"btn-submit\" :disabled=\"loading\">\r\n            {{ loading ? '保存中...' : (isEdit ? '更新' : '发布') }}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed, watch, onMounted } from 'vue';\r\nimport { productService } from '../api/product';\r\nimport logger from '../utils/logger';\r\n\r\nexport default {\r\n  name: 'ProductForm',\r\n  props: {\r\n    product: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    isEdit: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  emits: ['close', 'success'],\r\n  setup(props, { emit }) {\r\n    const loading = ref(false);\r\n    const userInfo = ref({});\r\n\r\n    // 表单数据\r\n    const form = reactive({\r\n      title: '',\r\n      category: '',\r\n      description: '',\r\n      price: '',\r\n      stock: '',\r\n      unit: '',\r\n      origin: '',\r\n      shelf_life: '',\r\n      growing_method: '',\r\n      status: 'draft'\r\n    });\r\n\r\n    // 表单验证错误\r\n    const errors = reactive({\r\n      title: '',\r\n      category: '',\r\n      description: '',\r\n      price: '',\r\n      stock: '',\r\n      unit: '',\r\n      origin: '',\r\n      shelf_life: '',\r\n      growing_method: ''\r\n    });\r\n\r\n    // 获取用户信息\r\n    onMounted(() => {\r\n      const storedUser = localStorage.getItem('user');\r\n      if (storedUser) {\r\n        try {\r\n          userInfo.value = JSON.parse(storedUser);\r\n        } catch (error) {\r\n          logger.error('PRODUCT_FORM', '解析用户信息失败', {}, error);\r\n        }\r\n      }\r\n\r\n      // 如果是编辑模式，填充表单数据\r\n      if (props.isEdit && props.product) {\r\n        Object.assign(form, {\r\n          title: props.product.title || '',\r\n          category: props.product.category || '',\r\n          description: props.product.description || '',\r\n          price: props.product.price || '',\r\n          stock: props.product.stock || '',\r\n          unit: props.product.unit || '',\r\n          origin: props.product.origin || '',\r\n          shelf_life: props.product.shelf_life || '',\r\n          growing_method: props.product.growing_method || '',\r\n          status: props.product.status || 'draft'\r\n        });\r\n      }\r\n    });\r\n\r\n    // 表单验证\r\n    const validateForm = () => {\r\n      logger.debug('PRODUCT_FORM', '开始验证表单');\r\n      let isValid = true;\r\n      \r\n      // 清空错误信息\r\n      Object.keys(errors).forEach(key => {\r\n        errors[key] = '';\r\n      });\r\n\r\n      // 验证必填字段\r\n      if (!form.title.trim()) {\r\n        errors.title = '请输入产品标题';\r\n        isValid = false;\r\n      } else if (form.title.length > 100) {\r\n        errors.title = '产品标题不能超过100个字符';\r\n        isValid = false;\r\n      }\r\n\r\n      if (!form.category) {\r\n        errors.category = '请选择产品分类';\r\n        isValid = false;\r\n      }\r\n\r\n      // 验证描述\r\n      if (form.description && form.description.length > 500) {\r\n        errors.description = '产品描述不能超过500个字符';\r\n        isValid = false;\r\n      }\r\n\r\n      // 验证价格\r\n      if (form.price && (isNaN(form.price) || form.price < 0)) {\r\n        errors.price = '请输入有效的价格';\r\n        isValid = false;\r\n      }\r\n\r\n      // 验证库存\r\n      if (form.stock && (isNaN(form.stock) || form.stock < 0)) {\r\n        errors.stock = '请输入有效的库存数量';\r\n        isValid = false;\r\n      }\r\n\r\n      // 验证保质期\r\n      if (form.shelf_life && (isNaN(form.shelf_life) || form.shelf_life < 0)) {\r\n        errors.shelf_life = '请输入有效的保质期';\r\n        isValid = false;\r\n      }\r\n\r\n      // 验证产地\r\n      if (form.origin && form.origin.length > 50) {\r\n        errors.origin = '产地不能超过50个字符';\r\n        isValid = false;\r\n      }\r\n\r\n      logger.validation('ProductForm', isValid, errors);\r\n      return isValid;\r\n    };\r\n\r\n    // 提交表单\r\n    const handleSubmit = async () => {\r\n      logger.userAction('PRODUCT_FORM_SUBMIT', { \r\n        isEdit: props.isEdit,\r\n        productId: props.product?.product_id \r\n      });\r\n\r\n      if (!validateForm()) {\r\n        logger.warn('PRODUCT_FORM', '表单验证失败');\r\n        return;\r\n      }\r\n\r\n      loading.value = true;\r\n      try {\r\n        // 准备提交数据\r\n        const submitData = {\r\n          title: form.title.trim(),\r\n          category: form.category,\r\n          description: form.description.trim(),\r\n          price: form.price ? parseFloat(form.price) : null,\r\n          stock: form.stock ? parseInt(form.stock) : null,\r\n          unit: form.unit,\r\n          origin: form.origin.trim(),\r\n          shelf_life: form.shelf_life ? parseInt(form.shelf_life) : null,\r\n          growing_method: form.growing_method,\r\n          status: form.status\r\n        };\r\n\r\n        logger.info('PRODUCT_FORM', '开始提交产品数据', { \r\n          isEdit: props.isEdit,\r\n          data: submitData \r\n        });\r\n\r\n        let response;\r\n        if (props.isEdit) {\r\n          response = await productService.updateProduct(props.product.product_id, submitData);\r\n        } else {\r\n          response = await productService.createProduct(submitData);\r\n        }\r\n\r\n        logger.info('PRODUCT_FORM', '产品操作成功', { \r\n          isEdit: props.isEdit,\r\n          productId: response.data?.product_id \r\n        });\r\n\r\n        emit('success');\r\n      } catch (error) {\r\n        logger.error('PRODUCT_FORM', '产品操作失败', {\r\n          isEdit: props.isEdit,\r\n          errorMessage: error.message || error\r\n        }, error);\r\n\r\n        // 处理验证错误\r\n        if (error.errors && Array.isArray(error.errors)) {\r\n          error.errors.forEach(err => {\r\n            if (err.field && Object.prototype.hasOwnProperty.call(errors, err.field)) {\r\n              errors[err.field] = err.message;\r\n            }\r\n          });\r\n        } else {\r\n          alert('操作失败：' + (error.message || error));\r\n        }\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    // 关闭弹窗\r\n    const handleClose = () => {\r\n      logger.userAction('PRODUCT_FORM_CLOSE', { isEdit: props.isEdit });\r\n      emit('close');\r\n    };\r\n\r\n    // 点击遮罩层关闭\r\n    const handleOverlayClick = (event) => {\r\n      if (event.target === event.currentTarget) {\r\n        handleClose();\r\n      }\r\n    };\r\n\r\n    return {\r\n      loading,\r\n      form,\r\n      errors,\r\n      handleSubmit,\r\n      handleClose,\r\n      handleOverlayClick\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import '../assets/styles/theme.css';\r\n\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n  padding: 1rem;\r\n}\r\n\r\n.modal-container {\r\n  background: var(--white);\r\n  border-radius: 16px;\r\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);\r\n  width: 100%;\r\n  max-width: 800px;\r\n  max-height: 90vh;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.modal-header {\r\n  padding: 1.5rem 2rem;\r\n  border-bottom: 1px solid var(--gray-200);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.modal-title {\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n  color: var(--primary);\r\n  margin: 0;\r\n}\r\n\r\n.close-btn {\r\n  width: 32px;\r\n  height: 32px;\r\n  border: none;\r\n  background: transparent;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  transition: background 0.2s;\r\n}\r\n\r\n.close-btn:hover {\r\n  background: var(--gray-100);\r\n}\r\n\r\n.close-icon {\r\n  font-size: 1.5rem;\r\n  color: var(--gray-500);\r\n}\r\n\r\n.modal-form {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n}\r\n\r\n.form-content {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 2rem;\r\n}\r\n\r\n.form-section {\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.section-title {\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  color: #1a202c;\r\n  margin: 0 0 1rem 0;\r\n  padding-bottom: 0.5rem;\r\n  border-bottom: 2px solid var(--primary-light);\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.form-row {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 1rem;\r\n}\r\n\r\n.form-label {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  color: var(--gray-600);\r\n  font-size: 0.875rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.form-label.required::after {\r\n  content: ' *';\r\n  color: var(--error);\r\n}\r\n\r\n.form-input, .form-textarea {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  border: 1px solid var(--gray-300);\r\n  border-radius: 8px;\r\n  font-size: 0.875rem;\r\n  transition: all 0.2s;\r\n  background: var(--white);\r\n}\r\n\r\n.form-input:focus, .form-textarea:focus {\r\n  outline: none;\r\n  border-color: var(--primary);\r\n  box-shadow: 0 0 0 3px rgba(107, 70, 193, 0.1);\r\n}\r\n\r\n.form-input.error, .form-textarea.error {\r\n  border-color: var(--error);\r\n}\r\n\r\n.form-textarea {\r\n  resize: vertical;\r\n  min-height: 100px;\r\n}\r\n\r\n.form-error {\r\n  display: block;\r\n  color: var(--error);\r\n  font-size: 0.75rem;\r\n  margin-top: 0.25rem;\r\n}\r\n\r\n.radio-group {\r\n  display: flex;\r\n  gap: 1rem;\r\n}\r\n\r\n.radio-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.radio-input {\r\n  accent-color: var(--primary);\r\n}\r\n\r\n.radio-label {\r\n  font-size: 0.875rem;\r\n  color: var(--gray-600);\r\n}\r\n\r\n.modal-footer {\r\n  padding: 1.5rem 2rem;\r\n  border-top: 1px solid var(--gray-200);\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 1rem;\r\n}\r\n\r\n.btn-cancel, .btn-submit {\r\n  padding: 0.75rem 1.5rem;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 0.875rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.btn-cancel {\r\n  background: var(--gray-200);\r\n  color: var(--gray-600);\r\n}\r\n\r\n.btn-cancel:hover {\r\n  background: var(--gray-300);\r\n}\r\n\r\n.btn-submit {\r\n  background: var(--primary);\r\n  color: var(--white);\r\n}\r\n\r\n.btn-submit:hover:not(:disabled) {\r\n  background: var(--primary-dark);\r\n}\r\n\r\n.btn-submit:disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .modal-overlay {\r\n    padding: 0.5rem;\r\n  }\r\n\r\n  .modal-container {\r\n    max-height: 95vh;\r\n  }\r\n\r\n  .modal-header {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .form-content {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .form-row {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  .modal-footer {\r\n    padding: 1rem;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .btn-cancel, .btn-submit {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}